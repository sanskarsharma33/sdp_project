[{"C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\Components\\Login.js":"2","C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\Components\\Navbar.js":"3","C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\App.js":"4","C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\http-common.js":"5","C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\index.js":"6","C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\Components\\Register.js":"7","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\App.js":"8","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Navbar.js":"9","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Login.js":"10","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\messages.js":"11","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\index.js":"12","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\auth.js":"13","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\errors.js":"14","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\messages.js":"15","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\store.js":"16","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\auth.js":"17","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\index.js":"18","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\http-common.js":"19","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\types.js":"20","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Header.js":"21","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reportWebVitals.js":"22","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerRegister.js":"23","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorRegister.js":"24","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Home.js":"25"},{"size":362,"mtime":1607875083247,"results":"26","hashOfConfig":"27"},{"size":1117,"mtime":1609263094262,"results":"28","hashOfConfig":"27"},{"size":0,"mtime":1609249711674,"results":"29","hashOfConfig":"27"},{"size":1070,"mtime":1609261699961,"results":"30","hashOfConfig":"27"},{"size":166,"mtime":1609258191035,"results":"31","hashOfConfig":"27"},{"size":500,"mtime":1607875083247,"results":"32","hashOfConfig":"27"},{"size":0,"mtime":1609254375353,"results":"33","hashOfConfig":"27"},{"size":1378,"mtime":1609350522373,"results":"34","hashOfConfig":"35"},{"size":0,"mtime":1609249711674,"results":"36","hashOfConfig":"35"},{"size":2489,"mtime":1609324631251,"results":"37","hashOfConfig":"35"},{"size":327,"mtime":1609316437721,"results":"38","hashOfConfig":"35"},{"size":210,"mtime":1609316856111,"results":"39","hashOfConfig":"35"},{"size":1529,"mtime":1609351513396,"results":"40","hashOfConfig":"35"},{"size":356,"mtime":1609316756261,"results":"41","hashOfConfig":"35"},{"size":273,"mtime":1609316791274,"results":"42","hashOfConfig":"35"},{"size":398,"mtime":1609316882950,"results":"43","hashOfConfig":"35"},{"size":3539,"mtime":1609351268130,"results":"44","hashOfConfig":"35"},{"size":500,"mtime":1607875083247,"results":"45","hashOfConfig":"35"},{"size":166,"mtime":1609258191035,"results":"46","hashOfConfig":"35"},{"size":454,"mtime":1609315247986,"results":"47","hashOfConfig":"35"},{"size":2351,"mtime":1609351546433,"results":"48","hashOfConfig":"35"},{"size":362,"mtime":1607875083247,"results":"49","hashOfConfig":"35"},{"size":4938,"mtime":1609331387786,"results":"50","hashOfConfig":"35"},{"size":7513,"mtime":1609333802559,"results":"51","hashOfConfig":"35"},{"size":207,"mtime":1609350497577,"results":"52","hashOfConfig":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ncfrhh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ftc8x9",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\Components\\Login.js",[],"C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\Components\\Navbar.js",[],"C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\App.js",["112","113","114","115"],"C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\http-common.js",[],"C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\index.js",[],"C:\\Users\\ASUS\\Documents\\temp\\frontend\\src\\Components\\Register.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\App.js",["116","117","118"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Navbar.js",[],["119","120"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Login.js",["121","122"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\messages.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\index.js",[],["123","124"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\auth.js",["125"],"import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n  } from '../actions/types';\r\n\r\n  \r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                user:action.payload.user,\r\n                token:action.payload.token,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\errors.js",["126"],"import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\messages.js",["127"],"import { CREATE_MESSAGE } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\store.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\auth.js",["128"],"import axios from 'axios';\r\nimport { returnErrors } from './messages';\r\nimport http from '../http-common';\r\n\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n} from './types';\r\n\r\n// CHECK TOKEN & LOAD USER\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User Loading\r\n    dispatch({ type: USER_LOADING });\r\n    http\r\n    .get('/Authuser/get_user', tokenConfig(getState))\r\n    .then((res) => {\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data,\r\n        });\r\n    })\r\n    .catch((err) => {\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        dispatch({\r\n            type: AUTH_ERROR,\r\n        });\r\n    });\r\n};\r\n\r\n// LOGIN USER\r\nexport const login = (username, password) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  // Request Body\r\n  const body = JSON.stringify({ username, password });\r\n\r\n    http\r\n    .post('/Authuser/signin', body, config)\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data,\r\n        });\r\n    })\r\n    .catch((err) => {\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        });\r\n    });\r\n};\r\n\r\n// REGISTER CUSTOMER\r\nexport const registerCustomer = (data) => (dispatch) => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(data);\r\n    console.log(body);\r\n    http\r\n    .post('/Authuser/customer/register', body, config)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\n// REGISTER VENDOR\r\nexport const registerVendor = (data) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n      headers: {\r\n      'Content-Type': 'application/json',\r\n      },\r\n  };\r\n\r\n  // Request Body\r\n  const body = JSON.stringify(data);\r\n  http\r\n  .post('/Authuser/vendor/register', body, config)\r\n  .then((res) => {\r\n    console.log(res);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(returnErrors(err.response.data, err.response.status));\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  });\r\n};\r\n\r\n// LOGOUT USER\r\nexport const logout = () => (dispatch, getState) => {\r\n    http\r\n    .get('/Authuser/logout', tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({ type: 'CLEAR_LEADS' });\r\n      dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n    });\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n  // Get token from state\r\n  const token = getState().auth.token;\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  // If token, add to headers config\r\n  if (token) {\r\n    config.headers['Authorization'] = `Token ${token}`;\r\n  }\r\n\r\n  return config;\r\n};","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\index.js",[],["129","130"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\http-common.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\types.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Header.js",["131"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reportWebVitals.js",[],["132","133"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerRegister.js",["134","135"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorRegister.js",["136","137","138","139"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport http from '../http-common';\r\nimport {connect} from 'react-redux';\r\nimport { registerVendor } from '../actions/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport class VendorRegister extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        is_vendor: true,\r\n        password: '',\r\n        password2: '',\r\n        shop_name: '', \r\n        address: '', \r\n        location_long: null, \r\n        location_lat: null, \r\n        pincode: '', \r\n        cod_available: true, \r\n        transaction_id: '', \r\n        is_active: false\r\n    };\r\n    \r\n    static propTypes = {\r\n        registerVendor: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.registerVendor(this.state);\r\n    };\r\n    \r\n    onChange = (e) =>{ \r\n        console.log(e.target.name);\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const { username, password, password2, first_name, last_name, phone, is_vendor, email, \r\n            shop_name, address, location_long, location_lat, pincode, cod_available, transaction_id, is_active } = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                <h2 className=\"text-center\">Login</h2>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        onChange={this.onChange}\r\n                        value={username}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>firstname</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"first_name\"\r\n                        onChange={this.onChange}\r\n                        value={first_name}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>lastname</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"last_name\"\r\n                        onChange={this.onChange}\r\n                        value={last_name}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>email</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        onChange={this.onChange}\r\n                        value={email}\r\n                    />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        onChange={this.onChange}\r\n                        value={password}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Password2</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password2\"\r\n                        onChange={this.onChange}\r\n                        value={password2}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Phone</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"phone\"\r\n                        onChange={this.onChange}\r\n                        value={phone}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Shop name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"shop_name\"\r\n                        onChange={this.onChange}\r\n                        value={shop_name}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Address</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"address\"\r\n                        onChange={this.onChange}\r\n                        value={address}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Location Longitude</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        name=\"location_long\"\r\n                        onChange={this.onChange}\r\n                        value={location_long}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Location Lattitude</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        name=\"location_lat\"\r\n                        onChange={this.onChange}\r\n                        value={location_lat}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Pincode</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"pincode\"\r\n                        onChange={this.onChange}\r\n                        value={pincode}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Transaction id</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"transaction_id\"\r\n                        onChange={this.onChange}\r\n                        value={transaction_id}\r\n                    />\r\n                    </div>\r\n                    <input hidden name=\"is_vendor\" value={is_vendor}></input>\r\n                    <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Register\r\n                    </button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { registerVendor})(VendorRegister);","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Home.js",[],{"ruleId":"140","severity":1,"message":"141","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":13},{"ruleId":"140","severity":1,"message":"144","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":16},{"ruleId":"140","severity":1,"message":"145","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":14},{"ruleId":"140","severity":1,"message":"146","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":13},{"ruleId":"140","severity":1,"message":"147","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"140","severity":1,"message":"148","line":3,"column":50,"nodeType":"142","messageId":"143","endLine":3,"endColumn":58},{"ruleId":"140","severity":1,"message":"149","line":5,"column":22,"nodeType":"142","messageId":"143","endLine":5,"endColumn":35},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"140","severity":1,"message":"154","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":12},{"ruleId":"140","severity":1,"message":"155","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":14},{"ruleId":"150","replacedBy":"156"},{"ruleId":"152","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":20,"column":1,"nodeType":"160","endLine":59,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":8,"column":1,"nodeType":"160","endLine":18,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":5,"column":1,"nodeType":"160","endLine":12,"endColumn":2},{"ruleId":"140","severity":1,"message":"146","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"150","replacedBy":"161"},{"ruleId":"152","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":64,"column":13,"nodeType":"165","endLine":64,"endColumn":50},{"ruleId":"150","replacedBy":"166"},{"ruleId":"152","replacedBy":"167"},{"ruleId":"140","severity":1,"message":"154","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":12},{"ruleId":"140","severity":1,"message":"155","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":14},{"ruleId":"140","severity":1,"message":"154","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":12},{"ruleId":"140","severity":1,"message":"155","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":14},{"ruleId":"140","severity":1,"message":"168","line":49,"column":71,"nodeType":"142","messageId":"143","endLine":49,"endColumn":84},{"ruleId":"140","severity":1,"message":"169","line":49,"column":102,"nodeType":"142","messageId":"143","endLine":49,"endColumn":111},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'Navbar' is defined but never used.","'axios' is defined but never used.","'ReactDOM' is defined but never used.","'Redirect' is defined but never used.","'AlertProvider' is defined but never used.","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'http' is defined but never used.","'Link' is defined but never used.",["170"],["171"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["170"],["171"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["170"],["171"],"'cod_available' is assigned a value but never used.","'is_active' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]