[{"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\cart.js":"1","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\cart.js":"2","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\address.js":"3","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\order.js":"4"},{"size":2838,"mtime":1611861235661,"results":"5","hashOfConfig":"6"},{"size":2739,"mtime":1611861209919,"results":"7","hashOfConfig":"6"},{"size":6806,"mtime":1611861405186,"results":"8","hashOfConfig":"6"},{"size":1663,"mtime":1611861615946,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ftc8x9",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\cart.js",["20","21","22","23","24","25","26","27","28","29"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\cart.js",["30"],"import {tokenConfig} from './auth';\r\nimport http from '../http-common';\r\nimport {\r\n    CART_LOADED,\r\n    CART_ITEM_ADDED,\r\n    CART_ITEM_ADD_FAIL,\r\n    CART_LOADING,\r\n    CART_LOAD_FAIL,\r\n    CART_ITEM_DELETED,\r\n    CART_ITEM_DELETION_FAIL,\r\n    CART_ITEM_MODIFIED,\r\n    CART_ITEM_MODIFY_FAIL,\r\n} from './types';\r\nimport cart from '../reducers/cart';\r\n\r\nexport const addToCart = (data) => (dispatch, getState) => {\r\n    //dispatch({ CART_ITEM_ADDING });\r\n    const body = JSON.stringify(data);\r\n    http.post('ManageOrders/cart/', body, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res);\r\n            dispatch({\r\n                type: CART_ITEM_ADDED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: CART_ITEM_ADD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getCartItems = () => (dispatch, getState) => {\r\n    dispatch({type: CART_LOADING});\r\n    http.get('ManageOrders/cart/', tokenConfig(getState))\r\n        .then((res) => {\r\n            //console.log(res.data);\r\n            dispatch({\r\n                type: CART_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: CART_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const deleteCartItem = (id) => (dispatch, getState) => {\r\n    dispatch({type: CART_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.delete(`/ManageOrders/cart/${id}/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: CART_ITEM_DELETED,\r\n                payload: id,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: CART_ITEM_DELETION_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const modifyItemQuantity = (id, quantity) => (dispatch, getState) => {\r\n    const body = JSON.stringify({quantity});\r\n    var obj = {id: id, quantity: quantity};\r\n    http.put(`/ManageOrders/cart/${id}/`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: CART_ITEM_MODIFIED,\r\n                payload: obj,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: CART_ITEM_MODIFY_FAIL,\r\n            });\r\n        });\r\n};\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\address.js",["31","32","33","34","35"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getAddress, deleteAddress, addAddress} from '../actions/order';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport store from '../store';\r\n\r\nclass addProduct extends Component {\r\n    state = {\r\n        address_title: '',\r\n        address: '',\r\n        pincode: '',\r\n    };\r\n    static propTypes = {\r\n        addressLoaded: PropTypes.bool,\r\n        addressAdded: PropTypes.bool,\r\n        addressElementDelete: PropTypes.bool,\r\n        addressList: PropTypes.object,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getAddress(0);\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addAddress(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onAddressDelete = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.id);\r\n        this.props.deleteAddress(e.target.id);\r\n        // console.log(e.target.id)\r\n    };\r\n    handler() {\r\n        this.props.getAddress(0);\r\n    }\r\n    render() {\r\n        const {address, address_title, pincode} = this.state;\r\n        if (this.props.addressAdded) return <div>{this.handler()}</div>;\r\n        if (this.props.addressElementDelete) {\r\n            return <div>{this.handler()}</div>;\r\n        }\r\n        if (!this.props.addressLoaded) return <div>{this.handler()}</div>;\r\n\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br />\r\n                {console.log(this.props.addressList.length)}\r\n                {this.props.addressList.length === 0 ? (\r\n                    <div></div>\r\n                ) : (\r\n                    <center>\r\n                        <h2>Select Address</h2>\r\n                    </center>\r\n                )}\r\n                <br></br>\r\n                <br />\r\n                <center>\r\n                    <div className=\"card-group\">\r\n                        {this.props.addressList.map((item) => {\r\n                            return (\r\n                                <div\r\n                                    className=\"card\"\r\n                                    style={{\r\n                                        maxWidth: '15rem',\r\n                                        margin: '10px 10px 10px',\r\n                                    }}\r\n                                >\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">\r\n                                            {item.address_title}\r\n                                        </h5>\r\n                                        <p className=\"card-text\">\r\n                                            {item.address}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            {item.pincode}\r\n                                        </p>\r\n                                        <a\r\n                                            id={item.id}\r\n                                            className=\"btn btn-primary\"\r\n                                        >\r\n                                            Select\r\n                                        </a>\r\n                                        <a\r\n                                            onClick={this.onAddressDelete}\r\n                                            id={item.id}\r\n                                            className=\"btn btn-danger\"\r\n                                            style={{margin: '2px 2px 2px'}}\r\n                                        >\r\n                                            Delete\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </center>\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Add New Address</h2>\r\n                        <br />\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <div className=\"form-group\">\r\n                                <label>Address Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address_title\"\r\n                                    onChange={this.onChange}\r\n                                    value={address_title}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    onChange={this.onChange}\r\n                                    value={address}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>pincode</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"pincode\"\r\n                                    onChange={this.onChange}\r\n                                    value={pincode}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    addressAdded: state.order.addressAdded,\r\n    addressLoaded: state.order.addressLoaded,\r\n    addressElementDelete: state.order.addressElementDelete,\r\n    addressList: state.order.addressList,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAddress,\r\n    deleteAddress,\r\n    addAddress,\r\n})(addProduct);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\order.js",[],{"ruleId":"36","severity":1,"message":"37","line":11,"column":5,"nodeType":"38","messageId":"39","endLine":11,"endColumn":15},{"ruleId":"40","severity":1,"message":"41","line":23,"column":1,"nodeType":"42","endLine":97,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":43,"column":39,"nodeType":"45","messageId":"46","endLine":43,"endColumn":41},{"ruleId":"43","severity":1,"message":"44","line":62,"column":47,"nodeType":"45","messageId":"46","endLine":62,"endColumn":49},{"ruleId":"47","severity":1,"message":"48","line":63,"column":29,"nodeType":"49","messageId":"50","endLine":63,"endColumn":31},{"ruleId":"51","severity":1,"message":"52","line":65,"column":17,"nodeType":"38","messageId":"53","endLine":65,"endColumn":22},{"ruleId":"43","severity":1,"message":"44","line":66,"column":40,"nodeType":"45","messageId":"46","endLine":66,"endColumn":42},{"ruleId":"51","severity":1,"message":"52","line":79,"column":17,"nodeType":"38","messageId":"53","endLine":79,"endColumn":22},{"ruleId":"43","severity":1,"message":"44","line":80,"column":40,"nodeType":"45","messageId":"46","endLine":80,"endColumn":42},{"ruleId":"47","severity":1,"message":"54","line":81,"column":29,"nodeType":"49","messageId":"50","endLine":81,"endColumn":31},{"ruleId":"36","severity":1,"message":"55","line":14,"column":8,"nodeType":"38","messageId":"39","endLine":14,"endColumn":12},{"ruleId":"36","severity":1,"message":"56","line":3,"column":9,"nodeType":"38","messageId":"39","endLine":3,"endColumn":13},{"ruleId":"36","severity":1,"message":"57","line":3,"column":15,"nodeType":"38","messageId":"39","endLine":3,"endColumn":23},{"ruleId":"36","severity":1,"message":"58","line":7,"column":8,"nodeType":"38","messageId":"39","endLine":7,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":86,"column":41,"nodeType":"61","endLine":89,"endColumn":42},{"ruleId":"59","severity":1,"message":"60","line":92,"column":41,"nodeType":"61","endLine":97,"endColumn":42},"no-unused-vars","'LOGIN_FAIL' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'total' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'cart' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'store' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]