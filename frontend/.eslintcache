[{"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerRegister.js":"1","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Product.js":"2","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\ProductImages.js":"3","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\address.js":"4","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\messages.js":"5","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\order.js":"6","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\productList.js":"7","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\Cart.js":"8"},{"size":5712,"mtime":1611864272848,"results":"9","hashOfConfig":"10"},{"size":7507,"mtime":1611864274167,"results":"11","hashOfConfig":"10"},{"size":3862,"mtime":1611864227135,"results":"12","hashOfConfig":"10"},{"size":7022,"mtime":1611866128266,"results":"13","hashOfConfig":"10"},{"size":349,"mtime":1611864227148,"results":"14","hashOfConfig":"10"},{"size":1663,"mtime":1611864227148,"results":"15","hashOfConfig":"10"},{"size":2226,"mtime":1611864227163,"results":"16","hashOfConfig":"10"},{"size":3136,"mtime":1611866013054,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ftc8x9",{"filePath":"20","messages":"21","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerRegister.js",["36","37"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Product.js",["38","39","40","41","42","43","44","45","46","47","48"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\ProductImages.js",["49","50"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\address.js",["51","52","53","54","55"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getAddress, deleteAddress, addAddress} from '../actions/order';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport store from '../store';\r\n\r\nclass addProduct extends Component {\r\n    state = {\r\n        address_title: '',\r\n        address: '',\r\n        pincode: '',\r\n    };\r\n    static propTypes = {\r\n        addressLoaded: PropTypes.bool,\r\n        addressAdded: PropTypes.bool,\r\n        addressElementDelete: PropTypes.bool,\r\n        addressList: PropTypes.object,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getAddress(0);\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addAddress(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onAddressDelete = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.id);\r\n        this.props.deleteAddress(e.target.id);\r\n        // console.log(e.target.id)\r\n    };\r\n    handler() {\r\n        this.props.getAddress(0);\r\n    }\r\n    render() {\r\n        const {address, address_title, pincode} = this.state;\r\n        if (this.props.addressAdded) return <div>{this.handler()}</div>;\r\n        if (this.props.addressElementDelete) {\r\n            return <div>{this.handler()}</div>;\r\n        }\r\n        if (!this.props.addressLoaded) return <div>{this.handler()}</div>;\r\n\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br />\r\n                {console.log(this.props.addressList.length)}\r\n                {this.props.addressList.length === 0 ? (\r\n                    <div></div>\r\n                ) : (\r\n                    <center>\r\n                        <h2>Select Address</h2>\r\n                    </center>\r\n                )}\r\n                <br></br>\r\n                <br />\r\n                <center>\r\n                    <div className=\"card-group\">\r\n                        {this.props.addressList.map((item) => {\r\n                            return (\r\n                                <div\r\n                                    className=\"card\"\r\n                                    style={{\r\n                                        maxWidth: '15rem',\r\n                                        margin: '10px 10px 10px',\r\n                                    }}\r\n                                >\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">\r\n                                            {item.address_title}\r\n                                        </h5>\r\n                                        <p className=\"card-text\">\r\n                                            {item.address}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            {item.pincode}\r\n                                        </p>\r\n                                        <a\r\n                                            id={item.id}\r\n                                            className=\"btn btn-primary\"\r\n                                        >\r\n                                            Select\r\n                                        </a>\r\n                                        <a\r\n                                            onClick={this.onAddressDelete}\r\n                                            id={item.id}\r\n                                            className=\"btn btn-danger\"\r\n                                            style={{margin: '2px 2px 2px'}}\r\n                                        >\r\n                                            Delete\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </center>\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Add New Address</h2>\r\n                        <br />\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <div className=\"form-group\">\r\n                                <label>Address Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address_title\"\r\n                                    onChange={this.onChange}\r\n                                    value={address_title}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    onChange={this.onChange}\r\n                                    value={address}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>pincode</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"pincode\"\r\n                                    onChange={this.onChange}\r\n                                    value={pincode}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    addressAdded: state.order.addressAdded,\r\n    addressLoaded: state.order.addressLoaded,\r\n    addressElementDelete: state.order.addressElementDelete,\r\n    addressList: state.order.addressList,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAddress,\r\n    deleteAddress,\r\n    addAddress,\r\n})(addProduct);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\messages.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\order.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\productList.js",["56","57"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\Cart.js",["58","59","60"],"import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {Switch, Link, Redirect, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../style/Cart.css';\r\nimport CartCard from './CartCard';\r\nimport {getCartItems} from '../../actions/cart';\r\nimport {loadUser} from '../../actions/auth';\r\n\r\nclass Cart extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n        cart: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getCartItems();\r\n    }\r\n\r\n    calculateTotalAmount() {}\r\n\r\n    handler() {\r\n        this.props.getCartItems();\r\n    }\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            console.log(this.props.auth);\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.auth.user.is_vendor) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.cart.isCartLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        }\r\n        if (this.props.cart.cartUpdated) {\r\n            return <div>{this.props.getCartItems()}</div>;\r\n        }\r\n        let totalAmt = 0;\r\n        const cart = this.props.cart.cartItems;\r\n        const items =\r\n            cart && cart.length ? (\r\n                cart.map((element) => {\r\n                    totalAmt += element.product.amount * element.quantity;\r\n                    return (\r\n                        <div>\r\n                            <CartCard element={element} />\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : (\r\n                /**/\r\n                <div>No Items In Cart</div>\r\n            );\r\n        const len = cart && cart.length ? cart.length : 0;\r\n        return (\r\n            <div>\r\n                <h5 class=\"mb-4\">\r\n                    Cart (<span>{len}</span> items)\r\n                </h5>\r\n                {items}\r\n\r\n                <h3>Total Amount {this.props.cart.totalAmt}</h3>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Link to={`/Address`}>\r\n                    <button\r\n                        className=\"btn btn-success\"\r\n                        style={{width: '70rem'}}\r\n                    >\r\n                        Select Address\r\n                    </button>\r\n                </Link>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n    cart: state.cart,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getCartItems, loadUser})(Cart);\r\n",{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":6,"column":9,"nodeType":"63","messageId":"64","endLine":6,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"67","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"68","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":15},{"ruleId":"61","severity":1,"message":"65","line":6,"column":9,"nodeType":"63","messageId":"64","endLine":6,"endColumn":13},{"ruleId":"61","severity":1,"message":"69","line":6,"column":15,"nodeType":"63","messageId":"64","endLine":6,"endColumn":23},{"ruleId":"61","severity":1,"message":"70","line":6,"column":25,"nodeType":"63","messageId":"64","endLine":6,"endColumn":34},{"ruleId":"61","severity":1,"message":"71","line":9,"column":5,"nodeType":"63","messageId":"64","endLine":9,"endColumn":20},{"ruleId":"61","severity":1,"message":"72","line":10,"column":5,"nodeType":"63","messageId":"64","endLine":10,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":57,"column":41,"nodeType":"75","messageId":"76","endLine":57,"endColumn":43},{"ruleId":"77","severity":1,"message":"78","line":60,"column":45,"nodeType":"79","endLine":67,"endColumn":47},{"ruleId":"77","severity":1,"message":"78","line":72,"column":41,"nodeType":"79","endLine":76,"endColumn":43},{"ruleId":"61","severity":1,"message":"80","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":8,"column":9,"nodeType":"63","messageId":"64","endLine":8,"endColumn":13},{"ruleId":"61","severity":1,"message":"65","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"61","severity":1,"message":"69","line":3,"column":15,"nodeType":"63","messageId":"64","endLine":3,"endColumn":23},{"ruleId":"61","severity":1,"message":"81","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":86,"column":41,"nodeType":"79","endLine":89,"endColumn":42},{"ruleId":"82","severity":1,"message":"83","line":92,"column":41,"nodeType":"79","endLine":97,"endColumn":42},{"ruleId":"61","severity":1,"message":"84","line":7,"column":5,"nodeType":"63","messageId":"64","endLine":7,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":19,"column":1,"nodeType":"87","endLine":72,"endColumn":2},{"ruleId":"61","severity":1,"message":"88","line":6,"column":9,"nodeType":"63","messageId":"64","endLine":6,"endColumn":15},{"ruleId":"61","severity":1,"message":"89","line":6,"column":33,"nodeType":"63","messageId":"64","endLine":6,"endColumn":38},{"ruleId":"61","severity":1,"message":"90","line":48,"column":21,"nodeType":"63","messageId":"64","endLine":48,"endColumn":29},"no-unused-vars","'http' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'product' is defined but never used.","'Redirect' is defined but never used.","'useParams' is defined but never used.","'PRODUCT_LOADING' is defined but never used.","'PRODUCT_LOADED' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'element' is defined but never used.","'store' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'PRODUCT_DELETION_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Switch' is defined but never used.","'Route' is defined but never used.","'totalAmt' is assigned a value but never used."]