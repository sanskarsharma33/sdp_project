[{"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\App.js":"1","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\CustomerRegister.js":"2","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\VendorUpdate.js":"3","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\CustomerUpdate.js":"4","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Product.js":"5","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\address.js":"6","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\http-common.js":"7","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\productList.js":"8","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\messages.js":"9","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\product.js":"10","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\cart.js":"11","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\auth.js":"12","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\order.js":"13","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reportWebVitals.js":"14","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Alert.js":"15","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\addProduct.js":"16","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\CustomerProfile.js":"17","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\allProductImages.js":"18","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\auth.js":"19","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\cart.js":"20","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\productCard.js":"21","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\productList.js":"22","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\vendor.js":"23","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\VendorProfile.js":"24","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\index.js":"25","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\store.js":"26","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\ProductImages.js":"27","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\vendor.js":"28","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Cart\\CartCard.js":"29","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\errors.js":"30","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Header.js":"31","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\PaymentGateway\\Payment.js":"32","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\VendorRegister.js":"33","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Login.js":"34","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\editProduct.js":"35","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\order.js":"36","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\PaymentGateway\\CardSection.js":"37","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Home.js":"38","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\product.js":"39","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\messages.js":"40","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Cart\\Cart.js":"41","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\types.js":"42","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\PaymentGateway\\PaymentCard.js":"43","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\index.js":"44","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\payment.js":"45","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\PaymentGateway\\InjectedCheckout.js":"46"},{"size":6267,"mtime":1613765453467,"results":"47","hashOfConfig":"48"},{"size":5712,"mtime":1611864558892,"results":"49","hashOfConfig":"48"},{"size":8113,"mtime":1611864558922,"results":"50","hashOfConfig":"48"},{"size":4395,"mtime":1613764952369,"results":"51","hashOfConfig":"48"},{"size":7507,"mtime":1611864558919,"results":"52","hashOfConfig":"48"},{"size":6806,"mtime":1611864558925,"results":"53","hashOfConfig":"48"},{"size":178,"mtime":1611864558937,"results":"54","hashOfConfig":"48"},{"size":1222,"mtime":1611864558934,"results":"55","hashOfConfig":"48"},{"size":349,"mtime":1611864558931,"results":"56","hashOfConfig":"48"},{"size":3314,"mtime":1611864558945,"results":"57","hashOfConfig":"48"},{"size":2838,"mtime":1611864558941,"results":"58","hashOfConfig":"48"},{"size":2136,"mtime":1611864558940,"results":"59","hashOfConfig":"48"},{"size":1934,"mtime":1611864558944,"results":"60","hashOfConfig":"48"},{"size":467,"mtime":1611864558947,"results":"61","hashOfConfig":"48"},{"size":2386,"mtime":1611864558888,"results":"62","hashOfConfig":"48"},{"size":4598,"mtime":1611864558923,"results":"63","hashOfConfig":"48"},{"size":2440,"mtime":1611864558890,"results":"64","hashOfConfig":"48"},{"size":2624,"mtime":1611864558925,"results":"65","hashOfConfig":"48"},{"size":4734,"mtime":1613764736392,"results":"66","hashOfConfig":"48"},{"size":2739,"mtime":1611864558929,"results":"67","hashOfConfig":"48"},{"size":7948,"mtime":1611937725570,"results":"68","hashOfConfig":"48"},{"size":2226,"mtime":1611864558946,"results":"69","hashOfConfig":"48"},{"size":1260,"mtime":1611937664034,"results":"70","hashOfConfig":"48"},{"size":4408,"mtime":1611937555405,"results":"71","hashOfConfig":"48"},{"size":527,"mtime":1611864558938,"results":"72","hashOfConfig":"48"},{"size":405,"mtime":1611864558949,"results":"73","hashOfConfig":"48"},{"size":3862,"mtime":1611864558920,"results":"74","hashOfConfig":"48"},{"size":1377,"mtime":1611864558936,"results":"75","hashOfConfig":"48"},{"size":5557,"mtime":1611864558889,"results":"76","hashOfConfig":"48"},{"size":406,"mtime":1611864558941,"results":"77","hashOfConfig":"48"},{"size":6441,"mtime":1611979572416,"results":"78","hashOfConfig":"48"},{"size":1706,"mtime":1613766846453,"results":"79","hashOfConfig":"48"},{"size":8791,"mtime":1611864558921,"results":"80","hashOfConfig":"48"},{"size":2571,"mtime":1611864558917,"results":"81","hashOfConfig":"48"},{"size":6148,"mtime":1611864558927,"results":"82","hashOfConfig":"48"},{"size":1663,"mtime":1611864558931,"results":"83","hashOfConfig":"48"},{"size":1111,"mtime":1613752533495,"results":"84","hashOfConfig":"48"},{"size":3953,"mtime":1613722262178,"results":"85","hashOfConfig":"48"},{"size":6641,"mtime":1611864558932,"results":"86","hashOfConfig":"48"},{"size":297,"mtime":1611864558943,"results":"87","hashOfConfig":"48"},{"size":2920,"mtime":1611864558889,"results":"88","hashOfConfig":"48"},{"size":3013,"mtime":1613760809929,"results":"89","hashOfConfig":"48"},{"size":1692,"mtime":1613793839612,"results":"90","hashOfConfig":"48"},{"size":450,"mtime":1611864558942,"results":"91","hashOfConfig":"48"},{"size":777,"mtime":1613768474696,"results":"92","hashOfConfig":"48"},{"size":960,"mtime":1613768328865,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"r64zyw",{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"101"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"121"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"133"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"105"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"121"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"105"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"101"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"101"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"105"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\App.js",["222","223"],"import React, { Component, Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\n\r\nimport Login from \"./Components/Login\";\r\nimport Alert from \"./Components/Alert\";\r\nimport CustomerRegister from \"./Components/CustomerRegister\";\r\nimport VendorRegister from \"./Components/VendorRegister\";\r\nimport VendorUpdate from \"./Components/VendorUpdate\";\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Components/Home\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport VendorProfile from \"./Components/VendorProfile\";\r\nimport CustomerUpdate from \"./Components/CustomerUpdate\";\r\nimport CustomerProfile from \"./Components/CustomerProfile\";\r\nimport addProduct from \"./Components/addProduct\";\r\nimport Product from \"./Components/Product\";\r\nimport editProduct from \"./Components/editProduct\";\r\nimport ProductImages from \"./Components/ProductImages\";\r\nimport allProductImages from \"./Components/allProductImages\";\r\nimport Cart from \"./Components/Cart/Cart\";\r\nimport address from \"./Components/address\";\r\nimport Payment from \"./Components/PaymentGateway/Payment\";\r\n\r\n// Alert Options\r\nconst alertOptions = {\r\n    timeout: 5000,\r\n    position: \"top center\",\r\n};\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        store.dispatch(loadUser());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <AlertProvider template={AlertTemplate} {...alertOptions}>\r\n                    <Router>\r\n                        <Fragment>\r\n                            <Header />\r\n                            <Alert />\r\n                            <div className=\"container\">\r\n                                <Switch>\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Home/\"\r\n                                        component={Home}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/login/\"\r\n                                        component={Login}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/addProduct/\"\r\n                                        component={addProduct}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/:id\"\r\n                                        component={Product}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Address\"\r\n                                        component={address}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/UploadImages/:id\"\r\n                                        component={ProductImages}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/Images/:id\"\r\n                                        component={allProductImages}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/Edit/:id\"\r\n                                        component={editProduct}\r\n                                    />\r\n                                    <Route\r\n                                        path=\"/register/customer\"\r\n                                        component={CustomerRegister}\r\n                                    />\r\n                                    <Route\r\n                                        path=\"/register/vendor\"\r\n                                        component={VendorRegister}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/update/vendor\"\r\n                                        component={VendorUpdate}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/profile/vendor\"\r\n                                        component={VendorProfile}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/update/customer\"\r\n                                        component={CustomerUpdate}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/profile/customer\"\r\n                                        component={CustomerProfile}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/cart\"\r\n                                        component={Cart}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/paymentGateway/\"\r\n                                        component={Payment}\r\n                                    />\r\n                                </Switch>\r\n                            </div>\r\n                        </Fragment>\r\n                    </Router>\r\n                </AlertProvider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n",["224","225"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\CustomerRegister.js",["226","227"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport http from '../http-common';\r\nimport {connect} from 'react-redux';\r\nimport {registerCustomer} from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport class CustomerRegister extends Component {\r\n    state = {\r\n        username: null,\r\n        email: null,\r\n        first_name: null,\r\n        last_name: null,\r\n        phone: null,\r\n        is_vendor: false,\r\n        password: null,\r\n        password2: null,\r\n    };\r\n\r\n    static propTypes = {\r\n        registerCustomer: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n    // this.state.first_name, this.state.last_name,this.state.password,this.state.email, this.state.is_vendor, this.state.password2, this.state.username, this.state.phone\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.registerCustomer(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.name);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const {\r\n            username,\r\n            password,\r\n            password2,\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n            is_vendor,\r\n            email,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Login</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>firstname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"first_name\"\r\n                                onChange={this.onChange}\r\n                                value={first_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>lastname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"last_name\"\r\n                                onChange={this.onChange}\r\n                                value={last_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                onChange={this.onChange}\r\n                                value={email}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password2</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password2\"\r\n                                onChange={this.onChange}\r\n                                value={password2}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                onChange={this.onChange}\r\n                                value={phone}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            hidden\r\n                            name=\"is_vendor\"\r\n                            value={is_vendor}\r\n                        ></input>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {registerCustomer})(CustomerRegister);\r\n",["228","229"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\VendorUpdate.js",["230"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {loadVendor, updateVendor} from '../actions/vendor';\r\nimport {Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport class VendorUpdate extends Component {\r\n    state = {\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        shop_name: '',\r\n        address: '',\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: '',\r\n        cod_available: true,\r\n        transaction_id: '',\r\n        isLoading: true,\r\n        flag: true,\r\n    };\r\n\r\n    static propTypes = {\r\n        vendor: PropTypes.object.isRequired,\r\n        auth: PropTypes.object.isRequired,\r\n        updateVendor: PropTypes.func.isRequired,\r\n        isFetching: PropTypes.bool,\r\n        isUpdated: PropTypes.bool,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.loadVendor();\r\n    }\r\n\r\n    UpdateState() {\r\n        this.setState(this.props.vendor);\r\n        //console.log(this.props.vendor);\r\n        this.setState(this.props.auth.user);\r\n        //console.log(this.state);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.flag) {\r\n            //console.log(this.props.vendor);\r\n            this.setState({flag: false});\r\n            this.UpdateState();\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.updateVendor(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.isUpdated) {\r\n            return <Redirect to=\"/profile/vendor\" />;\r\n        }\r\n        if (this.props.isFetching) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        } else {\r\n            const {\r\n                first_name,\r\n                last_name,\r\n                phone,\r\n                shop_name,\r\n                address,\r\n                location_long,\r\n                location_lat,\r\n                pincode,\r\n                cod_available,\r\n                transaction_id,\r\n            } = this.state;\r\n            return (\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Update Profile</h2>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>firstname</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"first_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={first_name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>lastname</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"last_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={last_name}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Phone</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"phone\"\r\n                                    onChange={this.onChange}\r\n                                    value={phone}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Shop name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"shop_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={shop_name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    onChange={this.onChange}\r\n                                    value={address}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Location Longitude</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"location_long\"\r\n                                    onChange={this.onChange}\r\n                                    value={location_long}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Location Lattitude</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"location_lat\"\r\n                                    onChange={this.onChange}\r\n                                    value={location_lat}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Pincode</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"pincode\"\r\n                                    onChange={this.onChange}\r\n                                    value={pincode}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Transaction id</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"transaction_id\"\r\n                                    onChange={this.onChange}\r\n                                    value={transaction_id}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    vendor: state.vendor.vendor,\r\n    auth: state.auth,\r\n    isFetching: state.vendor.isFetching,\r\n    isUpdated: state.vendor.isUpdated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateVendor, loadVendor})(\r\n    VendorUpdate\r\n);\r\n",["231","232"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\CustomerUpdate.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Product.js",["233","234","235","236","237","238","239","240","241","242","243"],"import React, {Component, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport product from '../reducers/product';\r\nimport {Link, Redirect, useParams} from 'react-router-dom';\r\nimport store from '../store';\r\nimport {\r\n    PRODUCT_LOADING,\r\n    PRODUCT_LOADED,\r\n    PRODUCT_REMOVED,\r\n} from '../actions/types';\r\nimport {getProduct} from '../actions/product';\r\n\r\nclass Product extends Component {\r\n    static propTypes = {\r\n        product: PropTypes.object,\r\n        isProductLoaded: PropTypes.bool,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let id = this.props.match.params.id;\r\n        console.log(id);\r\n        store.dispatch(getProduct(id));\r\n    }\r\n    componentWillUnmount() {\r\n        store.dispatch({type: PRODUCT_REMOVED});\r\n    }\r\n    render() {\r\n        // if (!this.props.isAuthenticated) {\r\n        //     return <Redirect to=\"/login\" />;\r\n        // }\r\n        if (this.props.isProductLoaded) {\r\n            // return <Redirect to=\"/\" />;\r\n\r\n            return (\r\n                <div>\r\n                    <div\r\n                        id=\"carouselExampleIndicators\"\r\n                        className=\"carousel slide\"\r\n                        data-ride=\"carousel\"\r\n                    >\r\n                        <ol className=\"carousel-indicators\">\r\n                            {this.props.product.image.map((img, index) => {\r\n                                return (\r\n                                    <li\r\n                                        data-target=\"#carouselExampleIndicators\"\r\n                                        data-slide-to={index}\r\n                                        className=\"active\"\r\n                                    ></li>\r\n                                );\r\n                            })}\r\n                        </ol>\r\n                        <div className=\"carousel-inner\">\r\n                            {this.props.product.image.map((img) => {\r\n                                if (img == this.props.product.image[0])\r\n                                    return (\r\n                                        <div className=\"carousel-item active\">\r\n                                            <img\r\n                                                className=\"d-block w-100\"\r\n                                                src={`http://127.0.0.1:8000${img}`}\r\n                                                style={{\r\n                                                    height: '30rem',\r\n                                                    width: '10rem',\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    );\r\n                                return (\r\n                                    <div className=\"carousel-item \">\r\n                                        <img\r\n                                            className=\"d-block w-100\"\r\n                                            src={`http://127.0.0.1:8000${img}`}\r\n                                            style={{height: '30rem'}}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <a\r\n                            className=\"carousel-control-prev\"\r\n                            href=\"#carouselExampleIndicators\"\r\n                            role=\"button\"\r\n                            data-slide=\"prev\"\r\n                        >\r\n                            <span\r\n                                className=\"carousel-control-prev-icon\"\r\n                                aria-hidden=\"true\"\r\n                            ></span>\r\n                            <span className=\"sr-only\">Previous</span>\r\n                        </a>\r\n                        <a\r\n                            className=\"carousel-control-next\"\r\n                            href=\"#carouselExampleIndicators\"\r\n                            role=\"button\"\r\n                            data-slide=\"next\"\r\n                        >\r\n                            <span\r\n                                className=\"carousel-control-next-icon\"\r\n                                aria-hidden=\"true\"\r\n                            ></span>\r\n                            <span className=\"sr-only\">Next</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\n// function Product(props) {\r\n//     let { id } = useParams();\r\n//     useEffect(() => {\r\n//         store.dispatch(getProduct(id));\r\n//       });\r\n\r\n//     console.log(\"HERE\")\r\n//     if (!props.isAuthenticated) {\r\n//         return <Redirect to=\"/login\" />;\r\n//     }\r\n//     if (!props.isProductLoaded) {\r\n//         return <Redirect to=\"/\" />;\r\n//     }\r\n//     return (\r\n//         <div>\r\n\r\n//             <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n//                 <ol className=\"carousel-indicators\">\r\n//                     {\r\n//                         props.product.image.map((img,index) =>{\r\n//                             return(\r\n//                                 <li data-target=\"#carouselExampleIndicators\" data-slide-to={index} className=\"active\"></li>\r\n//                             )\r\n//                         })\r\n//                     }\r\n//                 </ol>\r\n//                 <div className=\"carousel-inner\">\r\n//                     {\r\n//                         props.product.image.map(img =>{\r\n//                             if(img == props.product.image[0])\r\n//                                 return(\r\n//                                 <div className=\"carousel-item active\">\r\n//                                     <img className=\"d-block w-100\" src={`http://127.0.0.1:8000${img}`} />\r\n//                                 </div>)\r\n//                             return(\r\n//                                 <div className=\"carousel-item \">\r\n//                                     <img className=\"d-block w-100\" src={`http://127.0.0.1:8000${img}`} />\r\n//                                 </div>\r\n//                             )})\r\n//                     }\r\n//                 </div>\r\n//                 <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n//                     <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n//                     <span className=\"sr-only\">Previous</span>\r\n//                 </a>\r\n//                 <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n//                     <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n//                     <span className=\"sr-only\">Next</span>\r\n//                 </a>\r\n//                 </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// Product.propTypes = {\r\n//     product: PropTypes.object,\r\n//     isProductLoaded: PropTypes.bool,\r\n//     isAuthenticated: PropTypes.bool\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n    product: state.product.product,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isProductLoaded: state.product.isProductLoaded,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Product);\r\n",["244","245"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\address.js",["246","247","248","249","250"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getAddress, deleteAddress, addAddress} from '../actions/order';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport store from '../store';\r\n\r\nclass addProduct extends Component {\r\n    state = {\r\n        address_title: '',\r\n        address: '',\r\n        pincode: '',\r\n    };\r\n    static propTypes = {\r\n        addressLoaded: PropTypes.bool,\r\n        addressAdded: PropTypes.bool,\r\n        addressElementDelete: PropTypes.bool,\r\n        addressList: PropTypes.object,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getAddress(0);\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addAddress(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onAddressDelete = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.id);\r\n        this.props.deleteAddress(e.target.id);\r\n        // console.log(e.target.id)\r\n    };\r\n    handler() {\r\n        this.props.getAddress(0);\r\n    }\r\n    render() {\r\n        const {address, address_title, pincode} = this.state;\r\n        if (this.props.addressAdded) return <div>{this.handler()}</div>;\r\n        if (this.props.addressElementDelete) {\r\n            return <div>{this.handler()}</div>;\r\n        }\r\n        if (!this.props.addressLoaded) return <div>{this.handler()}</div>;\r\n\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br />\r\n                {console.log(this.props.addressList.length)}\r\n                {this.props.addressList.length === 0 ? (\r\n                    <div></div>\r\n                ) : (\r\n                    <center>\r\n                        <h2>Select Address</h2>\r\n                    </center>\r\n                )}\r\n                <br></br>\r\n                <br />\r\n                <center>\r\n                    <div className=\"card-group\">\r\n                        {this.props.addressList.map((item) => {\r\n                            return (\r\n                                <div\r\n                                    className=\"card\"\r\n                                    style={{\r\n                                        maxWidth: '15rem',\r\n                                        margin: '10px 10px 10px',\r\n                                    }}\r\n                                >\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">\r\n                                            {item.address_title}\r\n                                        </h5>\r\n                                        <p className=\"card-text\">\r\n                                            {item.address}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            {item.pincode}\r\n                                        </p>\r\n                                        <a\r\n                                            id={item.id}\r\n                                            className=\"btn btn-primary\"\r\n                                        >\r\n                                            Select\r\n                                        </a>\r\n                                        <a\r\n                                            onClick={this.onAddressDelete}\r\n                                            id={item.id}\r\n                                            className=\"btn btn-danger\"\r\n                                            style={{margin: '2px 2px 2px'}}\r\n                                        >\r\n                                            Delete\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </center>\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Add New Address</h2>\r\n                        <br />\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <div className=\"form-group\">\r\n                                <label>Address Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address_title\"\r\n                                    onChange={this.onChange}\r\n                                    value={address_title}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    onChange={this.onChange}\r\n                                    value={address}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>pincode</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"pincode\"\r\n                                    onChange={this.onChange}\r\n                                    value={pincode}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    addressAdded: state.order.addressAdded,\r\n    addressLoaded: state.order.addressLoaded,\r\n    addressElementDelete: state.order.addressElementDelete,\r\n    addressList: state.order.addressList,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAddress,\r\n    deleteAddress,\r\n    addAddress,\r\n})(addProduct);\r\n",["251","252"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\http-common.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\productList.js",["253"],"import {returnErrors} from './messages';\r\nimport http from '../http-common';\r\n\r\nimport {\r\n    PRODUCT_LIST_LOADED,\r\n    PRODUCT_LIST_LOADING,\r\n    PRODUCT_LIST_LOADING_FAIL,\r\n} from './types';\r\n\r\nexport const getAllProductList = () => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LIST_LOADING});\r\n    http.get('/ManageShops/products/all', tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_LIST_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: PRODUCT_LIST_LOADING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    return config;\r\n};\r\n",["254","255"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\messages.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\product.js",["256","257","258","259"],"import {\r\n    PRODUCT_LOADING,\r\n    PRODUCT_LOADED,\r\n    PRODUCT_LOADING_FAIL,\r\n    PRODUCT_ADDED,\r\n    PRODUCT_REMOVED,\r\n    PRODUCT_EDITED,\r\n    PRODUCT_EDIT_FAIL,\r\n    PRODUCT_DELETED,\r\n    PRODUCT_DELETION_FAIL,\r\n    PRODUCT_IMAGES_UPLOADED,\r\n    PRODUCT_IMAGES_UPLOAD_FAIL,\r\n    PRODUCT_IMAGES_LOADING,\r\n    PRODUCT_IMAGES_LOADED,\r\n    LOGOUT_SUCCESS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isProductLoading: false,\r\n    isProductAdded: false,\r\n    isProductLoaded: false,\r\n    product: null,\r\n    isProductUpdated: false,\r\n    isProductDeleted: false,\r\n    areProductImagesUploaded: false,\r\n    areImagesLoading: false,\r\n    areImagesLoaded: false,\r\n    productImages: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case PRODUCT_LOADING:\r\n            return {\r\n                ...state,\r\n                isProductLoading: true,\r\n                areProductImagesUploaded: false,\r\n            };\r\n        case PRODUCT_LOADED:\r\n            console.log('LOADED');\r\n            return {\r\n                ...state,\r\n                isProductLoaded: true,\r\n                isProductLoading: false,\r\n                product: action.payload,\r\n                areProductImagesUploaded: false,\r\n            };\r\n        case PRODUCT_REMOVED:\r\n        case PRODUCT_LOADING_FAIL:\r\n            return {\r\n                ...state,\r\n                product: null,\r\n                isProductLoaded: false,\r\n                isProductLoading: false,\r\n                areProductImagesUploaded: false,\r\n            };\r\n        case PRODUCT_ADDED:\r\n            return {\r\n                ...state,\r\n                areProductImagesUploaded: false,\r\n                isProductAdded: true,\r\n            };\r\n        case PRODUCT_EDITED:\r\n            return {\r\n                ...state,\r\n                areProductImagesUploaded: false,\r\n                isProductUpdated: true,\r\n            };\r\n        case PRODUCT_EDIT_FAIL:\r\n            return {\r\n                ...state,\r\n                areProductImagesUploaded: false,\r\n                isProductUpdated: false,\r\n            };\r\n        case PRODUCT_IMAGES_UPLOADED:\r\n            return {\r\n                ...state,\r\n                areProductImagesUploaded: true,\r\n            };\r\n        case PRODUCT_IMAGES_LOADING:\r\n            return {\r\n                ...state,\r\n                areImagesLoaded: false,\r\n                areImagesLoading: true,\r\n            };\r\n        case PRODUCT_IMAGES_LOADED:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                areImagesLoaded: true,\r\n                areImagesLoading: false,\r\n                productImages: action.payload,\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isProductLoading: false,\r\n                isProductAdded: false,\r\n                isProductLoaded: false,\r\n                product: null,\r\n                isProductUpdated: false,\r\n                isProductDeleted: false,\r\n                areProductImagesUploaded: false,\r\n                areImagesLoading: false,\r\n                areImagesLoaded: false,\r\n                productImages: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\cart.js",["260","261","262","263","264","265","266","267","268","269"],"import {\r\n    CART_ITEM_ADDED,\r\n    CART_ITEM_ADD_FAIL,\r\n    CART_LOADED,\r\n    CART_LOADING,\r\n    CART_LOAD_FAIL,\r\n    CART_ITEM_DELETED,\r\n    CART_ITEM_DELETION_FAIL,\r\n    CART_ITEM_MODIFIED,\r\n    CART_ITEM_MODIFY_FAIL,\r\n    LOGIN_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isItemAdded: false,\r\n    isCartLoading: false,\r\n    cartItems: null,\r\n    cartItemDeleted: false,\r\n    cartUpdated: false,\r\n    totalAmt: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CART_ITEM_ADDED:\r\n            return {\r\n                ...state,\r\n                cartUpdated: true,\r\n            };\r\n        case CART_ITEM_ADD_FAIL:\r\n            return {\r\n                ...state,\r\n                isItemAdded: false,\r\n            };\r\n        case CART_LOADING:\r\n            return {\r\n                ...state,\r\n                isCartLoading: true,\r\n                cartUpdated: false,\r\n            };\r\n        case CART_LOADED:\r\n            var total = 0;\r\n            action.payload.map((item) => {\r\n                total += item.quantity * item.product.amount;\r\n            });\r\n            return {\r\n                ...state,\r\n                cartItems: action.payload,\r\n                isCartLoading: false,\r\n                cartItemDeleted: false,\r\n                totalAmt: total,\r\n            };\r\n        case CART_LOAD_FAIL:\r\n        case CART_ITEM_DELETION_FAIL:\r\n        case CART_ITEM_MODIFY_FAIL:\r\n            return {\r\n                ...state,\r\n                cartItems: null,\r\n                isCartLoading: false,\r\n            };\r\n        case CART_ITEM_DELETED:\r\n            state.cartItems.map((item, index) => {\r\n                if (item.id == action.payload) state.cartItems.splice(index, 1);\r\n            });\r\n            var total = 0;\r\n            state.cartItems.map((item) => {\r\n                total += item.quantity * item.product.amount;\r\n            });\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems,\r\n                cartUpdated: false,\r\n                isCartLoading: false,\r\n                totalAmt: total,\r\n            };\r\n\r\n        case CART_ITEM_MODIFIED:\r\n            var obj = action.payload;\r\n            var total = 0;\r\n            state.cartItems.map((item) => {\r\n                if (item.id != obj.id)\r\n                    total += item.quantity * item.product.amount;\r\n                else {\r\n                    item.quantity = obj.quantity;\r\n                    total += obj.quantity * item.product.amount;\r\n                }\r\n            });\r\n            state.totalAmt = total;\r\n            return {\r\n                ...state,\r\n                totalAmt: total,\r\n                cartItems: state.cartItems,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\auth.js",["270","271","272","273"],"import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    UPDATE_SUCCESS,\r\n    UPDATE_FAIL,\r\n} from '../actions/types';\r\nimport {object} from 'prop-types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    user: null,\r\n    is_vendor: false,\r\n    isUpdated: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.payload,\r\n                is_vendor: action.payload.is_vendor,\r\n                isLoading: false,\r\n                is_vendor: action.payload.is_vendor,\r\n                isUpdated: false,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            // console.log(action.payload.values())\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                is_vendor: action.payload.user.is_vendor,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                isUpdated: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                isUpdated: false,\r\n            };\r\n        case UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isUpdated: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n",["274","275"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\order.js",["276","277","278","279","280","281","282","283","284","285","286","287"],"import {\r\n    CART_ITEM_ADDED,\r\n    CART_ITEM_ADD_FAIL,\r\n    CART_LOADED,\r\n    CART_LOADING,\r\n    CART_LOAD_FAIL,\r\n    CART_ITEM_DELETED,\r\n    CART_ITEM_DELETION_FAIL,\r\n    ADDRESS_LOADED,\r\n    ADDRESS_LOADING,\r\n    ADDRESS_LOADING_ERROR,\r\n    ADDRESS_DELETE_ERROR,\r\n    ADDRESS_DELETED,\r\n    ADDRESS_DELETING,\r\n    ADDRESS_ADDED,\r\n    ADDRESS_ADDING,\r\n    ADDRESS_ADDING_ERROR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    addressLoaded: false,\r\n    addressList: [],\r\n    addressElementDelete: false,\r\n    addressAdded: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADDRESS_LOADED:\r\n            return {\r\n                ...state,\r\n                addressLoaded: true,\r\n                addressAdded: false,\r\n                addressList: action.payload,\r\n                addressElementDelete: false,\r\n            };\r\n        case ADDRESS_LOADING_ERROR:\r\n            return {\r\n                ...state,\r\n                addressElementDelete: false,\r\n                addressAdded: false,\r\n                addressLoaded: false,\r\n                addressList: null,\r\n            };\r\n        case ADDRESS_DELETING:\r\n            console.log('DELETING');\r\n            return {\r\n                ...state,\r\n                addressAdded: false,\r\n                addressElementDelete: false,\r\n                addressLoaded: false,\r\n                addressList: [],\r\n            };\r\n        case ADDRESS_DELETED:\r\n            return {\r\n                ...state,\r\n                addressLoaded: true,\r\n                addressElementDelete: true,\r\n                addressList: [],\r\n                addressAdded: false,\r\n            };\r\n        case ADDRESS_ADDED:\r\n            return {\r\n                ...state,\r\n                addressAdded: true,\r\n                addressList: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reportWebVitals.js",[],["288","289"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Alert.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\addProduct.js",["290"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {add_Product} from '../actions/product';\r\nclass addProduct extends Component {\r\n    state = {\r\n        title: '',\r\n        catagory: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        details: '',\r\n        quantity: 0,\r\n    };\r\n    static propTypes = {\r\n        isProductAdded: PropTypes.bool,\r\n        add_Product: PropTypes.func.isRequired,\r\n        prop: PropTypes,\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.add_Product(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            title,\r\n            catagory,\r\n            amount,\r\n            discount,\r\n            details,\r\n            quantity,\r\n        } = this.state;\r\n        if (this.props.isProductAdded) {\r\n            return <Redirect to=\"/Home/\" />;\r\n        }\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Add Product</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Product Title</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                onChange={this.onChange}\r\n                                value={title}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Catagory</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"catagory\"\r\n                                onChange={this.onChange}\r\n                                value={catagory}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Details</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"details\"\r\n                                onChange={this.onChange}\r\n                                value={details}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>amount</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"amount\"\r\n                                onChange={this.onChange}\r\n                                value={amount}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Discount</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"discount\"\r\n                                onChange={this.onChange}\r\n                                value={discount}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Quantity</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"quantity\"\r\n                                onChange={this.onChange}\r\n                                value={quantity}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isProductAdded: state.product.isProductAdded,\r\n});\r\n\r\nexport default connect(mapStateToProps, {add_Product})(addProduct);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\CustomerProfile.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\allProductImages.js",["291","292","293"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\auth.js",["294","295"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\cart.js",["296"],"import {tokenConfig} from './auth';\r\nimport http from '../http-common';\r\nimport {\r\n    CART_LOADED,\r\n    CART_ITEM_ADDED,\r\n    CART_ITEM_ADD_FAIL,\r\n    CART_LOADING,\r\n    CART_LOAD_FAIL,\r\n    CART_ITEM_DELETED,\r\n    CART_ITEM_DELETION_FAIL,\r\n    CART_ITEM_MODIFIED,\r\n    CART_ITEM_MODIFY_FAIL,\r\n} from './types';\r\nimport cart from '../reducers/cart';\r\n\r\nexport const addToCart = (data) => (dispatch, getState) => {\r\n    //dispatch({ CART_ITEM_ADDING });\r\n    const body = JSON.stringify(data);\r\n    http.post('ManageOrders/cart/', body, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res);\r\n            dispatch({\r\n                type: CART_ITEM_ADDED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: CART_ITEM_ADD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getCartItems = () => (dispatch, getState) => {\r\n    dispatch({type: CART_LOADING});\r\n    http.get('ManageOrders/cart/', tokenConfig(getState))\r\n        .then((res) => {\r\n            //console.log(res.data);\r\n            dispatch({\r\n                type: CART_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: CART_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const deleteCartItem = (id) => (dispatch, getState) => {\r\n    dispatch({type: CART_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.delete(`/ManageOrders/cart/${id}/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: CART_ITEM_DELETED,\r\n                payload: id,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: CART_ITEM_DELETION_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const modifyItemQuantity = (id, quantity) => (dispatch, getState) => {\r\n    const body = JSON.stringify({quantity});\r\n    var obj = {id: id, quantity: quantity};\r\n    http.put(`/ManageOrders/cart/${id}/`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: CART_ITEM_MODIFIED,\r\n                payload: obj,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: CART_ITEM_MODIFY_FAIL,\r\n            });\r\n        });\r\n};\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\productCard.js",["297","298"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../style/productCard.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { delete_Product } from \"../actions/product\";\r\nimport { addToCart, getCartItems } from \"../actions/cart\";\r\n\r\nclass ProductCard extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes,\r\n        isProductLoaded: PropTypes.bool,\r\n        isProductDeleted: PropTypes.bool,\r\n        cartUpdated: PropTypes.bool,\r\n        cartItems: PropTypes.object.isRequired,\r\n        isCartLoading: PropTypes.bool,\r\n        auth: PropTypes.object.isRequired,\r\n    };\r\n    state = {\r\n        redirect: false,\r\n        Editredirect: false,\r\n        pid: 0,\r\n        quantity: 1,\r\n        flag: true,\r\n        isInCart: false,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        if (!this.props.auth.is_vendor) {\r\n            this.props.getCartItems();\r\n        }\r\n        /*this.props.cartItems.forEach((e) => {\r\n      if (e.product.id == this.props.element.id) {\r\n        this.setState({ isInCart: true });\r\n        this.setState({ quantity: e.quantity });\r\n      }\r\n    });*/\r\n    }\r\n\r\n    async UpdateState() {\r\n        await this.props.cartItems.forEach((e) => {\r\n            if (e.product.id === this.props.element.id) {\r\n                this.setState({ isInCart: true });\r\n                this.setState({ quantity: e.quantity });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.auth.is_vendor && !this.props.isCartLoading) {\r\n            if (this.state.flag) {\r\n                //console.log(this.props.vendor);\r\n                this.setState({ flag: false });\r\n                this.UpdateState();\r\n            }\r\n        }\r\n    }\r\n\r\n    addToCart = (e) => {\r\n        e.preventDefault();\r\n        this.state.pid = this.props.element.id;\r\n        this.state.quantity = 1;\r\n        this.props.addToCart(this.state);\r\n    };\r\n    onClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ redirect: true }, () => {\r\n            this.renderRedirect();\r\n        });\r\n    };\r\n    onEditClick = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Edit\");\r\n        this.setState({ Editredirect: true }, () => {\r\n            this.renderRedirect();\r\n        });\r\n    };\r\n    onDeleteClick = (e) => {\r\n        // e.preventDefault();\r\n        // store.dispatch({type:PRODUCT_LIST_UPDATING})\r\n        this.props.delete_Product(this.props.element.id);\r\n    };\r\n    onUploadImagesClick = (e) => {\r\n        // e.preventDefault();\r\n        // store.dispatch({type:PRODUCT_LIST_UPDATING})\r\n        return (\r\n            <Redirect to={`/Product/UploadImages/${this.props.element.id}`} />\r\n        );\r\n    };\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            console.log(\"renderRedirect\");\r\n            return <Redirect to={`/Product/${this.props.element.id}`} />;\r\n        }\r\n        if (this.state.Editredirect)\r\n            return <Redirect to={`/Product/Edit/${this.props.element.id}`} />;\r\n        if (this.props.isProductDeleted) this.props.handler();\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <div\r\n                    className=\"product\"\r\n                    style={{\r\n                        minHeight: \"30rem\",\r\n                        maxHeight: \"35rem\",\r\n                        maxWidth: \"25rem\",\r\n                        minWidth: \"15rem\",\r\n                    }}\r\n                >\r\n                    <div className=\"product__info\">\r\n                        <p>{this.props.element.title}</p>\r\n                        <p className=\"product__price\">\r\n                            <small>$</small>\r\n                            <strong>{this.props.element.amount}</strong>\r\n                        </p>\r\n                    </div>\r\n                    <img\r\n                        src={`http://127.0.0.1:8000${this.props.element.image[0]}`}\r\n                        alt=\"\"\r\n                    />\r\n                    {this.props.canEdit ? (\r\n                        <div>\r\n                            <Link\r\n                                to={`/Product/Images/${this.props.element.id}`}\r\n                            >\r\n                                <button> Images</button>\r\n                            </Link>\r\n                            <Link\r\n                                to={`/Product/UploadImages/${this.props.element.id}`}\r\n                            >\r\n                                <button> Add Images</button>\r\n                            </Link>\r\n                            <button onClick={this.onEditClick}>Edit</button>{\" \"}\r\n                            <button onClick={this.onDeleteClick}>Delete</button>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            {this.props.isCartLoading ? (\r\n                                <FontAwesomeIcon icon={faSpinner} />\r\n                            ) : (\r\n                                <div>\r\n                                    <button onClick={this.onClick}>Show</button>\r\n                                    {this.state.isInCart ? (\r\n                                        <span>Added To Cart</span>\r\n                                    ) : (\r\n                                        <button onClick={this.addToCart}>\r\n                                            Add To Cart\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n        // return (\r\n        //     <div style={{margin:\"20px 10px 10px\"}}>\r\n        //     {this.renderRedirect()}\r\n        //         <div className=\"card\" style={{maxWidth: \"20rem\"}}>\r\n        //             <img className=\"card-img\" src={`http://127.0.0.1:8000${this.props.element.image[0]}`} style={{maxHeight: \"20rem\", maxWidth: \"20rem\"}} alt=\"Vans\" ></img>\r\n        //             <div className=\"card-img-overlay d-flex justify-content-end\">\r\n        //             <a href=\"#\" className=\"card-link text-danger like\" style={{fontSize: \"1.5rem\"}}>\r\n        //                 <i className=\"fas fa-heart\"></i>\r\n        //             </a>\r\n        //             </div>\r\n        //             <div className=\"card-body\">\r\n        //                 <h4 className=\"card-title\">{this.props.element.title}</h4>\r\n        //                 {/* <h6 className=\"card-subtitle mb-2 text-muted\">Style: VA33TXRJ5</h6> */}\r\n        //                 <p className=\"card-text\">\r\n        //                     {this.props.element.details}\r\n        //                 </p>\r\n        //                 <div className=\"buy d-flex justify-content-between align-items-center\">\r\n        //                     <div className=\"price text-success\"><h5 className=\"mt-4\">${this.props.element.amount}</h5></div>\r\n        //                     <a href=\"#\" className=\"btn btn-danger mt-3\"><i className=\"fas fa-shopping-cart\"></i> Add to Cart</a>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        // </div>\r\n        // )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isProductLoaded: state.product.isProductLoaded,\r\n    isProductListUpdating: state.product.isProductDeleted,\r\n    cartUpdated: state.cart.cartUpdated,\r\n    cartItems: state.cart.cartItems,\r\n    isCartLoading: state.cart.isCartLoading,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    delete_Product,\r\n    addToCart,\r\n    getCartItems,\r\n})(ProductCard);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\productList.js",["299","300"],"import {\r\n    PRODUCT_LIST_LOADED,\r\n    PRODUCT_LIST_LOADING,\r\n    PRODUCT_LIST_LOADING_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    PRODUCT_DELETED,\r\n    PRODUCT_DELETION_FAIL,\r\n    PRODUCT_LIST_UPDATING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isProductListLoading: false,\r\n    isProductListLoaded: false,\r\n    isProductListUpdated: false,\r\n    isProductListUpdating: false,\r\n    productList: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_LOADING:\r\n            return {\r\n                ...state,\r\n                isProductListLoading: true,\r\n                isProductListUpdated: false,\r\n                isProductListUpdating: false,\r\n            };\r\n        case PRODUCT_LIST_LOADED:\r\n            return {\r\n                ...state,\r\n                isProductListLoaded: true,\r\n                isProductListLoading: false,\r\n                isProductListUpdated: false,\r\n                isProductListUpdating: false,\r\n                productList: action.payload,\r\n            };\r\n        case PRODUCT_LIST_LOADING_FAIL:\r\n            return {\r\n                ...state,\r\n                productList: null,\r\n                isProductListLoaded: false,\r\n                isProductListLoading: false,\r\n            };\r\n        case PRODUCT_LIST_UPDATING:\r\n            return {\r\n                ...state,\r\n                isProductListUpdating: true,\r\n                isProductListLoaded: false,\r\n            };\r\n        case PRODUCT_DELETED:\r\n            return {\r\n                ...state,\r\n                productList: null,\r\n                isProductListLoaded: false,\r\n                isProductListLoading: false,\r\n                isProductListUpdated: true,\r\n                isProductListUpdating: false,\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isProductListLoading: false,\r\n                isProductListLoaded: false,\r\n                isProductListUpdated: false,\r\n                isProductListUpdating: false,\r\n                productList: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\vendor.js",["301","302"],"import {\r\n    UPDATE_SUCCESS,\r\n    FETCHING_DATA,\r\n    FETCHING_COMPLETE,\r\n    UPDATE_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGIN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    isFetching: true,\r\n    vendor: null,\r\n    isUpdated: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                isUpdated: false,\r\n            };\r\n        case UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                isUpdated: true,\r\n            };\r\n        case FETCHING_DATA:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                isUpdated: false,\r\n            };\r\n        case FETCHING_COMPLETE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                vendor: action.payload,\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                vendor: null,\r\n                isUpdated: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\VendorProfile.js",["303","304"],"import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { loadVendor } from \"../actions/vendor\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loadUser } from \"../actions/auth\";\r\n\r\nexport class VendorProfile extends Component {\r\n    state = {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        phone: \"\",\r\n        shop_name: \"\",\r\n        address: \"\",\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: \"\",\r\n        cod_available: true,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.loadVendor();\r\n        this.props.loadUser();\r\n    }\r\n\r\n    static propTypes = {\r\n        vendor: PropTypes.object.isRequired,\r\n        auth: PropTypes.object.isRequired,\r\n        isFetching: PropTypes.bool,\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.isFetching || this.props.auth.isLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        } else {\r\n            const { first_name, last_name, phone } = this.props.auth.user;\r\n            const {\r\n                shop_name,\r\n                address,\r\n                location_long,\r\n                location_lat,\r\n                pincode,\r\n                cod_available,\r\n                transaction_id,\r\n            } = this.props.vendor;\r\n            return (\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Profile</h2>\r\n                        <div className=\"form-group\">\r\n                            <label>First Name : </label>\r\n\r\n                            <label className=\"form-control\">\r\n                                {\" \"}\r\n                                {first_name}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Last Name : </label>\r\n                            <label className=\"form-control\"> {last_name}</label>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Phone : </label>\r\n                            <label className=\"form-control\"> {phone}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Shop name : </label>\r\n                            <label className=\"form-control\"> {shop_name}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Address : </label>\r\n                            <label className=\"form-control\"> {address}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Longitude : </label>\r\n                            <label className=\"form-control\">\r\n                                {\" \"}\r\n                                {location_long}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Lattitude : </label>\r\n                            <label className=\"form-control\">\r\n                                {\" \"}\r\n                                {location_lat}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pincode : </label>\r\n                            <label className=\"form-control\"> {pincode}</label>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark\">\r\n                            <Link to=\"/update/vendor\">Make Changes</Link>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    vendor: state.vendor.vendor,\r\n    auth: state.auth,\r\n    isFetching: state.vendor.isFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadVendor, loadUser })(\r\n    VendorProfile\r\n);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\index.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\store.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\ProductImages.js",["305","306"],"import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {element} from 'prop-types';\r\nimport '../style/ProductImages.css';\r\nimport {addImages} from '../actions/product';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass ProductImages extends Component {\r\n    fileObj = [];\r\n    fileArray = [];\r\n\r\n    static propTypes = {\r\n        areProductImagesUploaded: PropTypes.bool,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            images: [null],\r\n            reload: false,\r\n            pid: this.props.match.params.id,\r\n        };\r\n        // let id = this.props.match.params.id;\r\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this);\r\n        this.uploadFiles = this.uploadFiles.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n    }\r\n\r\n    uploadMultipleFiles(e) {\r\n        // console.log(e.target)\r\n        this.fileObj.push(e.target.files[0]);\r\n        let index = this.fileObj.length - 1;\r\n        // console.log(this.fileObj[index])\r\n        this.fileArray.push({\r\n            url: URL.createObjectURL(this.fileObj[index]),\r\n            id: index,\r\n        });\r\n        this.setState({images: this.fileObj});\r\n        // console.log(this.fileObj)\r\n    }\r\n\r\n    uploadFiles(e) {\r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n        this.props.addImages(this.state);\r\n    }\r\n\r\n    removeImage(e) {\r\n        // e.preventDefault()\r\n        this.fileObj.splice(e.target.id, 1);\r\n        this.fileArray.splice(e.target.id, 1);\r\n        for (let i = 0; i < this.fileArray.length; i++) {\r\n            this.fileArray[i].id = i;\r\n        }\r\n        this.setState({images: this.fileObj});\r\n        console.log(this.fileObj);\r\n        this.setState({reload: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.reload) {\r\n            this.setState({reload: false});\r\n            return <div></div>;\r\n        }\r\n        if (this.props.areProductImagesUploaded) {\r\n            return <Redirect to={`/Product/${this.props.match.params.id}`} />;\r\n        }\r\n        return (\r\n            <form>\r\n                <h1>\r\n                    <center>Upload Images</center>\r\n                </h1>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"form-group multi-preview\">\r\n                    {(this.fileArray || []).map((element) => (\r\n                        <img\r\n                            src={element.url}\r\n                            className=\"image\"\r\n                            id={element.id}\r\n                            style={{\r\n                                height: '10rem',\r\n                                margin: '20px 20px 20px',\r\n                            }}\r\n                            onClick={this.removeImage}\r\n                            alt=\"...\"\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"file\"\r\n                        className=\"form-control\"\r\n                        onChange={this.uploadMultipleFiles}\r\n                        multiple\r\n                    />\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger btn-block\"\r\n                    onClick={this.uploadFiles}\r\n                >\r\n                    Upload\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    areProductImagesUploaded: state.product.areProductImagesUploaded,\r\n});\r\nexport default connect(mapStateToProps, {addImages})(ProductImages);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\vendor.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Cart\\CartCard.js",["307"],"import {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faTrash,\r\n    faRupeeSign,\r\n    faPlusCircle,\r\n    faMinusCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../style/Cart.css';\r\nimport {deleteCartItem, modifyItemQuantity} from '../../actions/cart';\r\n\r\nclass CartCard extends Component {\r\n    static propTypes = {\r\n        //product : PropTypes.object.isRequired,\r\n    };\r\n\r\n    state = {\r\n        quantity: 0,\r\n        flag: true,\r\n    };\r\n\r\n    UpdateState() {\r\n        this.setState(this.props.element);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.flag) {\r\n            //console.log(this.props.vendor);\r\n            this.setState({flag: false});\r\n            this.UpdateState();\r\n        }\r\n    }\r\n\r\n    async modify(q) {\r\n        if (q && q > 0) {\r\n            await this.setState({quantity: q});\r\n            this.props.modifyItemQuantity(this.props.element.id, q);\r\n        }\r\n    }\r\n\r\n    decrease = (e) => {\r\n        this.modify(parseInt(this.state.quantity) - 1);\r\n    };\r\n\r\n    increase = (e) => {\r\n        this.modify(parseInt(this.state.quantity) + 1);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onBlur = (e) => {\r\n        this.modify(e.target.value);\r\n    };\r\n    itemDelete = (e) => {\r\n        console.log('Deleting');\r\n        this.props.deleteCartItem(this.props.element.id);\r\n    };\r\n    render() {\r\n        const {quantity} = this.state;\r\n        return (\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-3\">\r\n                    <div className=\"\">\r\n                        <img\r\n                            className=\"img-fluid w-100 h-90\"\r\n                            src={`http://127.0.0.1:8000${this.props.element.product.image[0]}`}\r\n                            alt={this.props.element.product.title}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <div>\r\n                                <h4 className=\"text-uppercase\">\r\n                                    {this.props.element.product.title}\r\n                                </h4>\r\n                                <span className=\"text-muted text-uppercase describe\">\r\n                                    {this.props.element.product.catagory}\r\n                                </span>\r\n                                <br />\r\n                                <span className=\"text-muted text-uppercase describe\">\r\n                                    {this.props.element.product.details}\r\n                                </span>\r\n                                <br />\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"input-group\">\r\n                                    <span\r\n                                        className=\"input-group-btn\"\r\n                                        onClick={this.decrease}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinusCircle} />\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"quantity\"\r\n                                        className=\"number\"\r\n                                        onBlur={this.onBlur}\r\n                                        onChange={this.onChange}\r\n                                        value={quantity}\r\n                                    />\r\n                                    <span\r\n                                        className=\"input-group-btn\"\r\n                                        onClick={this.increase}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlusCircle} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div>\r\n                                <br />\r\n                                <button\r\n                                    className=\"btn btn-danger btn-lg rounded-0\"\r\n                                    onClick={this.itemDelete}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </button>\r\n                            </div>\r\n                            <p className=\"mb-0\">\r\n                                <span>\r\n                                    <strong id=\"summary\">\r\n                                        <FontAwesomeIcon icon={faRupeeSign} />\r\n                                        {this.props.element.product.amount}\r\n                                    </strong>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, {deleteCartItem, modifyItemQuantity})(\r\n    CartCard\r\n);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\errors.js",["308"],"import {GET_ERRORS} from '../actions/types';\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Header.js",["309","310","311"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../actions/auth\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport store from \"../store\";\r\nimport { PRODUCT_LOADING_FAIL } from \"../actions/types\";\r\n\r\nexport class Header extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n        logout: PropTypes.func.isRequired,\r\n    };\r\n\r\n    render() {\r\n        const { isAuthenticated, user, isLoading } = this.props.auth;\r\n\r\n        const authLinks = (\r\n            <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/Home/\" className=\"nav-link\">\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <span className=\"navbar-text mr-3\">\r\n                    <strong>\r\n                        {user\r\n                            ? `Welcome ${\r\n                                  user[\"first_name\"]\r\n                                      ? user[\"first_name\"]\r\n                                      : user[\"email\"]\r\n                              }`\r\n                            : \"\"}\r\n                    </strong>\r\n                </span>\r\n\r\n                <li className=\"nav-item\">\r\n                    <button\r\n                        onClick={this.props.logout}\r\n                        className=\"nav-link btn btn-info btn-sm text-light\"\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </li>\r\n                <li class=\"dropdown\">\r\n                    <span\r\n                        class=\"nav-link dropdown-toggle\"\r\n                        id=\"navbarDropdown\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} /> <b class=\"caret\"></b>\r\n                    </span>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                        {this.props.auth.is_vendor ? (\r\n                            <div>\r\n                                <Link to=\"/update/vendor\" className=\"nav-link\">\r\n                                    Update Profile Vendor\r\n                                </Link>\r\n                                <Link to=\"/profile/vendor\" className=\"nav-link\">\r\n                                    Profile Vendor\r\n                                </Link>\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <Link\r\n                                    to=\"/update/customer\"\r\n                                    className=\"nav-link\"\r\n                                >\r\n                                    Update Profile Customer\r\n                                </Link>\r\n                                <Link\r\n                                    to=\"/profile/customer\"\r\n                                    className=\"nav-link\"\r\n                                >\r\n                                    Profile Customer\r\n                                </Link>\r\n                                <Link to=\"/cart\" className=\"nav-link\">\r\n                                    Cart\r\n                                </Link>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div class=\"dropdown-divider\"></div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        );\r\n\r\n        const guestLinks = (\r\n            <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/register/customer\" className=\"nav-link\">\r\n                        Register Customer\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/register/vendor\" className=\"nav-link\">\r\n                        Register Vendor\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n        if (!isLoading) {\r\n            return (\r\n                <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n                    <div className=\"container\">\r\n                        <button\r\n                            className=\"navbar-toggler\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo01\"\r\n                            aria-controls=\"navbarTogglerDemo01\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\"\r\n                        >\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                        </button>\r\n                        <div\r\n                            className=\"collapse navbar-collapse\"\r\n                            id=\"navbarTogglerDemo01\"\r\n                        >\r\n                            <a className=\"navbar-brand\" href=\"#\">\r\n                                SDP\r\n                            </a>\r\n                            {isAuthenticated ? (\r\n                                this.props.auth.is_vendor ? (\r\n                                    <Link\r\n                                        to=\"/addProduct/\"\r\n                                        className=\"nav-link\"\r\n                                    >\r\n                                        Add Product\r\n                                    </Link>\r\n                                ) : (\r\n                                    \"\"\r\n                                )\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </div>\r\n                        {isAuthenticated ? authLinks : guestLinks}\r\n                    </div>\r\n                </nav>\r\n            );\r\n        }\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\PaymentGateway\\Payment.js",["312"],"import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadUser } from \"../../actions/auth\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { connect } from \"react-redux\";\r\nimport InjectedCheckout from \"./InjectedCheckout\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../../style/CardSection.css\";\r\n\r\nexport class Payment extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.loadUser();\r\n    }\r\n\r\n    render() {\r\n        const stripePromise = loadStripe(\r\n            \"pk_test_51IMU9iAVVA7u04Dhdace87yM2HvT1zA6zHoMhEqLLme19WzOaGh9xmuA9H2UU8cJX1bwpeo9Kcov7bE0e3ooNO6700RblHmSpF\"\r\n        );\r\n\r\n        if (!this.props.auth) {\r\n            console.log(\"a\");\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n\r\n        if (this.props.auth.isLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        }\r\n\r\n        if (!this.props.auth.isAuthenticated) {\r\n            console.log(\"a\");\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    <Elements stripe={stripePromise}>\r\n                        <InjectedCheckout />\r\n                    </Elements>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUser })(Payment);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\VendorRegister.js",["313","314","315","316"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport http from '../http-common';\r\nimport {connect} from 'react-redux';\r\nimport {registerVendor} from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport class VendorRegister extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        is_vendor: true,\r\n        password: '',\r\n        password2: '',\r\n        shop_name: '',\r\n        address: '',\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: '',\r\n        cod_available: true,\r\n        transaction_id: '',\r\n        is_active: false,\r\n    };\r\n\r\n    static propTypes = {\r\n        registerVendor: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.registerVendor(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.name);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const {\r\n            username,\r\n            password,\r\n            password2,\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n            is_vendor,\r\n            email,\r\n            shop_name,\r\n            address,\r\n            location_long,\r\n            location_lat,\r\n            pincode,\r\n            cod_available,\r\n            transaction_id,\r\n            is_active,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Login</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>firstname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"first_name\"\r\n                                onChange={this.onChange}\r\n                                value={first_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>lastname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"last_name\"\r\n                                onChange={this.onChange}\r\n                                value={last_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                onChange={this.onChange}\r\n                                value={email}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password2</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password2\"\r\n                                onChange={this.onChange}\r\n                                value={password2}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                onChange={this.onChange}\r\n                                value={phone}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Shop name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"shop_name\"\r\n                                onChange={this.onChange}\r\n                                value={shop_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"address\"\r\n                                onChange={this.onChange}\r\n                                value={address}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Longitude</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"location_long\"\r\n                                onChange={this.onChange}\r\n                                value={location_long}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Lattitude</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"location_lat\"\r\n                                onChange={this.onChange}\r\n                                value={location_lat}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pincode</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"pincode\"\r\n                                onChange={this.onChange}\r\n                                value={pincode}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Transaction id</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"transaction_id\"\r\n                                onChange={this.onChange}\r\n                                value={transaction_id}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            hidden\r\n                            name=\"is_vendor\"\r\n                            value={is_vendor}\r\n                        ></input>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {registerVendor})(VendorRegister);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Login.js",["317"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n    };\r\n\r\n    static propTypes = {\r\n        login: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.login(this.state.username, this.state.password);\r\n    };\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const {username, password} = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Login</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                        <p>Don't have an account?</p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\editProduct.js",["318","319","320","321","322","323","324"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\order.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\PaymentGateway\\CardSection.js",["325","326","327"],"import React, { Component } from \"react\";\r\nimport {\r\n    CardElement,\r\n    CardNumberElement,\r\n    CardCvcElement,\r\n    CardExpiryElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport \"../../style/CardSection.css\";\r\n\r\nclass CardSection extends Component {\r\n    render() {\r\n        const CARD_ELEMENT_OPTIONS = {\r\n            style: {\r\n                base: {\r\n                    color: \"blue\",\r\n                    fontSize: \"16px\",\r\n                    fontFamily: \"sans-serif\",\r\n                    fontSmoothing: \"antialiased\",\r\n                    \"::placeholder\": {\r\n                        color: \"#CFD7DF\",\r\n                    },\r\n                },\r\n                invalid: {\r\n                    color: \"red\",\r\n                    \":focus\": {\r\n                        color: \"red\",\r\n                    },\r\n                },\r\n            },\r\n        };\r\n        return (\r\n            <div>\r\n                <div className=\"cardTitle\">Fill the Card details</div>\r\n                <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardSection;\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Home.js",["328"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport store from \"../store\";\r\nimport { getAllProductList } from \"../actions/productList\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport ProductCard from \"./productCard\";\r\nimport \"../style/home.css\";\r\nimport { getCartItems } from \"../actions/cart\";\r\n\r\nexport class Home extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object,\r\n        productList: PropTypes.object,\r\n        isProductListLoaded: PropTypes.bool,\r\n        isProductListUpdated: PropTypes.bool,\r\n        cartItems: PropTypes.object.isRequired,\r\n        cartUpdated: PropTypes.bool,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        store.dispatch(getAllProductList());\r\n    }\r\n    handler() {\r\n        store.dispatch(getAllProductList());\r\n    }\r\n    render() {\r\n        const productList = this.props.productList;\r\n        const { user } = this.props.auth;\r\n        if (!user) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (!user.is_vendor && this.props.cartUpdated) {\r\n            return <div>{this.props.getCartItems()}</div>;\r\n        }\r\n        if (this.props.isProductListLoaded && user != null) {\r\n            return (\r\n                <div>\r\n                    <div style={{ marginTop: \"20px\" }}>\r\n                        <div className=\"row\">\r\n                            {productList\r\n                                ? productList.map((element) => {\r\n                                      // console.log(element)\r\n                                      // console.log(user.email)\r\n                                      if (\r\n                                          user.is_vendor &&\r\n                                          element.vendor_email === user.email\r\n                                      ) {\r\n                                          console.log(element.id);\r\n                                          return (\r\n                                              <div className=\"col-12 col-sm-4 col-md-6 col-lg-4\">\r\n                                                  <ProductCard\r\n                                                      element={element}\r\n                                                      canEdit={true}\r\n                                                      handler={this.handler}\r\n                                                  />\r\n                                              </div>\r\n                                          );\r\n                                      } else if (!user.is_vendor) {\r\n                                          return (\r\n                                              <div className=\"col-12 col-sm-4 col-md-6 col-lg-4\">\r\n                                                  <ProductCard\r\n                                                      element={element}\r\n                                                      canEdit={false}\r\n                                                  />\r\n                                              </div>\r\n                                          );\r\n                                      }\r\n                                  })\r\n                                : \"No products\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (this.props.isProductListUpdated) {\r\n            return <div>{this.handler()}</div>;\r\n        }\r\n        return <div />;\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    // console.log(state)\r\n    auth: state.auth,\r\n    productList: state.productList.productList,\r\n    isProductListLoaded: state.productList.isProductListLoaded,\r\n    isProductListUpdated: state.productList.isProductListUpdated,\r\n    cartItems: state.cart.cartItems,\r\n    cartUpdated: state.cart.cartUpdated,\r\n});\r\nexport default connect(mapStateToProps, { getCartItems })(Home);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\product.js",["329","330"],"import {returnErrors} from './messages';\r\nimport http from '../http-common';\r\n\r\nimport {\r\n    PRODUCT_LOADED,\r\n    PRODUCT_LOADING,\r\n    PRODUCT_LOADING_FAIL,\r\n    PRODUCT_ADDED,\r\n    PRODUCT_ADDING_FAIL,\r\n    PRODUCT_ADDING,\r\n    PRODUCT_EDITED,\r\n    PRODUCT_EDIT_FAIL,\r\n    PRODUCT_DELETED,\r\n    PRODUCT_DELETION_FAIL,\r\n    PRODUCT_IMAGES_UPLOAD_FAIL,\r\n    PRODUCT_IMAGES_UPLOADED,\r\n    PRODUCT_IMAGES_LOADED,\r\n    PRODUCT_IMAGES_LOADING,\r\n    PRODUCT_IMAGES_LOAD_FAIL,\r\n} from './types';\r\n\r\nexport const add_Product = (Product) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_ADDING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(Product);\r\n\r\n    console.log(body);\r\n\r\n    http.post('/ManageShops/products/', body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_ADDED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_ADDING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const edit_Product = (Product) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_ADDING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(Product);\r\n\r\n    console.log(body);\r\n\r\n    http.put(\r\n        `/ManageShops/products/${Product.id}/`,\r\n        body,\r\n        tokenConfig(getState)\r\n    )\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_EDITED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_EDIT_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getProduct = (id) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.get(`/ManageShops/product/${id}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_LOADING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const delete_Product = (id) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.delete(`/ManageShops/products/${id}/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_DELETED,\r\n                payload: id,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_DELETION_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const addImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    const formData = new FormData();\r\n    obj.images.map((image) => formData.append('images', image));\r\n    formData.append('pid', obj.pid);\r\n\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Accept: 'application/json',\r\n            type: 'formData',\r\n            'Access-Control-Allow-Origin': '*',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    // console.log(formData)\r\n    http.post(`/ManageShops/productimage`, formData, config)\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_UPLOADED,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_UPLOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_IMAGES_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n\r\n    console.log(body);\r\n    http.get(`/ManageShops/getproductimage/${obj}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const deleteImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_IMAGES_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n\r\n    // console.log(formData)\r\n    http.get(`/ManageShops/productimage`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    return config;\r\n};\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\messages.js",["331"],"import {CREATE_MESSAGE} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_MESSAGE:\r\n            return (state = action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\Cart\\Cart.js",["332","333","334"],"import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {Switch, Link, Redirect, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../style/Cart.css';\r\nimport CartCard from './CartCard';\r\nimport {getCartItems} from '../../actions/cart';\r\nimport {loadUser} from '../../actions/auth';\r\n\r\nclass Cart extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n        cart: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getCartItems();\r\n    }\r\n\r\n    calculateTotalAmount() {}\r\n\r\n    handler() {\r\n        this.props.getCartItems();\r\n    }\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            console.log(this.props.auth);\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.auth.user.is_vendor) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.cart.isCartLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        }\r\n        if (this.props.cart.cartUpdated) {\r\n            return <div>{this.props.getCartItems()}</div>;\r\n        }\r\n        let totalAmt = 0;\r\n        const cart = this.props.cart.cartItems;\r\n        const items =\r\n            cart && cart.length ? (\r\n                cart.map((element) => {\r\n                    totalAmt += element.product.amount * element.quantity;\r\n                    return (\r\n                        <div>\r\n                            <CartCard element={element} />\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : (\r\n                /**/\r\n                <div>No Items In Cart</div>\r\n            );\r\n        const len = cart && cart.length ? cart.length : 0;\r\n        return (\r\n            <div>\r\n                <h5 class=\"mb-4\">\r\n                    Cart (<span>{len}</span> items)\r\n                </h5>\r\n                {items}\r\n\r\n                <h3>Total Amount {this.props.cart.totalAmt}</h3>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Link to={`/Address`}>\r\n                    <button\r\n                        className=\"btn btn-success\"\r\n                        style={{width: '70rem'}}\r\n                    >\r\n                        Select Address\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n    cart: state.cart,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getCartItems, loadUser})(Cart);\r\n","D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\types.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\PaymentGateway\\PaymentCard.js",["335"],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\reducers\\index.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\actions\\payment.js",[],"D:\\CE_120_Sem6\\SDP\\sdp_project\\frontend\\src\\Components\\PaymentGateway\\InjectedCheckout.js",[],{"ruleId":"336","severity":1,"message":"337","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":16},{"ruleId":"336","severity":1,"message":"340","line":7,"column":5,"nodeType":"338","messageId":"339","endLine":7,"endColumn":13},{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"336","severity":1,"message":"345","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":12},{"ruleId":"336","severity":1,"message":"346","line":6,"column":9,"nodeType":"338","messageId":"339","endLine":6,"endColumn":13},{"ruleId":"341","replacedBy":"347"},{"ruleId":"343","replacedBy":"348"},{"ruleId":"336","severity":1,"message":"349","line":83,"column":17,"nodeType":"338","messageId":"339","endLine":83,"endColumn":30},{"ruleId":"341","replacedBy":"350"},{"ruleId":"343","replacedBy":"351"},{"ruleId":"336","severity":1,"message":"352","line":1,"column":27,"nodeType":"338","messageId":"339","endLine":1,"endColumn":36},{"ruleId":"336","severity":1,"message":"337","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":16},{"ruleId":"336","severity":1,"message":"353","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":15},{"ruleId":"336","severity":1,"message":"346","line":6,"column":9,"nodeType":"338","messageId":"339","endLine":6,"endColumn":13},{"ruleId":"336","severity":1,"message":"340","line":6,"column":15,"nodeType":"338","messageId":"339","endLine":6,"endColumn":23},{"ruleId":"336","severity":1,"message":"354","line":6,"column":25,"nodeType":"338","messageId":"339","endLine":6,"endColumn":34},{"ruleId":"336","severity":1,"message":"355","line":9,"column":5,"nodeType":"338","messageId":"339","endLine":9,"endColumn":20},{"ruleId":"336","severity":1,"message":"356","line":10,"column":5,"nodeType":"338","messageId":"339","endLine":10,"endColumn":19},{"ruleId":"357","severity":1,"message":"358","line":57,"column":41,"nodeType":"359","messageId":"360","endLine":57,"endColumn":43},{"ruleId":"361","severity":1,"message":"362","line":60,"column":45,"nodeType":"363","endLine":67,"endColumn":47},{"ruleId":"361","severity":1,"message":"362","line":72,"column":41,"nodeType":"363","endLine":76,"endColumn":43},{"ruleId":"341","replacedBy":"364"},{"ruleId":"343","replacedBy":"365"},{"ruleId":"336","severity":1,"message":"346","line":3,"column":9,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"340","line":3,"column":15,"nodeType":"338","messageId":"339","endLine":3,"endColumn":23},{"ruleId":"336","severity":1,"message":"366","line":7,"column":8,"nodeType":"338","messageId":"339","endLine":7,"endColumn":13},{"ruleId":"367","severity":1,"message":"368","line":86,"column":41,"nodeType":"363","endLine":89,"endColumn":42},{"ruleId":"367","severity":1,"message":"368","line":92,"column":41,"nodeType":"363","endLine":97,"endColumn":42},{"ruleId":"341","replacedBy":"369"},{"ruleId":"343","replacedBy":"370"},{"ruleId":"336","severity":1,"message":"371","line":1,"column":9,"nodeType":"338","messageId":"339","endLine":1,"endColumn":21},{"ruleId":"341","replacedBy":"372"},{"ruleId":"343","replacedBy":"373"},{"ruleId":"336","severity":1,"message":"374","line":9,"column":5,"nodeType":"338","messageId":"339","endLine":9,"endColumn":20},{"ruleId":"336","severity":1,"message":"375","line":10,"column":5,"nodeType":"338","messageId":"339","endLine":10,"endColumn":26},{"ruleId":"336","severity":1,"message":"376","line":12,"column":5,"nodeType":"338","messageId":"339","endLine":12,"endColumn":31},{"ruleId":"377","severity":1,"message":"378","line":31,"column":1,"nodeType":"379","endLine":111,"endColumn":2},{"ruleId":"336","severity":1,"message":"380","line":11,"column":5,"nodeType":"338","messageId":"339","endLine":11,"endColumn":15},{"ruleId":"377","severity":1,"message":"378","line":23,"column":1,"nodeType":"379","endLine":97,"endColumn":2},{"ruleId":"381","severity":1,"message":"382","line":43,"column":39,"nodeType":"383","messageId":"384","endLine":43,"endColumn":41},{"ruleId":"381","severity":1,"message":"382","line":62,"column":47,"nodeType":"383","messageId":"384","endLine":62,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":63,"column":29,"nodeType":"359","messageId":"360","endLine":63,"endColumn":31},{"ruleId":"385","severity":1,"message":"386","line":65,"column":17,"nodeType":"338","messageId":"387","endLine":65,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":66,"column":40,"nodeType":"383","messageId":"384","endLine":66,"endColumn":42},{"ruleId":"385","severity":1,"message":"386","line":79,"column":17,"nodeType":"338","messageId":"387","endLine":79,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":80,"column":40,"nodeType":"383","messageId":"384","endLine":80,"endColumn":42},{"ruleId":"357","severity":1,"message":"388","line":81,"column":29,"nodeType":"359","messageId":"360","endLine":81,"endColumn":31},{"ruleId":"336","severity":1,"message":"389","line":11,"column":5,"nodeType":"338","messageId":"339","endLine":11,"endColumn":16},{"ruleId":"336","severity":1,"message":"390","line":13,"column":9,"nodeType":"338","messageId":"339","endLine":13,"endColumn":15},{"ruleId":"377","severity":1,"message":"378","line":24,"column":1,"nodeType":"379","endLine":76,"endColumn":2},{"ruleId":"391","severity":1,"message":"392","line":38,"column":17,"nodeType":"393","messageId":"360","endLine":38,"endColumn":26},{"ruleId":"341","replacedBy":"394"},{"ruleId":"343","replacedBy":"395"},{"ruleId":"336","severity":1,"message":"396","line":2,"column":5,"nodeType":"338","messageId":"339","endLine":2,"endColumn":20},{"ruleId":"336","severity":1,"message":"397","line":3,"column":5,"nodeType":"338","messageId":"339","endLine":3,"endColumn":23},{"ruleId":"336","severity":1,"message":"398","line":4,"column":5,"nodeType":"338","messageId":"339","endLine":4,"endColumn":16},{"ruleId":"336","severity":1,"message":"399","line":5,"column":5,"nodeType":"338","messageId":"339","endLine":5,"endColumn":17},{"ruleId":"336","severity":1,"message":"400","line":6,"column":5,"nodeType":"338","messageId":"339","endLine":6,"endColumn":19},{"ruleId":"336","severity":1,"message":"401","line":7,"column":5,"nodeType":"338","messageId":"339","endLine":7,"endColumn":22},{"ruleId":"336","severity":1,"message":"402","line":8,"column":5,"nodeType":"338","messageId":"339","endLine":8,"endColumn":28},{"ruleId":"336","severity":1,"message":"403","line":10,"column":5,"nodeType":"338","messageId":"339","endLine":10,"endColumn":20},{"ruleId":"336","severity":1,"message":"404","line":12,"column":5,"nodeType":"338","messageId":"339","endLine":12,"endColumn":25},{"ruleId":"336","severity":1,"message":"405","line":16,"column":5,"nodeType":"338","messageId":"339","endLine":16,"endColumn":19},{"ruleId":"336","severity":1,"message":"406","line":17,"column":5,"nodeType":"338","messageId":"339","endLine":17,"endColumn":25},{"ruleId":"377","severity":1,"message":"378","line":27,"column":1,"nodeType":"379","endLine":71,"endColumn":2},{"ruleId":"341","replacedBy":"407"},{"ruleId":"343","replacedBy":"408"},{"ruleId":"336","severity":1,"message":"346","line":3,"column":9,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"409","line":3,"column":9,"nodeType":"338","messageId":"339","endLine":3,"endColumn":16},{"ruleId":"336","severity":1,"message":"346","line":8,"column":9,"nodeType":"338","messageId":"339","endLine":8,"endColumn":13},{"ruleId":"336","severity":1,"message":"340","line":8,"column":15,"nodeType":"338","messageId":"339","endLine":8,"endColumn":23},{"ruleId":"336","severity":1,"message":"410","line":15,"column":5,"nodeType":"338","messageId":"339","endLine":15,"endColumn":18},{"ruleId":"336","severity":1,"message":"411","line":16,"column":5,"nodeType":"338","messageId":"339","endLine":16,"endColumn":22},{"ruleId":"336","severity":1,"message":"412","line":14,"column":8,"nodeType":"338","messageId":"339","endLine":14,"endColumn":12},{"ruleId":"413","severity":1,"message":"414","line":64,"column":9,"nodeType":"415","endLine":64,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":65,"column":9,"nodeType":"415","endLine":65,"endColumn":19},{"ruleId":"336","severity":1,"message":"375","line":7,"column":5,"nodeType":"338","messageId":"339","endLine":7,"endColumn":26},{"ruleId":"377","severity":1,"message":"378","line":19,"column":1,"nodeType":"379","endLine":72,"endColumn":2},{"ruleId":"336","severity":1,"message":"380","line":7,"column":5,"nodeType":"338","messageId":"339","endLine":7,"endColumn":15},{"ruleId":"377","severity":1,"message":"378","line":16,"column":1,"nodeType":"379","endLine":52,"endColumn":2},{"ruleId":"336","severity":1,"message":"349","line":49,"column":17,"nodeType":"338","messageId":"339","endLine":49,"endColumn":30},{"ruleId":"336","severity":1,"message":"416","line":50,"column":17,"nodeType":"338","messageId":"339","endLine":50,"endColumn":31},{"ruleId":"336","severity":1,"message":"409","line":3,"column":9,"nodeType":"338","messageId":"339","endLine":3,"endColumn":16},{"ruleId":"336","severity":1,"message":"346","line":8,"column":9,"nodeType":"338","messageId":"339","endLine":8,"endColumn":13},{"ruleId":"336","severity":1,"message":"417","line":10,"column":8,"nodeType":"338","messageId":"339","endLine":10,"endColumn":17},{"ruleId":"377","severity":1,"message":"378","line":8,"column":1,"nodeType":"379","endLine":18,"endColumn":2},{"ruleId":"336","severity":1,"message":"366","line":8,"column":8,"nodeType":"338","messageId":"339","endLine":8,"endColumn":13},{"ruleId":"336","severity":1,"message":"418","line":9,"column":10,"nodeType":"338","messageId":"339","endLine":9,"endColumn":30},{"ruleId":"367","severity":1,"message":"419","line":130,"column":29,"nodeType":"363","endLine":130,"endColumn":66},{"ruleId":"336","severity":1,"message":"346","line":8,"column":10,"nodeType":"338","messageId":"339","endLine":8,"endColumn":14},{"ruleId":"336","severity":1,"message":"345","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":12},{"ruleId":"336","severity":1,"message":"346","line":6,"column":9,"nodeType":"338","messageId":"339","endLine":6,"endColumn":13},{"ruleId":"336","severity":1,"message":"349","line":63,"column":13,"nodeType":"338","messageId":"339","endLine":63,"endColumn":26},{"ruleId":"336","severity":1,"message":"420","line":65,"column":13,"nodeType":"338","messageId":"339","endLine":65,"endColumn":22},{"ruleId":"336","severity":1,"message":"346","line":5,"column":9,"nodeType":"338","messageId":"339","endLine":5,"endColumn":13},{"ruleId":"336","severity":1,"message":"352","line":1,"column":27,"nodeType":"338","messageId":"339","endLine":1,"endColumn":36},{"ruleId":"336","severity":1,"message":"337","line":2,"column":8,"nodeType":"338","messageId":"339","endLine":2,"endColumn":16},{"ruleId":"336","severity":1,"message":"353","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":15},{"ruleId":"336","severity":1,"message":"346","line":6,"column":9,"nodeType":"338","messageId":"339","endLine":6,"endColumn":13},{"ruleId":"336","severity":1,"message":"354","line":6,"column":25,"nodeType":"338","messageId":"339","endLine":6,"endColumn":34},{"ruleId":"336","severity":1,"message":"355","line":9,"column":5,"nodeType":"338","messageId":"339","endLine":9,"endColumn":20},{"ruleId":"336","severity":1,"message":"356","line":10,"column":5,"nodeType":"338","messageId":"339","endLine":10,"endColumn":19},{"ruleId":"336","severity":1,"message":"421","line":4,"column":5,"nodeType":"338","messageId":"339","endLine":4,"endColumn":22},{"ruleId":"336","severity":1,"message":"422","line":5,"column":5,"nodeType":"338","messageId":"339","endLine":5,"endColumn":19},{"ruleId":"336","severity":1,"message":"423","line":6,"column":5,"nodeType":"338","messageId":"339","endLine":6,"endColumn":22},{"ruleId":"381","severity":1,"message":"424","line":43,"column":61,"nodeType":"383","messageId":"425","endLine":43,"endColumn":63},{"ruleId":"336","severity":1,"message":"371","line":1,"column":9,"nodeType":"338","messageId":"339","endLine":1,"endColumn":21},{"ruleId":"336","severity":1,"message":"426","line":131,"column":11,"nodeType":"338","messageId":"339","endLine":131,"endColumn":15},{"ruleId":"377","severity":1,"message":"378","line":5,"column":1,"nodeType":"379","endLine":12,"endColumn":2},{"ruleId":"336","severity":1,"message":"427","line":6,"column":9,"nodeType":"338","messageId":"339","endLine":6,"endColumn":15},{"ruleId":"336","severity":1,"message":"428","line":6,"column":33,"nodeType":"338","messageId":"339","endLine":6,"endColumn":38},{"ruleId":"336","severity":1,"message":"429","line":48,"column":21,"nodeType":"338","messageId":"339","endLine":48,"endColumn":29},{"ruleId":"336","severity":1,"message":"430","line":6,"column":10,"nodeType":"338","messageId":"339","endLine":6,"endColumn":18},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["431"],"no-negated-in-lhs",["432"],"'http' is defined but never used.","'Link' is defined but never used.",["431"],["432"],"'cod_available' is assigned a value but never used.",["431"],["432"],"'useEffect' is defined but never used.","'product' is defined but never used.","'useParams' is defined but never used.","'PRODUCT_LOADING' is defined but never used.","'PRODUCT_LOADED' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["431"],["432"],"'store' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["431"],["432"],"'returnErrors' is defined but never used.",["431"],["432"],"'PRODUCT_DELETED' is defined but never used.","'PRODUCT_DELETION_FAIL' is defined but never used.","'PRODUCT_IMAGES_UPLOAD_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'LOGIN_FAIL' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'total' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'UPDATE_FAIL' is defined but never used.","'object' is defined but never used.","no-dupe-keys","Duplicate key 'is_vendor'.","ObjectExpression",["431"],["432"],"'CART_ITEM_ADDED' is defined but never used.","'CART_ITEM_ADD_FAIL' is defined but never used.","'CART_LOADED' is defined but never used.","'CART_LOADING' is defined but never used.","'CART_LOAD_FAIL' is defined but never used.","'CART_ITEM_DELETED' is defined but never used.","'CART_ITEM_DELETION_FAIL' is defined but never used.","'ADDRESS_LOADING' is defined but never used.","'ADDRESS_DELETE_ERROR' is defined but never used.","'ADDRESS_ADDING' is defined but never used.","'ADDRESS_ADDING_ERROR' is defined but never used.",["431"],["432"],"'element' is defined but never used.","'FETCHING_DATA' is defined but never used.","'FETCHING_COMPLETE' is defined but never used.","'cart' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'transaction_id' is assigned a value but never used.","'PropTypes' is defined but never used.","'PRODUCT_LOADING_FAIL' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'is_active' is assigned a value but never used.","'CardNumberElement' is defined but never used.","'CardCvcElement' is defined but never used.","'CardExpiryElement' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'body' is assigned a value but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'totalAmt' is assigned a value but never used.","'loadUser' is defined but never used.","no-global-assign","no-unsafe-negation"]