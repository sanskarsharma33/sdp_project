[{"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerRegister.js":"1","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Product.js":"2","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\ProductImages.js":"3","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\address.js":"4","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\messages.js":"5","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\order.js":"6","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\productList.js":"7","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\Cart.js":"8","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\index.js":"9","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Alert.js":"10","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\store.js":"11","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\vendor.js":"12","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorRegister.js":"13","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\productCard.js":"14","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\product.js":"15","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\addProduct.js":"16","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorUpdate.js":"17","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorProfile.js":"18","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerUpdate.js":"19","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\order.js":"20","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\CartCard.js":"21","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Header.js":"22","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\product.js":"23","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\auth.js":"24","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reportWebVitals.js":"25","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Home.js":"26","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\messages.js":"27","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\allProductImages.js":"28","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\auth.js":"29","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\comment.js":"30","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\commentList.js":"31","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\commentForm.js":"32","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\types.js":"33","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\errors.js":"34","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\index.js":"35","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\cart.js":"36","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\App.js":"37","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Login.js":"38","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\payment.js":"39","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\PaymentGateway\\CardSection.js":"40","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerProfile.js":"41","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\http-common.js":"42","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\PaymentGateway\\PaymentCard.js":"43","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\editProduct.js":"44","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\PaymentGateway\\InjectedCheckout.js":"45","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Orders\\OrderCard.js":"46","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Orders\\Orders.js":"47","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\cart.js":"48","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\PaymentGateway\\Payment.js":"49","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\productList.js":"50","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\shop.js":"51","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\shopCard.js":"52","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\shopList.js":"53","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\shopList.js":"54","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\ProductByShop.js":"55"},{"size":5724,"mtime":1614694957206,"results":"56","hashOfConfig":"57"},{"size":11139,"mtime":1614937575735,"results":"58","hashOfConfig":"57"},{"size":3862,"mtime":1611864227135,"results":"59","hashOfConfig":"57"},{"size":7291,"mtime":1614790725601,"results":"60","hashOfConfig":"57"},{"size":349,"mtime":1611864227148,"results":"61","hashOfConfig":"57"},{"size":1912,"mtime":1614696273417,"results":"62","hashOfConfig":"57"},{"size":2226,"mtime":1614694513910,"results":"63","hashOfConfig":"57"},{"size":3177,"mtime":1614769208633,"results":"64","hashOfConfig":"57"},{"size":527,"mtime":1614694513904,"results":"65","hashOfConfig":"57"},{"size":2386,"mtime":1614694513883,"results":"66","hashOfConfig":"57"},{"size":405,"mtime":1611864227167,"results":"67","hashOfConfig":"57"},{"size":1295,"mtime":1614694740799,"results":"68","hashOfConfig":"57"},{"size":8801,"mtime":1614694513894,"results":"69","hashOfConfig":"57"},{"size":8748,"mtime":1614773976446,"results":"70","hashOfConfig":"57"},{"size":6128,"mtime":1614937705447,"results":"71","hashOfConfig":"57"},{"size":4744,"mtime":1614694513895,"results":"72","hashOfConfig":"57"},{"size":8244,"mtime":1614694513895,"results":"73","hashOfConfig":"57"},{"size":4382,"mtime":1614695186333,"results":"74","hashOfConfig":"57"},{"size":4395,"mtime":1614694740667,"results":"75","hashOfConfig":"57"},{"size":2940,"mtime":1614794436466,"results":"76","hashOfConfig":"57"},{"size":5557,"mtime":1614694513884,"results":"77","hashOfConfig":"57"},{"size":7251,"mtime":1614947902987,"results":"78","hashOfConfig":"57"},{"size":8590,"mtime":1614937210582,"results":"79","hashOfConfig":"57"},{"size":4711,"mtime":1611864271599,"results":"80","hashOfConfig":"57"},{"size":467,"mtime":1614694513911,"results":"81","hashOfConfig":"57"},{"size":3965,"mtime":1614716431679,"results":"82","hashOfConfig":"57"},{"size":297,"mtime":1614694513907,"results":"83","hashOfConfig":"57"},{"size":2624,"mtime":1614694702843,"results":"84","hashOfConfig":"57"},{"size":2136,"mtime":1611864274980,"results":"85","hashOfConfig":"57"},{"size":1103,"mtime":1614936732497,"results":"86","hashOfConfig":"57"},{"size":1092,"mtime":1614936818404,"results":"87","hashOfConfig":"57"},{"size":2739,"mtime":1614936380715,"results":"88","hashOfConfig":"57"},{"size":3790,"mtime":1614937204880,"results":"89","hashOfConfig":"57"},{"size":406,"mtime":1614694513905,"results":"90","hashOfConfig":"57"},{"size":501,"mtime":1614849296585,"results":"91","hashOfConfig":"57"},{"size":2834,"mtime":1614714489770,"results":"92","hashOfConfig":"57"},{"size":7000,"mtime":1614866211695,"results":"93","hashOfConfig":"57"},{"size":2571,"mtime":1614694513891,"results":"94","hashOfConfig":"57"},{"size":812,"mtime":1614697322564,"results":"95","hashOfConfig":"57"},{"size":1111,"mtime":1614694740669,"results":"96","hashOfConfig":"57"},{"size":2440,"mtime":1614694513887,"results":"97","hashOfConfig":"57"},{"size":178,"mtime":1614694513902,"results":"98","hashOfConfig":"57"},{"size":2117,"mtime":1614791982591,"results":"99","hashOfConfig":"57"},{"size":6148,"mtime":1614694703712,"results":"100","hashOfConfig":"57"},{"size":990,"mtime":1614791330321,"results":"101","hashOfConfig":"57"},{"size":4315,"mtime":1614794001641,"results":"102","hashOfConfig":"57"},{"size":2358,"mtime":1614773190409,"results":"103","hashOfConfig":"57"},{"size":3313,"mtime":1614769820867,"results":"104","hashOfConfig":"57"},{"size":1806,"mtime":1614791314164,"results":"105","hashOfConfig":"57"},{"size":1819,"mtime":1614866326011,"results":"106","hashOfConfig":"57"},{"size":2556,"mtime":1614849887116,"results":"107","hashOfConfig":"57"},{"size":3181,"mtime":1614866849682,"results":"108","hashOfConfig":"57"},{"size":1230,"mtime":1614849635147,"results":"109","hashOfConfig":"57"},{"size":1324,"mtime":1614849835300,"results":"110","hashOfConfig":"57"},{"size":4070,"mtime":1614866026498,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},"1ftc8x9",{"filePath":"116","messages":"117","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"155"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"190"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"130"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"136"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"216"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"130"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerRegister.js",["266","267"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport http from '../http-common';\r\nimport {connect} from 'react-redux';\r\nimport {registerCustomer} from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport class CustomerRegister extends Component {\r\n    state = {\r\n        username: null,\r\n        email: null,\r\n        first_name: null,\r\n        last_name: null,\r\n        phone: null,\r\n        is_vendor: false,\r\n        password: null,\r\n        password2: null,\r\n    };\r\n\r\n    static propTypes = {\r\n        registerCustomer: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n    // this.state.first_name, this.state.last_name,this.state.password,this.state.email, this.state.is_vendor, this.state.password2, this.state.username, this.state.phone\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.registerCustomer(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.name);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const {\r\n            username,\r\n            password,\r\n            password2,\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n            is_vendor,\r\n            email,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Register Customer</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>firstname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"first_name\"\r\n                                onChange={this.onChange}\r\n                                value={first_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>lastname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"last_name\"\r\n                                onChange={this.onChange}\r\n                                value={last_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                onChange={this.onChange}\r\n                                value={email}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password2</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password2\"\r\n                                onChange={this.onChange}\r\n                                value={password2}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                onChange={this.onChange}\r\n                                value={phone}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            hidden\r\n                            name=\"is_vendor\"\r\n                            value={is_vendor}\r\n                        ></input>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {registerCustomer})(CustomerRegister);\r\n",["268","269"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Product.js",["270","271","272","273","274","275","276","277","278","279","280"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\ProductImages.js",["281","282"],"import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {element} from 'prop-types';\r\nimport '../style/ProductImages.css';\r\nimport {addImages} from '../actions/product';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass ProductImages extends Component {\r\n    fileObj = [];\r\n    fileArray = [];\r\n\r\n    static propTypes = {\r\n        areProductImagesUploaded: PropTypes.bool,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            images: [null],\r\n            reload: false,\r\n            pid: this.props.match.params.id,\r\n        };\r\n        // let id = this.props.match.params.id;\r\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this);\r\n        this.uploadFiles = this.uploadFiles.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n    }\r\n\r\n    uploadMultipleFiles(e) {\r\n        // console.log(e.target)\r\n        this.fileObj.push(e.target.files[0]);\r\n        let index = this.fileObj.length - 1;\r\n        // console.log(this.fileObj[index])\r\n        this.fileArray.push({\r\n            url: URL.createObjectURL(this.fileObj[index]),\r\n            id: index,\r\n        });\r\n        this.setState({images: this.fileObj});\r\n        // console.log(this.fileObj)\r\n    }\r\n\r\n    uploadFiles(e) {\r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n        this.props.addImages(this.state);\r\n    }\r\n\r\n    removeImage(e) {\r\n        // e.preventDefault()\r\n        this.fileObj.splice(e.target.id, 1);\r\n        this.fileArray.splice(e.target.id, 1);\r\n        for (let i = 0; i < this.fileArray.length; i++) {\r\n            this.fileArray[i].id = i;\r\n        }\r\n        this.setState({images: this.fileObj});\r\n        console.log(this.fileObj);\r\n        this.setState({reload: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.reload) {\r\n            this.setState({reload: false});\r\n            return <div></div>;\r\n        }\r\n        if (this.props.areProductImagesUploaded) {\r\n            return <Redirect to={`/Product/${this.props.match.params.id}`} />;\r\n        }\r\n        return (\r\n            <form>\r\n                <h1>\r\n                    <center>Upload Images</center>\r\n                </h1>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"form-group multi-preview\">\r\n                    {(this.fileArray || []).map((element) => (\r\n                        <img\r\n                            src={element.url}\r\n                            className=\"image\"\r\n                            id={element.id}\r\n                            style={{\r\n                                height: '10rem',\r\n                                margin: '20px 20px 20px',\r\n                            }}\r\n                            onClick={this.removeImage}\r\n                            alt=\"...\"\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"file\"\r\n                        className=\"form-control\"\r\n                        onChange={this.uploadMultipleFiles}\r\n                        multiple\r\n                    />\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger btn-block\"\r\n                    onClick={this.uploadFiles}\r\n                >\r\n                    Upload\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    areProductImagesUploaded: state.product.areProductImagesUploaded,\r\n});\r\nexport default connect(mapStateToProps, {addImages})(ProductImages);\r\n",["283","284"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\address.js",["285","286","287"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\messages.js",[],["288","289"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\order.js",["290"],"import {tokenConfig} from './auth';\r\nimport http from '../http-common';\r\nimport {\r\n    ADDRESS_LOADED,\r\n    ADDRESS_LOADING,\r\n    ADDRESS_LOADING_ERROR,\r\n    ADDRESS_DELETING,\r\n    ADDRESS_DELETED,\r\n    ADDRESS_DELETE_FAIL,\r\n    ADDRESS_ADDED,\r\n    ADDRESS_ADDING,\r\n    ADDRESS_ADDING_ERROR,\r\n    SELECT_ADDRESS,\r\n    ADDRESS_SELECTED,\r\n} from './types';\r\n\r\nexport const getAddress = (temp) => (dispatch, getState) => {\r\n    console.log('HERE');\r\n    dispatch({type: ADDRESS_LOADING});\r\n    http.get('/Authuser/address/', tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            dispatch({type: ADDRESS_LOADED, payload: res.data});\r\n        })\r\n        .catch((err) => {\r\n            dispatch({type: ADDRESS_LOADING_ERROR});\r\n        });\r\n};\r\n\r\nexport const addAddress = (obj) => (dispatch, getState) => {\r\n    dispatch({type: ADDRESS_ADDING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n\r\n    http.post('/Authuser/address/', body, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res);\r\n            dispatch({type: ADDRESS_ADDED, payload: res.data});\r\n        })\r\n        .catch((err) => {\r\n            dispatch({type: ADDRESS_ADDING_ERROR});\r\n        });\r\n};\r\n\r\nexport const deleteAddress = (id) => (dispatch, getState) => {\r\n    dispatch({type: ADDRESS_DELETING});\r\n    console.log(id);\r\n    console.log('DELETING');\r\n    http.delete(`/Authuser/address/${id}/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log('DELETED');\r\n            dispatch({type: ADDRESS_DELETED, payload: id});\r\n        })\r\n        .catch((err) => {\r\n            dispatch({type: ADDRESS_DELETE_FAIL});\r\n        });\r\n};\r\n\r\nexport const selectAddress = (id) => (dispatch, getState) => {\r\n    http.get(`/AuthUser/address/${id}/`, tokenConfig(getState)).then((res) => {\r\n        dispatch({type: ADDRESS_SELECTED});\r\n    });\r\n};\r\n",["291","292"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\productList.js",["293","294"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\Cart.js",["295","296","297"],"import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {Switch, Link, Redirect, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../style/Cart.css';\r\nimport CartCard from './CartCard';\r\nimport {getCartItems} from '../../actions/cart';\r\nimport {loadUser} from '../../actions/auth';\r\n\r\nclass Cart extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n        cart: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getCartItems();\r\n    }\r\n\r\n    calculateTotalAmount() {}\r\n\r\n    handler() {\r\n        this.props.getCartItems();\r\n    }\r\n    render() {\r\n        console.log(this.props.auth);\r\n\r\n        if (!this.props.auth.isAuthenticated) {\r\n            console.log(this.props.auth);\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.auth.user.is_vendor) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.cart.isCartLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        }\r\n        if (this.props.cart.cartUpdated) {\r\n            return <div>{this.props.getCartItems()}</div>;\r\n        }\r\n        let totalAmt = 0;\r\n        const cart = this.props.cart.cartItems;\r\n        const items =\r\n            cart && cart.length ? (\r\n                cart.map((element) => {\r\n                    totalAmt += element.product.amount * element.quantity;\r\n                    return (\r\n                        <div>\r\n                            <CartCard element={element} />\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : (\r\n                /**/\r\n                <div>No Items In Cart</div>\r\n            );\r\n        const len = cart && cart.length ? cart.length : 0;\r\n        return (\r\n            <div>\r\n                <h5 class=\"mb-4\">\r\n                    Cart (<span>{len}</span> items)\r\n                </h5>\r\n                {items}\r\n\r\n                <h3>Total Amount {this.props.cart.totalAmt}</h3>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Link to={`/Address`}>\r\n                    <button\r\n                        className=\"btn btn-success\"\r\n                        style={{width: '70rem'}}\r\n                    >\r\n                        Select Address\r\n                    </button>\r\n                </Link>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n    cart: state.cart,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getCartItems, loadUser})(Cart);\r\n",["298","299"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\index.js",[],["300","301"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Alert.js",[],["302","303"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\store.js",[],["304","305"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\vendor.js",["306","307","308"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorRegister.js",["309","310","311","312"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport http from '../http-common';\r\nimport {connect} from 'react-redux';\r\nimport {registerVendor} from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport class VendorRegister extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        is_vendor: true,\r\n        password: '',\r\n        password2: '',\r\n        shop_name: '',\r\n        address: '',\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: '',\r\n        cod_available: true,\r\n        transaction_id: '',\r\n        is_active: false,\r\n    };\r\n\r\n    static propTypes = {\r\n        registerVendor: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.registerVendor(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.name);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const {\r\n            username,\r\n            password,\r\n            password2,\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n            is_vendor,\r\n            email,\r\n            shop_name,\r\n            address,\r\n            location_long,\r\n            location_lat,\r\n            pincode,\r\n            cod_available,\r\n            transaction_id,\r\n            is_active,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Register Vendor</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>firstname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"first_name\"\r\n                                onChange={this.onChange}\r\n                                value={first_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>lastname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"last_name\"\r\n                                onChange={this.onChange}\r\n                                value={last_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                onChange={this.onChange}\r\n                                value={email}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password2</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password2\"\r\n                                onChange={this.onChange}\r\n                                value={password2}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                onChange={this.onChange}\r\n                                value={phone}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Shop name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"shop_name\"\r\n                                onChange={this.onChange}\r\n                                value={shop_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"address\"\r\n                                onChange={this.onChange}\r\n                                value={address}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Longitude</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"location_long\"\r\n                                onChange={this.onChange}\r\n                                value={location_long}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Lattitude</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"location_lat\"\r\n                                onChange={this.onChange}\r\n                                value={location_lat}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pincode</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"pincode\"\r\n                                onChange={this.onChange}\r\n                                value={pincode}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Transaction id</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"transaction_id\"\r\n                                onChange={this.onChange}\r\n                                value={transaction_id}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            hidden\r\n                            name=\"is_vendor\"\r\n                            value={is_vendor}\r\n                        ></input>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {registerVendor})(VendorRegister);\r\n",["313","314"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\productCard.js",["315","316","317","318","319"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../style/productCard.css';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {delete_Product} from '../actions/product';\r\nimport {addToCart, getCartItems} from '../actions/cart';\r\nimport {\r\n    faTrash,\r\n    faRupeeSign,\r\n    faPlusCircle,\r\n    faMinusCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nclass ProductCard extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes,\r\n        isProductLoaded: PropTypes.bool,\r\n        isProductDeleted: PropTypes.bool,\r\n        cartUpdated: PropTypes.bool,\r\n        cartItems: PropTypes.object.isRequired,\r\n        isCartLoading: PropTypes.bool,\r\n        auth: PropTypes.object.isRequired,\r\n    };\r\n    state = {\r\n        redirect: false,\r\n        Editredirect: false,\r\n        pid: 0,\r\n        quantity: 1,\r\n        flag: true,\r\n        isInCart: false,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        if (!this.props.auth.is_vendor) {\r\n            this.props.getCartItems();\r\n        }\r\n        /*this.props.cartItems.forEach((e) => {\r\n      if (e.product.id == this.props.element.id) {\r\n        this.setState({ isInCart: true });\r\n        this.setState({ quantity: e.quantity });\r\n      }\r\n    });*/\r\n    }\r\n\r\n    async UpdateState() {\r\n        await this.props.cartItems.forEach((e) => {\r\n            if (e.product.id === this.props.element.id) {\r\n                this.setState({isInCart: true});\r\n                this.setState({quantity: e.quantity});\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (!this.props.isCartLoading && !this.props.auth.is_vendor) {\r\n            if (this.state.flag) {\r\n                //console.log(this.props.vendor);\r\n                this.setState({flag: false});\r\n                this.UpdateState();\r\n            }\r\n        }\r\n    };\r\n\r\n    addToCart = (e) => {\r\n        e.preventDefault();\r\n        this.state.pid = this.props.element.id;\r\n        this.state.quantity = 1;\r\n        this.props.addToCart(this.state);\r\n    };\r\n    onClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState({redirect: true}, () => {\r\n            this.renderRedirect();\r\n        });\r\n    };\r\n    onEditClick = (e) => {\r\n        e.preventDefault();\r\n        console.log('Edit');\r\n        this.setState({Editredirect: true}, () => {\r\n            this.renderRedirect();\r\n        });\r\n    };\r\n    onDeleteClick = (e) => {\r\n        // e.preventDefault();\r\n        // store.dispatch({type:PRODUCT_LIST_UPDATING})\r\n        this.props.delete_Product(this.props.element.id);\r\n    };\r\n    onUploadImagesClick = (e) => {\r\n        // e.preventDefault();\r\n        // store.dispatch({type:PRODUCT_LIST_UPDATING})\r\n        return (\r\n            <Redirect to={`/Product/UploadImages/${this.props.element.id}`} />\r\n        );\r\n    };\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            console.log('renderRedirect');\r\n            return <Redirect to={`/Product/${this.props.element.id}`} />;\r\n        }\r\n        if (this.state.Editredirect)\r\n            return <Redirect to={`/Product/Edit/${this.props.element.id}`} />;\r\n        if (this.props.isProductDeleted) this.props.handler();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <div\r\n                    className=\"product\"\r\n                    style={{\r\n                        minHeight: '30rem',\r\n                        maxHeight: '35rem',\r\n                        maxWidth: '25rem',\r\n                        minWidth: '20rem',\r\n                        margin: '20px 20px 20px',\r\n                    }}\r\n                >\r\n                    <div className=\"product__info\">\r\n                        <p>{this.props.element.title}</p>\r\n                        <p className=\"product__price\">\r\n                            <small>\r\n                                <FontAwesomeIcon icon={faRupeeSign} />\r\n                            </small>\r\n                            <strong>{this.props.element.amount}</strong>\r\n                        </p>\r\n                    </div>\r\n                    <img\r\n                        src={`http://127.0.0.1:8000${this.props.element.image[0]}`}\r\n                        alt=\"\"\r\n                    />\r\n                    {this.props.canEdit ? (\r\n                        <center>\r\n                            <div>\r\n                                <Link\r\n                                    to={`/Product/Images/${this.props.element.id}`}\r\n                                >\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        style={{\r\n                                            margin: '10px 10px 10px',\r\n                                            width: '100px',\r\n                                        }}\r\n                                    >\r\n                                        Images\r\n                                    </button>\r\n                                </Link>\r\n                                <Link\r\n                                    to={`/Product/UploadImages/${this.props.element.id}`}\r\n                                >\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        style={{margin: '10px 10px 10px'}}\r\n                                    >\r\n                                        Add Images\r\n                                    </button>\r\n                                </Link>\r\n                                <button\r\n                                    className=\"btn btn-warning\"\r\n                                    style={{\r\n                                        margin: '10px 10px 10px',\r\n                                        width: '100px',\r\n                                    }}\r\n                                    onClick={this.onEditClick}\r\n                                >\r\n                                    Edit\r\n                                </button>{' '}\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    style={{\r\n                                        margin: '10px 10px 10px',\r\n                                        width: '100px',\r\n                                    }}\r\n                                    onClick={this.onDeleteClick}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        </center>\r\n                    ) : (\r\n                        <div>\r\n                            {this.props.isCartLoading ? (\r\n                                <FontAwesomeIcon icon={faSpinner} />\r\n                            ) : (\r\n                                <div>\r\n                                    <button\r\n                                        className=\"btn btn-info\"\r\n                                        onClick={this.onClick}\r\n                                        style={{margin: '10px 10px 10px'}}\r\n                                    >\r\n                                        Show\r\n                                    </button>\r\n                                    {this.state.isInCart ? (\r\n                                        <span>Added To Cart</span>\r\n                                    ) : (\r\n                                        <button\r\n                                            className=\"btn btn-success\"\r\n                                            onClick={this.addToCart}\r\n                                        >\r\n                                            Add To Cart\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isProductLoaded: state.product.isProductLoaded,\r\n    isProductListUpdating: state.product.isProductDeleted,\r\n    cartUpdated: state.cart.cartUpdated,\r\n    cartItems: state.cart.cartItems,\r\n    isCartLoading: state.cart.isCartLoading,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    delete_Product,\r\n    addToCart,\r\n    getCartItems,\r\n})(ProductCard);\r\n",["320","321"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\product.js",["322","323","324","325","326","327","328"],"import {\r\n    PRODUCT_LOADING,\r\n    PRODUCT_LOADED,\r\n    PRODUCT_LOADING_FAIL,\r\n    PRODUCT_ADDED,\r\n    PRODUCT_REMOVED,\r\n    PRODUCT_EDITED,\r\n    PRODUCT_EDIT_FAIL,\r\n    PRODUCT_DELETED,\r\n    PRODUCT_DELETION_FAIL,\r\n    PRODUCT_IMAGES_UPLOADED,\r\n    PRODUCT_IMAGES_UPLOAD_FAIL,\r\n    PRODUCT_IMAGES_LOADING,\r\n    PRODUCT_IMAGES_LOADED,\r\n    LOGOUT_SUCCESS,\r\n    PRODUCT_REVIEWS_LOADED,\r\n    PRODUCT_REVIEWS_LOADING,\r\n    PRODUCT_REVIEWS_LOAD_FAIL,\r\n    PRODUCT_REVIEWS_DELETED,\r\n    PRODUCT_REVIEWS_DELETING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isProductLoading: false,\r\n    isProductAdded: false,\r\n    isProductLoaded: false,\r\n    product: null,\r\n    isProductUpdated: false,\r\n    isProductDeleted: false,\r\n    areProductImagesUploaded: false,\r\n    areImagesLoading: false,\r\n    areImagesLoaded: false,\r\n    productImages: null,\r\n    comments: [],\r\n    isCommentLoading: false,\r\n    isCommentLoaded: false,\r\n    commentDeleted: false,\r\n    commentDeleting: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case PRODUCT_LOADING:\r\n            return {\r\n                ...state,\r\n                isProductLoading: true,\r\n                areProductImagesUploaded: false,\r\n                comments: [],\r\n                commentDeleting: false,\r\n                isProductAdded: false,\r\n            };\r\n        case PRODUCT_LOADED:\r\n            console.log('LOADED');\r\n            return {\r\n                ...state,\r\n                isProductLoaded: true,\r\n                isProductLoading: false,\r\n                product: action.payload,\r\n                isProductAdded: false,\r\n                comments: [],\r\n                areProductImagesUploaded: false,\r\n                commentDeleting: false,\r\n            };\r\n        case PRODUCT_REMOVED:\r\n        case PRODUCT_LOADING_FAIL:\r\n            return {\r\n                ...state,\r\n                product: null,\r\n                isProductLoaded: false,\r\n                isProductAdded: false,\r\n                comments: [],\r\n                isProductLoading: false,\r\n                commentDeleting: false,\r\n                areProductImagesUploaded: false,\r\n            };\r\n        case PRODUCT_ADDED:\r\n            return {\r\n                ...state,\r\n                areProductImagesUploaded: false,\r\n                comments: [],\r\n                commentDeleting: false,\r\n                isProductAdded: true,\r\n            };\r\n        case PRODUCT_EDITED:\r\n            return {\r\n                ...state,\r\n                areProductImagesUploaded: false,\r\n                isProductAdded: false,\r\n                isProductUpdated: true,\r\n                comments: [],\r\n                commentDeleting: false,\r\n            };\r\n        case PRODUCT_EDIT_FAIL:\r\n            return {\r\n                ...state,\r\n                areProductImagesUploaded: false,\r\n                isProductAdded: false,\r\n                comments: [],\r\n                commentDeleting: false,\r\n                isProductUpdated: false,\r\n            };\r\n        case PRODUCT_IMAGES_UPLOADED:\r\n            return {\r\n                ...state,\r\n                isProductAdded: false,\r\n                comments: [],\r\n                commentDeleting: false,\r\n                areProductImagesUploaded: true,\r\n            };\r\n        case PRODUCT_IMAGES_LOADING:\r\n            return {\r\n                ...state,\r\n                isProductAdded: false,\r\n                areImagesLoaded: false,\r\n                comments: [],\r\n                commentDeleting: false,\r\n                areImagesLoading: true,\r\n            };\r\n        case PRODUCT_IMAGES_LOADED:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                areImagesLoaded: true,\r\n                comments: [],\r\n                areImagesLoading: false,\r\n                isProductAdded: false,\r\n                commentDeleting: false,\r\n                productImages: action.payload,\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isProductLoading: false,\r\n                isProductAdded: false,\r\n                isProductLoaded: false,\r\n                product: null,\r\n                isProductUpdated: false,\r\n                isProductDeleted: false,\r\n                areProductImagesUploaded: false,\r\n                areImagesLoading: false,\r\n                comments: [],\r\n                areImagesLoaded: false,\r\n                commentDeleting: false,\r\n                productImages: null,\r\n            };\r\n        case PRODUCT_REVIEWS_LOADED:\r\n            return {\r\n                ...state,\r\n                comments: action.payload,\r\n                commentDeleted: false,\r\n                isCommentLoading: false,\r\n                isCommentLoaded: true,\r\n                commentDeleting: false,\r\n            };\r\n        case PRODUCT_REVIEWS_LOADING:\r\n            return {\r\n                ...state,\r\n                comments: [],\r\n                isCommentLoading: true,\r\n                isCommentLoaded: false,\r\n                commentDeleting: false,\r\n            };\r\n        case PRODUCT_REVIEWS_LOAD_FAIL:\r\n            return {\r\n                ...state,\r\n                comments: [],\r\n                isCommentLoading: false,\r\n                isCommentLoaded: false,\r\n                commentDeleting: false,\r\n            };\r\n        case PRODUCT_REVIEWS_DELETED:\r\n            console.log('delete');\r\n            state.comments.map((item, index) => {\r\n                if (item.id == action.payload) state.comments.splice(index, 1);\r\n            });\r\n            return {\r\n                ...state,\r\n                comments: state.comments,\r\n                comments: [],\r\n                commentDeleted: true,\r\n                commentDeleting: false,\r\n            };\r\n        case PRODUCT_REVIEWS_DELETING:\r\n            return {\r\n                ...state,\r\n                comments: [],\r\n                commentDeleted: false,\r\n                commentDeleting: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\addProduct.js",["329"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorUpdate.js",["330","331","332"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {loadVendor, updateVendor} from '../actions/vendor';\r\nimport {Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport store from '../store';\r\nimport {UPDATE_FAIL} from '../actions/types';\r\n\r\nexport class VendorUpdate extends Component {\r\n    state = {\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        shop_name: '',\r\n        address: '',\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: '',\r\n        cod_available: true,\r\n        transaction_id: '',\r\n        isLoading: true,\r\n        flag: true,\r\n    };\r\n\r\n    static propTypes = {\r\n        vendor: PropTypes.object.isRequired,\r\n        auth: PropTypes.object.isRequired,\r\n        updateVendor: PropTypes.func.isRequired,\r\n        isFetching: PropTypes.bool,\r\n        isUpdated: PropTypes.bool,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.loadVendor();\r\n    }\r\n\r\n    UpdateState() {\r\n        this.setState(this.props.vendor);\r\n        //console.log(this.props.vendor);\r\n        this.setState(this.props.auth.user);\r\n        //console.log(this.state);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.flag) {\r\n            //console.log(this.props.vendor);\r\n            this.setState({flag: false});\r\n            this.UpdateState();\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.updateVendor(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.isUpdated) {\r\n            // store.dispatch({type: UPDATE_FAIL});\r\n            return <Redirect to=\"/profile/vendor\" />;\r\n        }\r\n        if (this.props.isFetching) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        } else {\r\n            const {\r\n                first_name,\r\n                last_name,\r\n                phone,\r\n                shop_name,\r\n                address,\r\n                location_long,\r\n                location_lat,\r\n                pincode,\r\n                cod_available,\r\n                transaction_id,\r\n            } = this.state;\r\n            return (\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Update Profile</h2>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>firstname</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"first_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={first_name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>lastname</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"last_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={last_name}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Phone</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"phone\"\r\n                                    onChange={this.onChange}\r\n                                    value={phone}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Shop name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"shop_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={shop_name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    onChange={this.onChange}\r\n                                    value={address}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Location Longitude</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"location_long\"\r\n                                    onChange={this.onChange}\r\n                                    value={location_long}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Location Lattitude</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"location_lat\"\r\n                                    onChange={this.onChange}\r\n                                    value={location_lat}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Pincode</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"pincode\"\r\n                                    onChange={this.onChange}\r\n                                    value={pincode}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Transaction id</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"transaction_id\"\r\n                                    onChange={this.onChange}\r\n                                    value={transaction_id}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    vendor: state.vendor.vendor,\r\n    auth: state.auth,\r\n    isFetching: state.vendor.isFetching,\r\n    isUpdated: state.vendor.isUpdated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateVendor, loadVendor})(\r\n    VendorUpdate\r\n);\r\n",["333","334"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorProfile.js",["335","336"],"import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {loadVendor} from '../actions/vendor';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {loadUser} from '../actions/auth';\r\n\r\nexport class VendorProfile extends Component {\r\n    state = {\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        shop_name: '',\r\n        address: '',\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: '',\r\n        cod_available: true,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.loadVendor();\r\n        this.props.loadUser();\r\n    }\r\n\r\n    static propTypes = {\r\n        vendor: PropTypes.object.isRequired,\r\n        auth: PropTypes.object.isRequired,\r\n        isFetching: PropTypes.bool,\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.isFetching || this.props.auth.isLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        } else {\r\n            const {first_name, last_name, phone} = this.props.auth.user;\r\n            const {\r\n                shop_name,\r\n                address,\r\n                location_long,\r\n                location_lat,\r\n                pincode,\r\n                cod_available,\r\n                transaction_id,\r\n            } = this.props.vendor;\r\n            return (\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Profile</h2>\r\n                        <div className=\"form-group\">\r\n                            <label>First Name : </label>\r\n\r\n                            <label className=\"form-control\">\r\n                                {' '}\r\n                                {first_name}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Last Name : </label>\r\n                            <label className=\"form-control\"> {last_name}</label>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Phone : </label>\r\n                            <label className=\"form-control\"> {phone}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Shop name : </label>\r\n                            <label className=\"form-control\"> {shop_name}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Address : </label>\r\n                            <label className=\"form-control\"> {address}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Longitude : </label>\r\n                            <label className=\"form-control\">\r\n                                {' '}\r\n                                {location_long}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Lattitude : </label>\r\n                            <label className=\"form-control\">\r\n                                {' '}\r\n                                {location_lat}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pincode : </label>\r\n                            <label className=\"form-control\"> {pincode}</label>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark\">\r\n                            <Link to=\"/update/vendor\">Make Changes</Link>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    vendor: state.vendor.vendor,\r\n    auth: state.auth,\r\n    isFetching: state.vendor.isFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, {loadVendor, loadUser})(VendorProfile);\r\n",["337","338"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerUpdate.js",[],["339","340"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\order.js",["341","342","343","344","345","346","347","348","349","350","351","352"],"import {\r\n    CART_ITEM_ADDED,\r\n    CART_ITEM_ADD_FAIL,\r\n    CART_LOADED,\r\n    CART_LOADING,\r\n    CART_LOAD_FAIL,\r\n    CART_ITEM_DELETED,\r\n    CART_ITEM_DELETION_FAIL,\r\n    ADDRESS_LOADED,\r\n    ADDRESS_LOADING,\r\n    ADDRESS_LOADING_ERROR,\r\n    ADDRESS_DELETE_ERROR,\r\n    ADDRESS_DELETED,\r\n    ADDRESS_DELETING,\r\n    ADDRESS_ADDED,\r\n    ADDRESS_ADDING,\r\n    ADDRESS_ADDING_ERROR,\r\n    ORDERS_LOADING,\r\n    ORDERS_LOADED,\r\n    ORDERS_LOAD_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    addressLoaded: false,\r\n    addressList: [],\r\n    addressElementDelete: false,\r\n    addressAdded: false,\r\n    address: null,\r\n    orderItems: [],\r\n    addressSelected: false,\r\n    isOrderLoading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADDRESS_LOADED:\r\n            return {\r\n                ...state,\r\n                addressLoaded: true,\r\n                addressAdded: false,\r\n                addressList: action.payload,\r\n                addressElementDelete: false,\r\n            };\r\n        case ADDRESS_LOADING_ERROR:\r\n            return {\r\n                ...state,\r\n                addressElementDelete: false,\r\n                addressAdded: false,\r\n                addressLoaded: false,\r\n                addressList: null,\r\n            };\r\n        case ADDRESS_DELETING:\r\n            console.log('DELETING');\r\n            return {\r\n                ...state,\r\n                addressAdded: false,\r\n                addressElementDelete: false,\r\n                addressLoaded: false,\r\n                addressList: [],\r\n            };\r\n        case ADDRESS_DELETED:\r\n            return {\r\n                ...state,\r\n                addressLoaded: true,\r\n                addressElementDelete: true,\r\n                addressList: [],\r\n                addressAdded: false,\r\n            };\r\n        case ADDRESS_ADDED:\r\n            return {\r\n                ...state,\r\n                addressAdded: true,\r\n                addressList: action.payload,\r\n            };\r\n        case ORDERS_LOADING:\r\n            return {\r\n                ...state,\r\n                orderItems: [],\r\n                isOrderLoading: true,\r\n            };\r\n        case ORDERS_LOADED:\r\n            function compare(a, b) {\r\n                if (a.order_date < b.order_date) {\r\n                    return 1;\r\n                }\r\n                if (a.order_date > b.order_date) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n            action.payload.sort(compare);\r\n            return {\r\n                ...state,\r\n                orderItems: action.payload,\r\n                isOrderLoading: false,\r\n            };\r\n        case ORDERS_LOAD_FAIL:\r\n            return {\r\n                ...state,\r\n                orderItems: [],\r\n                isOrderLoading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\CartCard.js",["353"],"import {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faTrash,\r\n    faRupeeSign,\r\n    faPlusCircle,\r\n    faMinusCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../style/Cart.css';\r\nimport {deleteCartItem, modifyItemQuantity} from '../../actions/cart';\r\n\r\nclass CartCard extends Component {\r\n    static propTypes = {\r\n        //product : PropTypes.object.isRequired,\r\n    };\r\n\r\n    state = {\r\n        quantity: 0,\r\n        flag: true,\r\n    };\r\n\r\n    UpdateState() {\r\n        this.setState(this.props.element);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.flag) {\r\n            //console.log(this.props.vendor);\r\n            this.setState({flag: false});\r\n            this.UpdateState();\r\n        }\r\n    }\r\n\r\n    async modify(q) {\r\n        if (q && q > 0) {\r\n            await this.setState({quantity: q});\r\n            this.props.modifyItemQuantity(this.props.element.id, q);\r\n        }\r\n    }\r\n\r\n    decrease = (e) => {\r\n        this.modify(parseInt(this.state.quantity) - 1);\r\n    };\r\n\r\n    increase = (e) => {\r\n        this.modify(parseInt(this.state.quantity) + 1);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onBlur = (e) => {\r\n        this.modify(e.target.value);\r\n    };\r\n    itemDelete = (e) => {\r\n        console.log('Deleting');\r\n        this.props.deleteCartItem(this.props.element.id);\r\n    };\r\n    render() {\r\n        const {quantity} = this.state;\r\n        return (\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-3\">\r\n                    <div className=\"\">\r\n                        <img\r\n                            className=\"img-fluid w-100 h-90\"\r\n                            src={`http://127.0.0.1:8000${this.props.element.product.image[0]}`}\r\n                            alt={this.props.element.product.title}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <div>\r\n                                <h4 className=\"text-uppercase\">\r\n                                    {this.props.element.product.title}\r\n                                </h4>\r\n                                <span className=\"text-muted text-uppercase describe\">\r\n                                    {this.props.element.product.catagory}\r\n                                </span>\r\n                                <br />\r\n                                <span className=\"text-muted text-uppercase describe\">\r\n                                    {this.props.element.product.details}\r\n                                </span>\r\n                                <br />\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"input-group\">\r\n                                    <span\r\n                                        className=\"input-group-btn\"\r\n                                        onClick={this.decrease}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinusCircle} />\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"quantity\"\r\n                                        className=\"number\"\r\n                                        onBlur={this.onBlur}\r\n                                        onChange={this.onChange}\r\n                                        value={quantity}\r\n                                    />\r\n                                    <span\r\n                                        className=\"input-group-btn\"\r\n                                        onClick={this.increase}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlusCircle} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div>\r\n                                <br />\r\n                                <button\r\n                                    className=\"btn btn-danger btn-lg rounded-0\"\r\n                                    onClick={this.itemDelete}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </button>\r\n                            </div>\r\n                            <p className=\"mb-0\">\r\n                                <span>\r\n                                    <strong id=\"summary\">\r\n                                        <FontAwesomeIcon icon={faRupeeSign} />\r\n                                        {this.props.element.product.amount}\r\n                                    </strong>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, {deleteCartItem, modifyItemQuantity})(\r\n    CartCard\r\n);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Header.js",["354","355","356"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\product.js",["357","358","359","360"],"import {returnErrors} from './messages';\r\nimport http from '../http-common';\r\n\r\nimport {\r\n    PRODUCT_LOADED,\r\n    PRODUCT_LOADING,\r\n    PRODUCT_LOADING_FAIL,\r\n    PRODUCT_ADDED,\r\n    PRODUCT_ADDING_FAIL,\r\n    PRODUCT_ADDING,\r\n    PRODUCT_EDITED,\r\n    PRODUCT_EDIT_FAIL,\r\n    PRODUCT_DELETED,\r\n    PRODUCT_DELETION_FAIL,\r\n    PRODUCT_IMAGES_UPLOAD_FAIL,\r\n    PRODUCT_IMAGES_UPLOADED,\r\n    PRODUCT_IMAGES_LOADED,\r\n    PRODUCT_IMAGES_LOADING,\r\n    PRODUCT_IMAGES_LOAD_FAIL,\r\n    PRODUCT_REVIEWS_LOADED,\r\n    PRODUCT_REVIEWS_LOADING,\r\n    PRODUCT_REVIEWS_LOAD_FAIL,\r\n    PRODUCT_REVIEWS_ADDED,\r\n    PRODUCT_REVIEWS_DELETED,\r\n    PRODUCT_REVIEWS_DELETING,\r\n} from './types';\r\n// import {getCommentsProduct} from '../Components/Product';\r\n\r\nexport const add_Product = (Product) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_ADDING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(Product);\r\n\r\n    console.log(body);\r\n\r\n    http.post('/ManageShops/products/', body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_ADDED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_ADDING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const edit_Product = (Product) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_ADDING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(Product);\r\n\r\n    console.log(body);\r\n\r\n    http.put(\r\n        `/ManageShops/products/${Product.id}/`,\r\n        body,\r\n        tokenConfig(getState)\r\n    )\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_EDITED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_EDIT_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getProduct = (id) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.get(`/ManageShops/product/${id}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_LOADING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const delete_Product = (id) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.delete(`/ManageShops/products/${id}/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_DELETED,\r\n                payload: id,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_DELETION_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const addImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    const formData = new FormData();\r\n    obj.images.map((image) => formData.append('images', image));\r\n    formData.append('pid', obj.pid);\r\n\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Accept: 'application/json',\r\n            type: 'formData',\r\n            'Access-Control-Allow-Origin': '*',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    // console.log(formData)\r\n    http.post(`/ManageShops/productimage`, formData, config)\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_UPLOADED,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_UPLOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_IMAGES_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n\r\n    console.log(body);\r\n    http.get(`/ManageShops/getproductimage/${obj}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const deleteImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_IMAGES_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n\r\n    // console.log(formData)\r\n    http.get(`/ManageShops/productimage`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getComment = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_REVIEWS_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    // console.log(formData)\r\n    // console.log(obj);\r\n    http.get(`/ManageReviews/reviews/${obj}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_REVIEWS_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            console.log('err');\r\n            dispatch({\r\n                type: PRODUCT_REVIEWS_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\nexport const postComment = (obj) => (dispatch, getState) => {\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    http.post(`/ManageReviews/reviews/`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_REVIEWS_ADDED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const deleteComment = (obj) => (dispatch, getState) => {\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    dispatch({\r\n        type: PRODUCT_REVIEWS_DELETING,\r\n    });\r\n    http.delete(`/ManageReviews/deletereviews/${obj}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_REVIEWS_DELETED,\r\n                payload: obj,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    return config;\r\n};\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\auth.js",["361","362"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Home.js",["363"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport store from '../store';\r\nimport {getAllProductList} from '../actions/productList';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ProductCard from './productCard';\r\nimport '../style/home.css';\r\nimport {getCartItems} from '../actions/cart';\r\n\r\nexport class Home extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object,\r\n        productList: PropTypes.object,\r\n        isProductListLoaded: PropTypes.bool,\r\n        isProductListUpdated: PropTypes.bool,\r\n        cartItems: PropTypes.object.isRequired,\r\n        cartUpdated: PropTypes.bool,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        store.dispatch(getAllProductList());\r\n    }\r\n    handler() {\r\n        store.dispatch(getAllProductList());\r\n    }\r\n    render() {\r\n        const productList = this.props.productList;\r\n        const {user} = this.props.auth;\r\n        if (!user) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (!user.is_vendor && this.props.cartUpdated) {\r\n            return <div>{this.props.getCartItems()}</div>;\r\n        }\r\n        if (this.props.isProductListLoaded && user != null) {\r\n            return (\r\n                <div>\r\n                    <div style={{marginTop: '20px'}}>\r\n                        <div className=\"row\" style={{marginTop: '20px'}}>\r\n                            {productList\r\n                                ? productList.map((element) => {\r\n                                      // console.log(element)\r\n                                      // console.log(user.email)\r\n                                      if (\r\n                                          user.is_vendor &&\r\n                                          element.vendor_email === user.email\r\n                                      ) {\r\n                                          console.log(element.id);\r\n                                          return (\r\n                                              <div className=\"col-12 col-sm-4 col-md-6 col-lg-4\">\r\n                                                  <ProductCard\r\n                                                      element={element}\r\n                                                      canEdit={true}\r\n                                                      handler={this.handler}\r\n                                                  />\r\n                                              </div>\r\n                                          );\r\n                                      } else if (!user.is_vendor) {\r\n                                          return (\r\n                                              <div className=\"col-12 col-sm-4 col-md-6 col-lg-4\">\r\n                                                  <ProductCard\r\n                                                      element={element}\r\n                                                      canEdit={false}\r\n                                                  />\r\n                                              </div>\r\n                                          );\r\n                                      }\r\n                                  })\r\n                                : 'No products'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (this.props.isProductListUpdated) {\r\n            return <div>{this.handler()}</div>;\r\n        }\r\n        return <div />;\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    // console.log(state)\r\n    auth: state.auth,\r\n    productList: state.productList.productList,\r\n    isProductListLoaded: state.productList.isProductListLoaded,\r\n    isProductListUpdated: state.productList.isProductListUpdated,\r\n    cartItems: state.cart.cartItems,\r\n    cartUpdated: state.cart.cartUpdated,\r\n});\r\nexport default connect(mapStateToProps, {getCartItems})(Home);\r\n",["364","365"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\messages.js",["366"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\allProductImages.js",["367","368","369"],"import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {element} from 'prop-types';\r\nimport '../style/ProductImages.css';\r\nimport {deleteImages, getImages} from '../actions/product';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass allProductImages extends Component {\r\n    static propTypes = {\r\n        areImagesLoaded: PropTypes.bool,\r\n        productImages: PropTypes.object,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pid: this.props.match.params.id,\r\n        };\r\n        console.log(this.state.pid);\r\n        this.props.getImages(this.state.pid);\r\n    }\r\n\r\n    removeImage(e) {\r\n        e.preventDefault();\r\n    }\r\n    handler() {\r\n        // this.props.getImages(this.state.id)\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(this.props.areImagesLoaded);\r\n        console.log(this.props.productImages);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.reload) {\r\n            this.setState({reload: false});\r\n            return <div></div>;\r\n        }\r\n        console.log(this.props.areImagesloaded);\r\n        if (this.props.areImagesLoaded) {\r\n            return (\r\n                <form>\r\n                    <h1>\r\n                        <center>All Images</center>\r\n                    </h1>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <div className=\"form-group multi-preview\">\r\n                        {(this.props.productImages || []).map((element) => (\r\n                            <img\r\n                                src={`http://127.0.0.1:8000${element.image}`}\r\n                                className=\"image\"\r\n                                id={element.id}\r\n                                style={{\r\n                                    height: '10rem',\r\n                                    margin: '20px 20px 20px',\r\n                                }}\r\n                                onClick={this.removeImage}\r\n                                alt=\"...\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </form>\r\n            );\r\n        }\r\n        return <div>No Images</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    areImagesLoaded: state.product.areImagesLoaded,\r\n    productImages: state.product.productImages,\r\n});\r\nexport default connect(mapStateToProps, {deleteImages, getImages})(\r\n    allProductImages\r\n);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\auth.js",["370","371","372","373"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\comment.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\commentList.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\commentForm.js",["374","375"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\types.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\errors.js",["376"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\cart.js",["377","378","379","380","381","382","383","384","385","386"],"import {\r\n    CART_ITEM_ADDED,\r\n    CART_ITEM_ADD_FAIL,\r\n    CART_LOADED,\r\n    CART_LOADING,\r\n    CART_LOAD_FAIL,\r\n    CART_ITEM_DELETED,\r\n    CART_ITEM_DELETION_FAIL,\r\n    CART_ITEM_MODIFIED,\r\n    CART_ITEM_MODIFY_FAIL,\r\n    LOGIN_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isItemAdded: false,\r\n    isCartLoading: false,\r\n    cartItems: [],\r\n    cartItemDeleted: false,\r\n    cartUpdated: false,\r\n    totalAmt: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CART_ITEM_ADDED:\r\n            return {\r\n                ...state,\r\n                cartUpdated: true,\r\n            };\r\n        case CART_ITEM_ADD_FAIL:\r\n            return {\r\n                ...state,\r\n                isItemAdded: false,\r\n            };\r\n        case CART_LOADING:\r\n            return {\r\n                ...state,\r\n                isCartLoading: true,\r\n                cartUpdated: false,\r\n            };\r\n        case CART_LOADED:\r\n            var total = 0;\r\n            action.payload.map((item) => {\r\n                total += item.quantity * item.product.amount;\r\n            });\r\n            return {\r\n                ...state,\r\n                cartItems: action.payload,\r\n                isCartLoading: false,\r\n                cartItemDeleted: false,\r\n                totalAmt: total,\r\n            };\r\n        case CART_LOAD_FAIL:\r\n        case CART_ITEM_DELETION_FAIL:\r\n        case CART_ITEM_MODIFY_FAIL:\r\n            return {\r\n                ...state,\r\n                cartItems: [],\r\n                isCartLoading: false,\r\n            };\r\n        case CART_ITEM_DELETED:\r\n            state.cartItems.map((item, index) => {\r\n                if (item.id == action.payload) state.cartItems.splice(index, 1);\r\n            });\r\n            var total = 0;\r\n            state.cartItems.map((item) => {\r\n                total += item.quantity * item.product.amount;\r\n            });\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems,\r\n                cartUpdated: false,\r\n                isCartLoading: false,\r\n                totalAmt: total,\r\n            };\r\n\r\n        case CART_ITEM_MODIFIED:\r\n            var obj = action.payload;\r\n            var total = 0;\r\n            state.cartItems.map((item) => {\r\n                if (item.id != obj.id)\r\n                    total += item.quantity * item.product.amount;\r\n                else {\r\n                    item.quantity = obj.quantity;\r\n                    total += obj.quantity * item.product.amount;\r\n                }\r\n            });\r\n            state.totalAmt = total;\r\n            return {\r\n                ...state,\r\n                totalAmt: total,\r\n                cartItems: state.cartItems,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\App.js",["387","388"],"import React, {Component, Fragment} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport {Provider as AlertProvider} from 'react-alert';\r\nimport AlertTemplate from 'react-alert-template-basic';\r\n\r\nimport Login from './Components/Login';\r\nimport Alert from './Components/Alert';\r\nimport CustomerRegister from './Components/CustomerRegister';\r\nimport VendorRegister from './Components/VendorRegister';\r\nimport VendorUpdate from './Components/VendorUpdate';\r\nimport Header from './Components/Header';\r\nimport Home from './Components/Home';\r\nimport Shop from './Components/shop';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport {loadUser} from './actions/auth';\r\nimport VendorProfile from './Components/VendorProfile';\r\nimport CustomerUpdate from './Components/CustomerUpdate';\r\nimport CustomerProfile from './Components/CustomerProfile';\r\nimport addProduct from './Components/addProduct';\r\nimport Product from './Components/Product';\r\nimport editProduct from './Components/editProduct';\r\nimport ProductImages from './Components/ProductImages';\r\nimport allProductImages from './Components/allProductImages';\r\nimport Cart from './Components/Cart/Cart';\r\nimport address from './Components/address';\r\nimport Payment from './Components/PaymentGateway/Payment';\r\nimport Orders from './Components/Orders/Orders';\r\nimport ProductByShop from './Components/ProductByShop';\r\n\r\n// Alert Options\r\nconst alertOptions = {\r\n    timeout: 5000,\r\n    position: 'top center',\r\n};\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        store.dispatch(loadUser());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <AlertProvider template={AlertTemplate} {...alertOptions}>\r\n                    <Router>\r\n                        <Fragment>\r\n                            <Header />\r\n                            <Alert />\r\n                            <div className=\"container\">\r\n                                <Switch>\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Home/\"\r\n                                        component={Home}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/login/\"\r\n                                        component={Login}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/addProduct/\"\r\n                                        component={addProduct}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/:id\"\r\n                                        component={Product}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Address\"\r\n                                        component={address}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/UploadImages/:id\"\r\n                                        component={ProductImages}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/Images/:id\"\r\n                                        component={allProductImages}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/Edit/:id\"\r\n                                        component={editProduct}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/Product/byShop/:id\"\r\n                                        component={ProductByShop}\r\n                                    />\r\n                                    <Route\r\n                                        path=\"/register/customer\"\r\n                                        component={CustomerRegister}\r\n                                    />\r\n                                    <Route\r\n                                        path=\"/register/vendor\"\r\n                                        component={VendorRegister}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/update/vendor\"\r\n                                        component={VendorUpdate}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/profile/vendor\"\r\n                                        component={VendorProfile}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/update/customer\"\r\n                                        component={CustomerUpdate}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/profile/customer\"\r\n                                        component={CustomerProfile}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/cart\"\r\n                                        component={Cart}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/orders\"\r\n                                        component={Orders}\r\n                                    />\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/paymentGateway/:id\"\r\n                                        component={Payment}\r\n                                    />\r\n                                    <Route exact path=\"/\" component={Shop} />\r\n                                </Switch>\r\n                            </div>\r\n                        </Fragment>\r\n                    </Router>\r\n                </AlertProvider>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n",["389","390"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Login.js",["391"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n    };\r\n\r\n    static propTypes = {\r\n        login: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.login(this.state.username, this.state.password);\r\n    };\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const {username, password} = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Login</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                        <p>Don't have an account?</p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\payment.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\PaymentGateway\\CardSection.js",["392","393","394"],"import React, { Component } from \"react\";\r\nimport {\r\n    CardElement,\r\n    CardNumberElement,\r\n    CardCvcElement,\r\n    CardExpiryElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport \"../../style/CardSection.css\";\r\n\r\nclass CardSection extends Component {\r\n    render() {\r\n        const CARD_ELEMENT_OPTIONS = {\r\n            style: {\r\n                base: {\r\n                    color: \"blue\",\r\n                    fontSize: \"16px\",\r\n                    fontFamily: \"sans-serif\",\r\n                    fontSmoothing: \"antialiased\",\r\n                    \"::placeholder\": {\r\n                        color: \"#CFD7DF\",\r\n                    },\r\n                },\r\n                invalid: {\r\n                    color: \"red\",\r\n                    \":focus\": {\r\n                        color: \"red\",\r\n                    },\r\n                },\r\n            },\r\n        };\r\n        return (\r\n            <div>\r\n                <div className=\"cardTitle\">Fill the Card details</div>\r\n                <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardSection;\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerProfile.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\http-common.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\PaymentGateway\\PaymentCard.js",["395"],"import React, {Component} from 'react';\r\nimport {CardElement} from '@stripe/react-stripe-js';\r\nimport CardSection from './CardSection';\r\nimport '../../style/CardSection.css';\r\nimport {connect} from 'react-redux';\r\nimport {loadUser} from '../../actions/auth';\r\nimport {pay} from '../../actions/payment';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class PaymentCard extends Component {\r\n    state = {\r\n        email: '',\r\n        id: '',\r\n        stripeToken: '',\r\n    };\r\n    static propTypes = {\r\n        success: PropTypes.bool,\r\n    };\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {stripe, elements} = this.props;\r\n        console.log('Payement card');\r\n        console.log(this.props);\r\n        let id = this.props.id;\r\n        if (!stripe || !elements) {\r\n            return;\r\n        }\r\n        const card = elements.getElement(CardElement);\r\n        const result = await stripe.createToken(card);\r\n        if (result.error) {\r\n            console.log(result.error.message);\r\n        } else {\r\n            this.setState({email: this.props.auth.user.email});\r\n            this.setState({stripeToken: result.token.id});\r\n            this.setState({id: id});\r\n            this.props.pay(this.state);\r\n        }\r\n    };\r\n    render() {\r\n        console.log(this.props);\r\n        if (this.props.success) {\r\n            return (\r\n                <center>\r\n                    <h1>SUCCESS</h1>\r\n                </center>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"cardcontainer\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <CardSection />\r\n                    <button\r\n                        disabled={!this.props.stripe}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary bg-success\"\r\n                    >\r\n                        Buy Now\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({success: state.payment.success});\r\n\r\nexport default connect(mapStateToProps, {pay})(PaymentCard);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\editProduct.js",["396","397","398","399","400","401","402"],"import React, {Component, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport product from '../reducers/product';\r\nimport {Link, Redirect, useParams} from 'react-router-dom';\r\nimport store from '../store';\r\nimport {\r\n    PRODUCT_LOADING,\r\n    PRODUCT_LOADED,\r\n    PRODUCT_REMOVED,\r\n} from '../actions/types';\r\nimport {getProduct, edit_Product} from '../actions/product';\r\n\r\nclass editProduct extends Component {\r\n    state = {\r\n        title: '',\r\n        catagory: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        details: '',\r\n        quantity: 0,\r\n        flag: true,\r\n    };\r\n    static propTypes = {\r\n        product: PropTypes.object,\r\n        isProductLoaded: PropTypes.bool,\r\n        isAuthenticated: PropTypes.bool,\r\n        isProductUpdated: PropTypes.bool,\r\n    };\r\n    UpdateState() {\r\n        // console.log(this.props.product)\r\n        this.setState(this.props.product);\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        let id = this.props.match.params.id;\r\n        this.props.getProduct(id);\r\n    }\r\n    componentDidUpdate() {\r\n        // console.log(this.state)\r\n        if (this.state.flag) {\r\n            this.setState({flag: false});\r\n            this.UpdateState();\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        store.dispatch({type: PRODUCT_REMOVED});\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.edit_Product(this.state);\r\n    };\r\n    render() {\r\n        if (this.props.isProductUpdated) {\r\n            return <Redirect to=\"/Home/\" />;\r\n        }\r\n        if (this.props.isProductLoaded) {\r\n            const {\r\n                title,\r\n                catagory,\r\n                amount,\r\n                discount,\r\n                details,\r\n                quantity,\r\n            } = this.state;\r\n            return (\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Add Product</h2>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>Product Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    onChange={this.onChange}\r\n                                    value={title}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Catagory</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"catagory\"\r\n                                    onChange={this.onChange}\r\n                                    value={catagory}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Details</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"details\"\r\n                                    onChange={this.onChange}\r\n                                    value={details}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"amount\"\r\n                                    onChange={this.onChange}\r\n                                    value={amount}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Discount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"discount\"\r\n                                    onChange={this.onChange}\r\n                                    value={discount}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Quantity</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"quantity\"\r\n                                    onChange={this.onChange}\r\n                                    value={quantity}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return <div>EDIT PRODUCT NOT FOUND</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    product: state.product.product,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isProductLoaded: state.product.isProductLoaded,\r\n    isProductUpdated: state.product.isProductUpdated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {edit_Product, getProduct})(\r\n    editProduct\r\n);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\PaymentGateway\\InjectedCheckout.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Orders\\OrderCard.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Orders\\Orders.js",["403","404","405","406"],"import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {Switch, Link, Redirect, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../style/Cart.css';\r\nimport OrderCard from './OrderCard';\r\nimport {getOrderItems} from '../../actions/cart';\r\nimport {loadUser} from '../../actions/auth';\r\nimport '../../style/home.css';\r\n\r\nclass Orders extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n        order: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props.auth.isAuthenticated);\r\n        this.props.loadUser();\r\n        this.props.getOrderItems();\r\n    }\r\n\r\n    handler() {\r\n        this.props.getOrderItems();\r\n    }\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            console.log(this.props.auth);\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.auth.user.is_vendor) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.order.isOrderLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        }\r\n        let totalAmt = 0;\r\n        const orders = this.props.order.orderItems;\r\n        const items =\r\n            orders && orders.length ? (\r\n                orders.map((element) => {\r\n                    return (\r\n                        <div>\r\n                            <OrderCard element={element} />\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : (\r\n                /**/\r\n                <div>No Items Placed</div>\r\n            );\r\n        const len = orders && orders.length ? orders.length : 0;\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <h5 className=\"mb-4\">\r\n                    Orders (<span>{len}</span> items)\r\n                </h5>\r\n                {items}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n    order: state.order,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getOrderItems, loadUser})(Orders);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\cart.js",["407"],"import {tokenConfig} from './auth';\r\nimport http from '../http-common';\r\nimport {\r\n    CART_LOADED,\r\n    CART_ITEM_ADDED,\r\n    CART_ITEM_ADD_FAIL,\r\n    CART_LOADING,\r\n    CART_LOAD_FAIL,\r\n    CART_ITEM_DELETED,\r\n    CART_ITEM_DELETION_FAIL,\r\n    CART_ITEM_MODIFIED,\r\n    CART_ITEM_MODIFY_FAIL,\r\n    ORDERS_LOADED,\r\n    ORDERS_LOADING,\r\n    ORDERS_LOAD_FAIL,\r\n} from './types';\r\nimport cart from '../reducers/cart';\r\n\r\nexport const addToCart = (data) => (dispatch, getState) => {\r\n    //dispatch({ CART_ITEM_ADDING });\r\n    const body = JSON.stringify(data);\r\n    http.post('ManageOrders/cart/', body, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res);\r\n            dispatch({\r\n                type: CART_ITEM_ADDED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: CART_ITEM_ADD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getCartItems = () => (dispatch, getState) => {\r\n    dispatch({type: CART_LOADING});\r\n    http.get('ManageOrders/cart/', tokenConfig(getState))\r\n        .then((res) => {\r\n            //console.log(res.data);\r\n            dispatch({\r\n                type: CART_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: CART_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getOrderItems = () => (dispatch, getState) => {\r\n    dispatch({type: ORDERS_LOADING});\r\n    http.get('ManageOrders/orders/', tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: ORDERS_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: ORDERS_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const deleteCartItem = (id) => (dispatch, getState) => {\r\n    dispatch({type: CART_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.delete(`/ManageOrders/cart/${id}/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: CART_ITEM_DELETED,\r\n                payload: id,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: CART_ITEM_DELETION_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const modifyItemQuantity = (id, quantity) => (dispatch, getState) => {\r\n    const body = JSON.stringify({quantity});\r\n    var obj = {id: id, quantity: quantity};\r\n    http.put(`/ManageOrders/cart/${id}/`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: CART_ITEM_MODIFIED,\r\n                payload: obj,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: CART_ITEM_MODIFY_FAIL,\r\n            });\r\n        });\r\n};\r\n",["408","409"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\PaymentGateway\\Payment.js",["410"],"import React, {Component} from 'react';\r\nimport {Elements} from '@stripe/react-stripe-js';\r\nimport {loadUser} from '../../actions/auth';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport {connect} from 'react-redux';\r\nimport InjectedCheckout from './InjectedCheckout';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport '../../style/CardSection.css';\r\n\r\nexport class Payment extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.loadUser();\r\n    }\r\n\r\n    render() {\r\n        const stripePromise = loadStripe(\r\n            'pk_test_51IMTY6BVij55aMSVEs6opqQQKrX7dnbXSWX2J6JMW38U8SjdLttuYJWamDYTeHbjw2eu58YT3VF3zUpIkiK1G8Be00EWtqmz5h'\r\n        );\r\n        let id = this.props.match.params.id;\r\n        console.log('Adress');\r\n        console.log(id);\r\n        if (!this.props.auth) {\r\n            console.log('a');\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n\r\n        if (this.props.auth.isLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        }\r\n\r\n        if (!this.props.auth.isAuthenticated) {\r\n            console.log('a');\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    <Elements stripe={stripePromise} id={id}>\r\n                        <InjectedCheckout id={id} />\r\n                    </Elements>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {loadUser})(Payment);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\productList.js",["411"],"import {returnErrors} from './messages';\r\nimport http from '../http-common';\r\n\r\nimport {\r\n    PRODUCT_LIST_LOADED,\r\n    PRODUCT_LIST_LOADING,\r\n    PRODUCT_LIST_LOADING_FAIL,\r\n} from './types';\r\n\r\nexport const getAllProductList = () => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LIST_LOADING});\r\n    http.get('/ManageShops/products/all', tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_LIST_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: PRODUCT_LIST_LOADING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getProductList = (id) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LIST_LOADING});\r\n    http.get(`/ManageShops/products/all/by_vendor/${id}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_LIST_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: PRODUCT_LIST_LOADING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    return config;\r\n};\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\shop.js",["412","413"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport store from '../store';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ShopCard from './shopCard';\r\nimport '../style/home.css';\r\nimport {getAllShopList} from '../actions/shopList';\r\nimport {getCartItems} from '../actions/cart';\r\n\r\nexport class shop extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object,\r\n        shopList: PropTypes.object,\r\n        isShopListLoaded: PropTypes.bool,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getAllShopList();\r\n    }\r\n    render() {\r\n        const shopList = this.props.shopList;\r\n        const {user} = this.props.auth;\r\n        console.log(shopList);\r\n        if (!user) {\r\n            return <div></div>;\r\n        }\r\n        if (user.is_vendor) {\r\n            return <Redirect to=\"/Home/\" />;\r\n        }\r\n        if (!user.is_vendor && this.props.cartUpdated) {\r\n            return <div>{this.props.getCartItems()}</div>;\r\n        }\r\n\r\n        if (this.props.isShopListLoaded && user != null) {\r\n            return (\r\n                <div>\r\n                    <div style={{marginTop: '20px'}}>\r\n                        <div className=\"row\" style={{marginTop: '20px'}}>\r\n                            {shopList\r\n                                ? shopList.map((element) => {\r\n                                      // console.log(element)\r\n                                      // console.log(user.email)\r\n                                      return (\r\n                                          <div className=\"col-12 col-sm-4 col-md-6 col-lg-4\">\r\n                                              <ShopCard\r\n                                                  element={element}\r\n                                                  canEdit={false}\r\n                                              />\r\n                                          </div>\r\n                                      );\r\n                                  })\r\n                                : 'No Shops'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return <div className=\"row\">NO</div>;\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    // console.log(state)\r\n    auth: state.auth,\r\n    shopList: state.shopList.shopList,\r\n    isShopListLoaded: state.shopList.isShopListLoaded,\r\n});\r\nexport default connect(mapStateToProps, {getAllShopList})(shop);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\shopCard.js",["414","415","416","417","418","419","420","421","422"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../style/shopCard.css';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {delete_Product} from '../actions/product';\r\nimport {addToCart, getCartItems} from '../actions/cart';\r\nimport {\r\n    faTrash,\r\n    faRupeeSign,\r\n    faPlusCircle,\r\n    faMinusCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nclass ShopCard extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes,\r\n        isShopLoaded: PropTypes.bool,\r\n        auth: PropTypes.object.isRequired,\r\n    };\r\n    state = {\r\n        redirect: false,\r\n        Editredirect: false,\r\n        pid: 0,\r\n        quantity: 1,\r\n        flag: true,\r\n        isInCart: false,\r\n    };\r\n\r\n    onClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState({redirect: true}, () => {\r\n            this.renderRedirect();\r\n        });\r\n    };\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            console.log('renderRedirect');\r\n            return <Redirect to={`/Product/${this.props.element.id}`} />;\r\n        }\r\n        if (this.state.Editredirect)\r\n            return <Redirect to={`/Product/Edit/${this.props.element.id}`} />;\r\n        if (this.props.isProductDeleted) this.props.handler();\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props.element);\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <div\r\n                    className=\"product\"\r\n                    style={{\r\n                        minHeight: '20rem',\r\n                        maxHeight: '20rem',\r\n                        maxWidth: '15rem',\r\n                        minWidth: '15rem',\r\n                        margin: '20px 20px 20px',\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <strong>{this.props.element.shop_name}</strong>\r\n                        <p>\r\n                            <p>{this.props.element.address}</p>\r\n                        </p>\r\n                        <p>{this.props.element.pincode}</p>\r\n                        <p>\r\n                            {this.props.element.cod_available\r\n                                ? 'COD AVAILABLE'\r\n                                : 'COD NOT AVAILABLE'}\r\n                        </p>\r\n                    </div>\r\n                    <Link to={`/Product/byShop/${this.props.element.id}`}>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            style={{margin: '10px 10px 10px'}}\r\n                        >\r\n                            Show Product\r\n                        </button>\r\n                    </Link>\r\n\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isShopLoaded: state.product.isProductLoaded,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ShopCard);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\shopList.js",["423"],"import {returnErrors} from './messages';\r\nimport http from '../http-common';\r\n\r\nimport {\r\n    SHOP_LIST_LOADED,\r\n    SHOP_LIST_LOADING,\r\n    SHOP_LIST_LOADING_FAIL,\r\n} from './types';\r\n\r\nexport const getAllShopList = () => (dispatch, getState) => {\r\n    // SHOP List Loading\r\n    dispatch({type: SHOP_LIST_LOADING});\r\n    http.get('/Authuser/vendors/all', tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: SHOP_LIST_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: SHOP_LIST_LOADING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    return config;\r\n};\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\shopList.js",["424"],"import {\r\n    SHOP_LIST_LOADED,\r\n    SHOP_LIST_LOADING,\r\n    SHOP_LIST_LOADING_FAIL,\r\n    LOGOUT_SUCCESS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isShopListLoading: false,\r\n    isShopListLoaded: false,\r\n    shopList: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SHOP_LIST_LOADING:\r\n            console.log('SHOP_LIST_LOADING');\r\n            return {\r\n                ...state,\r\n                isShopListLoading: true,\r\n            };\r\n        case SHOP_LIST_LOADED:\r\n            console.log('SHOP_LIST_LOADED');\r\n            return {\r\n                ...state,\r\n                isShopListLoaded: true,\r\n                isShopListLoading: false,\r\n                shopList: action.payload,\r\n            };\r\n        case SHOP_LIST_LOADING_FAIL:\r\n            return {\r\n                ...state,\r\n                shopList: null,\r\n                isShopListLoaded: false,\r\n                isShopListLoading: false,\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isShopListLoading: false,\r\n                isShopListLoaded: false,\r\n                shopList: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\ProductByShop.js",["425"],{"ruleId":"426","severity":1,"message":"427","line":3,"column":8,"nodeType":"428","messageId":"429","endLine":3,"endColumn":12},{"ruleId":"426","severity":1,"message":"430","line":6,"column":9,"nodeType":"428","messageId":"429","endLine":6,"endColumn":13},{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"426","severity":1,"message":"435","line":1,"column":27,"nodeType":"428","messageId":"429","endLine":1,"endColumn":36},{"ruleId":"426","severity":1,"message":"436","line":2,"column":8,"nodeType":"428","messageId":"429","endLine":2,"endColumn":16},{"ruleId":"426","severity":1,"message":"437","line":5,"column":8,"nodeType":"428","messageId":"429","endLine":5,"endColumn":15},{"ruleId":"426","severity":1,"message":"430","line":6,"column":9,"nodeType":"428","messageId":"429","endLine":6,"endColumn":13},{"ruleId":"426","severity":1,"message":"438","line":6,"column":25,"nodeType":"428","messageId":"429","endLine":6,"endColumn":34},{"ruleId":"426","severity":1,"message":"439","line":9,"column":5,"nodeType":"428","messageId":"429","endLine":9,"endColumn":20},{"ruleId":"426","severity":1,"message":"440","line":10,"column":5,"nodeType":"428","messageId":"429","endLine":10,"endColumn":19},{"ruleId":"441","severity":1,"message":"442","line":80,"column":30,"nodeType":"443","messageId":"444","endLine":80,"endColumn":32},{"ruleId":"441","severity":1,"message":"442","line":129,"column":41,"nodeType":"443","messageId":"444","endLine":129,"endColumn":43},{"ruleId":"445","severity":1,"message":"446","line":132,"column":45,"nodeType":"447","endLine":139,"endColumn":47},{"ruleId":"445","severity":1,"message":"446","line":144,"column":41,"nodeType":"447","endLine":148,"endColumn":43},{"ruleId":"426","severity":1,"message":"448","line":3,"column":9,"nodeType":"428","messageId":"429","endLine":3,"endColumn":16},{"ruleId":"426","severity":1,"message":"430","line":8,"column":9,"nodeType":"428","messageId":"429","endLine":8,"endColumn":13},{"ruleId":"431","replacedBy":"449"},{"ruleId":"433","replacedBy":"450"},{"ruleId":"426","severity":1,"message":"451","line":3,"column":15,"nodeType":"428","messageId":"429","endLine":3,"endColumn":23},{"ruleId":"426","severity":1,"message":"452","line":7,"column":8,"nodeType":"428","messageId":"429","endLine":7,"endColumn":13},{"ruleId":"453","severity":1,"message":"454","line":99,"column":41,"nodeType":"447","endLine":104,"endColumn":42},{"ruleId":"431","replacedBy":"455"},{"ruleId":"433","replacedBy":"456"},{"ruleId":"426","severity":1,"message":"457","line":13,"column":5,"nodeType":"428","messageId":"429","endLine":13,"endColumn":19},{"ruleId":"431","replacedBy":"458"},{"ruleId":"433","replacedBy":"459"},{"ruleId":"426","severity":1,"message":"460","line":7,"column":5,"nodeType":"428","messageId":"429","endLine":7,"endColumn":26},{"ruleId":"461","severity":1,"message":"462","line":19,"column":1,"nodeType":"463","endLine":72,"endColumn":2},{"ruleId":"426","severity":1,"message":"464","line":6,"column":9,"nodeType":"428","messageId":"429","endLine":6,"endColumn":15},{"ruleId":"426","severity":1,"message":"465","line":6,"column":33,"nodeType":"428","messageId":"429","endLine":6,"endColumn":38},{"ruleId":"426","severity":1,"message":"466","line":50,"column":21,"nodeType":"428","messageId":"429","endLine":50,"endColumn":29},{"ruleId":"431","replacedBy":"467"},{"ruleId":"433","replacedBy":"468"},{"ruleId":"431","replacedBy":"469"},{"ruleId":"433","replacedBy":"470"},{"ruleId":"431","replacedBy":"471"},{"ruleId":"433","replacedBy":"472"},{"ruleId":"431","replacedBy":"473"},{"ruleId":"433","replacedBy":"474"},{"ruleId":"426","severity":1,"message":"475","line":7,"column":5,"nodeType":"428","messageId":"429","endLine":7,"endColumn":15},{"ruleId":"461","severity":1,"message":"462","line":16,"column":1,"nodeType":"463","endLine":53,"endColumn":2},{"ruleId":"476","severity":1,"message":"477","line":35,"column":17,"nodeType":"478","messageId":"444","endLine":35,"endColumn":26},{"ruleId":"426","severity":1,"message":"427","line":3,"column":8,"nodeType":"428","messageId":"429","endLine":3,"endColumn":12},{"ruleId":"426","severity":1,"message":"430","line":6,"column":9,"nodeType":"428","messageId":"429","endLine":6,"endColumn":13},{"ruleId":"426","severity":1,"message":"479","line":63,"column":13,"nodeType":"428","messageId":"429","endLine":63,"endColumn":26},{"ruleId":"426","severity":1,"message":"480","line":65,"column":13,"nodeType":"428","messageId":"429","endLine":65,"endColumn":22},{"ruleId":"431","replacedBy":"481"},{"ruleId":"433","replacedBy":"482"},{"ruleId":"426","severity":1,"message":"483","line":12,"column":5,"nodeType":"428","messageId":"429","endLine":12,"endColumn":12},{"ruleId":"426","severity":1,"message":"484","line":14,"column":5,"nodeType":"428","messageId":"429","endLine":14,"endColumn":17},{"ruleId":"426","severity":1,"message":"485","line":15,"column":5,"nodeType":"428","messageId":"429","endLine":15,"endColumn":18},{"ruleId":"486","severity":1,"message":"487","line":69,"column":9,"nodeType":"488","endLine":69,"endColumn":19},{"ruleId":"486","severity":1,"message":"487","line":70,"column":9,"nodeType":"488","endLine":70,"endColumn":19},{"ruleId":"431","replacedBy":"489"},{"ruleId":"433","replacedBy":"490"},{"ruleId":"426","severity":1,"message":"491","line":9,"column":5,"nodeType":"428","messageId":"429","endLine":9,"endColumn":20},{"ruleId":"426","severity":1,"message":"460","line":10,"column":5,"nodeType":"428","messageId":"429","endLine":10,"endColumn":26},{"ruleId":"426","severity":1,"message":"492","line":12,"column":5,"nodeType":"428","messageId":"429","endLine":12,"endColumn":31},{"ruleId":"461","severity":1,"message":"462","line":41,"column":1,"nodeType":"463","endLine":193,"endColumn":2},{"ruleId":"493","severity":1,"message":"494","line":173,"column":46,"nodeType":"495","messageId":"496","endLine":173,"endColumn":48},{"ruleId":"441","severity":1,"message":"442","line":174,"column":29,"nodeType":"443","messageId":"444","endLine":174,"endColumn":31},{"ruleId":"476","severity":1,"message":"497","line":179,"column":17,"nodeType":"478","messageId":"444","endLine":179,"endColumn":25},{"ruleId":"426","severity":1,"message":"430","line":3,"column":9,"nodeType":"428","messageId":"429","endLine":3,"endColumn":13},{"ruleId":"426","severity":1,"message":"452","line":9,"column":8,"nodeType":"428","messageId":"429","endLine":9,"endColumn":13},{"ruleId":"426","severity":1,"message":"498","line":10,"column":9,"nodeType":"428","messageId":"429","endLine":10,"endColumn":20},{"ruleId":"426","severity":1,"message":"479","line":86,"column":17,"nodeType":"428","messageId":"429","endLine":86,"endColumn":30},{"ruleId":"431","replacedBy":"499"},{"ruleId":"433","replacedBy":"500"},{"ruleId":"426","severity":1,"message":"479","line":49,"column":17,"nodeType":"428","messageId":"429","endLine":49,"endColumn":30},{"ruleId":"426","severity":1,"message":"501","line":50,"column":17,"nodeType":"428","messageId":"429","endLine":50,"endColumn":31},{"ruleId":"431","replacedBy":"502"},{"ruleId":"433","replacedBy":"503"},{"ruleId":"431","replacedBy":"504"},{"ruleId":"433","replacedBy":"505"},{"ruleId":"426","severity":1,"message":"506","line":2,"column":5,"nodeType":"428","messageId":"429","endLine":2,"endColumn":20},{"ruleId":"426","severity":1,"message":"507","line":3,"column":5,"nodeType":"428","messageId":"429","endLine":3,"endColumn":23},{"ruleId":"426","severity":1,"message":"508","line":4,"column":5,"nodeType":"428","messageId":"429","endLine":4,"endColumn":16},{"ruleId":"426","severity":1,"message":"509","line":5,"column":5,"nodeType":"428","messageId":"429","endLine":5,"endColumn":17},{"ruleId":"426","severity":1,"message":"510","line":6,"column":5,"nodeType":"428","messageId":"429","endLine":6,"endColumn":19},{"ruleId":"426","severity":1,"message":"511","line":7,"column":5,"nodeType":"428","messageId":"429","endLine":7,"endColumn":22},{"ruleId":"426","severity":1,"message":"512","line":8,"column":5,"nodeType":"428","messageId":"429","endLine":8,"endColumn":28},{"ruleId":"426","severity":1,"message":"513","line":10,"column":5,"nodeType":"428","messageId":"429","endLine":10,"endColumn":20},{"ruleId":"426","severity":1,"message":"514","line":12,"column":5,"nodeType":"428","messageId":"429","endLine":12,"endColumn":25},{"ruleId":"426","severity":1,"message":"515","line":16,"column":5,"nodeType":"428","messageId":"429","endLine":16,"endColumn":19},{"ruleId":"426","severity":1,"message":"516","line":17,"column":5,"nodeType":"428","messageId":"429","endLine":17,"endColumn":25},{"ruleId":"461","severity":1,"message":"462","line":34,"column":1,"nodeType":"463","endLine":106,"endColumn":2},{"ruleId":"426","severity":1,"message":"517","line":10,"column":8,"nodeType":"428","messageId":"429","endLine":10,"endColumn":17},{"ruleId":"426","severity":1,"message":"452","line":8,"column":8,"nodeType":"428","messageId":"429","endLine":8,"endColumn":13},{"ruleId":"426","severity":1,"message":"518","line":9,"column":9,"nodeType":"428","messageId":"429","endLine":9,"endColumn":29},{"ruleId":"453","severity":1,"message":"519","line":139,"column":29,"nodeType":"447","endLine":139,"endColumn":66},{"ruleId":"426","severity":1,"message":"520","line":1,"column":9,"nodeType":"428","messageId":"429","endLine":1,"endColumn":21},{"ruleId":"426","severity":1,"message":"521","line":138,"column":11,"nodeType":"428","messageId":"429","endLine":138,"endColumn":15},{"ruleId":"426","severity":1,"message":"521","line":234,"column":11,"nodeType":"428","messageId":"429","endLine":234,"endColumn":15},{"ruleId":"426","severity":1,"message":"521","line":270,"column":11,"nodeType":"428","messageId":"429","endLine":270,"endColumn":15},{"ruleId":"426","severity":1,"message":"522","line":15,"column":5,"nodeType":"428","messageId":"429","endLine":15,"endColumn":18},{"ruleId":"426","severity":1,"message":"523","line":16,"column":5,"nodeType":"428","messageId":"429","endLine":16,"endColumn":22},{"ruleId":"493","severity":1,"message":"524","line":43,"column":61,"nodeType":"495","messageId":"525","endLine":43,"endColumn":63},{"ruleId":"431","replacedBy":"526"},{"ruleId":"433","replacedBy":"527"},{"ruleId":"461","severity":1,"message":"462","line":5,"column":1,"nodeType":"463","endLine":12,"endColumn":2},{"ruleId":"426","severity":1,"message":"448","line":3,"column":9,"nodeType":"428","messageId":"429","endLine":3,"endColumn":16},{"ruleId":"426","severity":1,"message":"430","line":8,"column":9,"nodeType":"428","messageId":"429","endLine":8,"endColumn":13},{"ruleId":"426","severity":1,"message":"451","line":8,"column":15,"nodeType":"428","messageId":"429","endLine":8,"endColumn":23},{"ruleId":"426","severity":1,"message":"498","line":11,"column":5,"nodeType":"428","messageId":"429","endLine":11,"endColumn":16},{"ruleId":"426","severity":1,"message":"528","line":13,"column":9,"nodeType":"428","messageId":"429","endLine":13,"endColumn":15},{"ruleId":"461","severity":1,"message":"462","line":24,"column":1,"nodeType":"463","endLine":76,"endColumn":2},{"ruleId":"476","severity":1,"message":"529","line":38,"column":17,"nodeType":"478","messageId":"444","endLine":38,"endColumn":26},{"ruleId":"426","severity":1,"message":"530","line":2,"column":8,"nodeType":"428","messageId":"429","endLine":2,"endColumn":18},{"ruleId":"531","severity":1,"message":"532","line":48,"column":17,"nodeType":"533","messageId":"534","endLine":48,"endColumn":32,"fix":"535"},{"ruleId":"461","severity":1,"message":"462","line":8,"column":1,"nodeType":"463","endLine":18,"endColumn":2},{"ruleId":"426","severity":1,"message":"475","line":11,"column":5,"nodeType":"428","messageId":"429","endLine":11,"endColumn":15},{"ruleId":"461","severity":1,"message":"462","line":23,"column":1,"nodeType":"463","endLine":97,"endColumn":2},{"ruleId":"493","severity":1,"message":"494","line":43,"column":39,"nodeType":"495","messageId":"496","endLine":43,"endColumn":41},{"ruleId":"493","severity":1,"message":"494","line":62,"column":47,"nodeType":"495","messageId":"496","endLine":62,"endColumn":49},{"ruleId":"441","severity":1,"message":"442","line":63,"column":29,"nodeType":"443","messageId":"444","endLine":63,"endColumn":31},{"ruleId":"536","severity":1,"message":"537","line":65,"column":17,"nodeType":"428","messageId":"538","endLine":65,"endColumn":22},{"ruleId":"493","severity":1,"message":"494","line":66,"column":40,"nodeType":"495","messageId":"496","endLine":66,"endColumn":42},{"ruleId":"536","severity":1,"message":"537","line":79,"column":17,"nodeType":"428","messageId":"538","endLine":79,"endColumn":22},{"ruleId":"493","severity":1,"message":"494","line":80,"column":40,"nodeType":"495","messageId":"496","endLine":80,"endColumn":42},{"ruleId":"441","severity":1,"message":"539","line":81,"column":29,"nodeType":"443","messageId":"444","endLine":81,"endColumn":31},{"ruleId":"426","severity":1,"message":"436","line":2,"column":8,"nodeType":"428","messageId":"429","endLine":2,"endColumn":16},{"ruleId":"426","severity":1,"message":"451","line":7,"column":5,"nodeType":"428","messageId":"429","endLine":7,"endColumn":13},{"ruleId":"431","replacedBy":"540"},{"ruleId":"433","replacedBy":"541"},{"ruleId":"426","severity":1,"message":"430","line":5,"column":9,"nodeType":"428","messageId":"429","endLine":5,"endColumn":13},{"ruleId":"426","severity":1,"message":"542","line":4,"column":5,"nodeType":"428","messageId":"429","endLine":4,"endColumn":22},{"ruleId":"426","severity":1,"message":"543","line":5,"column":5,"nodeType":"428","messageId":"429","endLine":5,"endColumn":19},{"ruleId":"426","severity":1,"message":"544","line":6,"column":5,"nodeType":"428","messageId":"429","endLine":6,"endColumn":22},{"ruleId":"426","severity":1,"message":"545","line":6,"column":9,"nodeType":"428","messageId":"429","endLine":6,"endColumn":17},{"ruleId":"426","severity":1,"message":"435","line":1,"column":27,"nodeType":"428","messageId":"429","endLine":1,"endColumn":36},{"ruleId":"426","severity":1,"message":"436","line":2,"column":8,"nodeType":"428","messageId":"429","endLine":2,"endColumn":16},{"ruleId":"426","severity":1,"message":"437","line":5,"column":8,"nodeType":"428","messageId":"429","endLine":5,"endColumn":15},{"ruleId":"426","severity":1,"message":"430","line":6,"column":9,"nodeType":"428","messageId":"429","endLine":6,"endColumn":13},{"ruleId":"426","severity":1,"message":"438","line":6,"column":25,"nodeType":"428","messageId":"429","endLine":6,"endColumn":34},{"ruleId":"426","severity":1,"message":"439","line":9,"column":5,"nodeType":"428","messageId":"429","endLine":9,"endColumn":20},{"ruleId":"426","severity":1,"message":"440","line":10,"column":5,"nodeType":"428","messageId":"429","endLine":10,"endColumn":19},{"ruleId":"426","severity":1,"message":"464","line":6,"column":9,"nodeType":"428","messageId":"429","endLine":6,"endColumn":15},{"ruleId":"426","severity":1,"message":"430","line":6,"column":17,"nodeType":"428","messageId":"429","endLine":6,"endColumn":21},{"ruleId":"426","severity":1,"message":"465","line":6,"column":33,"nodeType":"428","messageId":"429","endLine":6,"endColumn":38},{"ruleId":"426","severity":1,"message":"466","line":41,"column":13,"nodeType":"428","messageId":"429","endLine":41,"endColumn":21},{"ruleId":"426","severity":1,"message":"546","line":17,"column":8,"nodeType":"428","messageId":"429","endLine":17,"endColumn":12},{"ruleId":"431","replacedBy":"547"},{"ruleId":"433","replacedBy":"548"},{"ruleId":"426","severity":1,"message":"430","line":8,"column":9,"nodeType":"428","messageId":"429","endLine":8,"endColumn":13},{"ruleId":"426","severity":1,"message":"520","line":1,"column":9,"nodeType":"428","messageId":"429","endLine":1,"endColumn":21},{"ruleId":"426","severity":1,"message":"452","line":5,"column":8,"nodeType":"428","messageId":"429","endLine":5,"endColumn":13},{"ruleId":"426","severity":1,"message":"549","line":10,"column":9,"nodeType":"428","messageId":"429","endLine":10,"endColumn":21},{"ruleId":"426","severity":1,"message":"550","line":7,"column":9,"nodeType":"428","messageId":"429","endLine":7,"endColumn":24},{"ruleId":"426","severity":1,"message":"551","line":8,"column":9,"nodeType":"428","messageId":"429","endLine":8,"endColumn":18},{"ruleId":"426","severity":1,"message":"552","line":9,"column":9,"nodeType":"428","messageId":"429","endLine":9,"endColumn":23},{"ruleId":"426","severity":1,"message":"553","line":10,"column":9,"nodeType":"428","messageId":"429","endLine":10,"endColumn":18},{"ruleId":"426","severity":1,"message":"549","line":10,"column":20,"nodeType":"428","messageId":"429","endLine":10,"endColumn":32},{"ruleId":"426","severity":1,"message":"483","line":12,"column":5,"nodeType":"428","messageId":"429","endLine":12,"endColumn":12},{"ruleId":"426","severity":1,"message":"554","line":13,"column":5,"nodeType":"428","messageId":"429","endLine":13,"endColumn":16},{"ruleId":"426","severity":1,"message":"484","line":14,"column":5,"nodeType":"428","messageId":"429","endLine":14,"endColumn":17},{"ruleId":"426","severity":1,"message":"485","line":15,"column":5,"nodeType":"428","messageId":"429","endLine":15,"endColumn":18},{"ruleId":"426","severity":1,"message":"520","line":1,"column":9,"nodeType":"428","messageId":"429","endLine":1,"endColumn":21},{"ruleId":"461","severity":1,"message":"462","line":14,"column":1,"nodeType":"463","endLine":48,"endColumn":2},{"ruleId":"493","severity":1,"message":"524","line":45,"column":61,"nodeType":"495","messageId":"525","endLine":45,"endColumn":63},"no-unused-vars","'http' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["555"],"no-negated-in-lhs",["556"],"'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'product' is defined but never used.","'useParams' is defined but never used.","'PRODUCT_LOADING' is defined but never used.","'PRODUCT_LOADED' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'element' is defined but never used.",["555"],["556"],"'Redirect' is defined but never used.","'store' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["555"],["556"],"'SELECT_ADDRESS' is defined but never used.",["555"],["556"],"'PRODUCT_DELETION_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Switch' is defined but never used.","'Route' is defined but never used.","'totalAmt' is assigned a value but never used.",["555"],["556"],["555"],["556"],["555"],["556"],["555"],["556"],"'LOGIN_FAIL' is defined but never used.","no-dupe-keys","Duplicate key 'isUpdated'.","ObjectExpression","'cod_available' is assigned a value but never used.","'is_active' is assigned a value but never used.",["555"],["556"],"'faTrash' is defined but never used.","'faPlusCircle' is defined but never used.","'faMinusCircle' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["555"],["556"],"'PRODUCT_DELETED' is defined but never used.","'PRODUCT_IMAGES_UPLOAD_FAIL' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Duplicate key 'comments'.","'UPDATE_FAIL' is defined but never used.",["555"],["556"],"'transaction_id' is assigned a value but never used.",["555"],["556"],["555"],["556"],"'CART_ITEM_ADDED' is defined but never used.","'CART_ITEM_ADD_FAIL' is defined but never used.","'CART_LOADED' is defined but never used.","'CART_LOADING' is defined but never used.","'CART_LOAD_FAIL' is defined but never used.","'CART_ITEM_DELETED' is defined but never used.","'CART_ITEM_DELETION_FAIL' is defined but never used.","'ADDRESS_LOADING' is defined but never used.","'ADDRESS_DELETE_ERROR' is defined but never used.","'ADDRESS_ADDING' is defined but never used.","'ADDRESS_ADDING_ERROR' is defined but never used.","'PropTypes' is defined but never used.","'PRODUCT_LOADING_FAIL' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'returnErrors' is defined but never used.","'body' is assigned a value but never used.","'FETCHING_DATA' is defined but never used.","'FETCHING_COMPLETE' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["555"],["556"],"'object' is defined but never used.","Duplicate key 'is_vendor'.","'httpCommon' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['message'] found.","Property","unnecessarilyComputedProperty",{"range":"557","text":"558"},"no-redeclare","'total' is already defined.","redeclared","Expected '!==' and instead saw '!='.",["555"],["556"],"'CardNumberElement' is defined but never used.","'CardCvcElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'loadUser' is defined but never used.","'cart' is defined but never used.",["555"],["556"],"'getCartItems' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faSpinner' is defined but never used.","'delete_Product' is defined but never used.","'addToCart' is defined but never used.","'faRupeeSign' is defined but never used.","no-global-assign","no-unsafe-negation",[1296,1307],"'message'"]