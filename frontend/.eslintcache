[{"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerRegister.js":"1","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Product.js":"2","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\ProductImages.js":"3","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\address.js":"4","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\messages.js":"5","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\order.js":"6","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\productList.js":"7","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\Cart.js":"8","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\index.js":"9","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Alert.js":"10","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\store.js":"11","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\vendor.js":"12","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorRegister.js":"13","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\productCard.js":"14","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\product.js":"15","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\addProduct.js":"16","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorUpdate.js":"17","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorProfile.js":"18","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerUpdate.js":"19","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\order.js":"20","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\CartCard.js":"21","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Header.js":"22","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\product.js":"23","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\auth.js":"24","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reportWebVitals.js":"25","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Home.js":"26","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\messages.js":"27","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\allProductImages.js":"28","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\auth.js":"29","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\comment.js":"30","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\commentList.js":"31","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\commentForm.js":"32","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\types.js":"33","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\errors.js":"34","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\index.js":"35","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\cart.js":"36","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\App.js":"37"},{"size":5724,"mtime":1611934379272,"results":"38","hashOfConfig":"39"},{"size":9543,"mtime":1614398901249,"results":"40","hashOfConfig":"39"},{"size":3862,"mtime":1611864227135,"results":"41","hashOfConfig":"39"},{"size":7022,"mtime":1611866128266,"results":"42","hashOfConfig":"39"},{"size":349,"mtime":1611864227148,"results":"43","hashOfConfig":"39"},{"size":1663,"mtime":1611864227148,"results":"44","hashOfConfig":"39"},{"size":2226,"mtime":1611864227163,"results":"45","hashOfConfig":"39"},{"size":3136,"mtime":1611866013054,"results":"46","hashOfConfig":"39"},{"size":527,"mtime":1611864227156,"results":"47","hashOfConfig":"39"},{"size":2386,"mtime":1611864227129,"results":"48","hashOfConfig":"39"},{"size":405,"mtime":1611864227167,"results":"49","hashOfConfig":"39"},{"size":1260,"mtime":1611937432575,"results":"50","hashOfConfig":"39"},{"size":8801,"mtime":1611934407261,"results":"51","hashOfConfig":"39"},{"size":7887,"mtime":1611936093664,"results":"52","hashOfConfig":"39"},{"size":4937,"mtime":1614370402513,"results":"53","hashOfConfig":"39"},{"size":4744,"mtime":1611935898466,"results":"54","hashOfConfig":"39"},{"size":8244,"mtime":1611936931026,"results":"55","hashOfConfig":"39"},{"size":4382,"mtime":1611937587880,"results":"56","hashOfConfig":"39"},{"size":4369,"mtime":1611864227132,"results":"57","hashOfConfig":"39"},{"size":1934,"mtime":1611864227162,"results":"58","hashOfConfig":"39"},{"size":5557,"mtime":1611980524867,"results":"59","hashOfConfig":"39"},{"size":6507,"mtime":1611980292736,"results":"60","hashOfConfig":"39"},{"size":8493,"mtime":1614369736732,"results":"61","hashOfConfig":"39"},{"size":4711,"mtime":1611864271599,"results":"62","hashOfConfig":"39"},{"size":467,"mtime":1611864227165,"results":"63","hashOfConfig":"39"},{"size":3937,"mtime":1611864273708,"results":"64","hashOfConfig":"39"},{"size":297,"mtime":1611864227161,"results":"65","hashOfConfig":"39"},{"size":2624,"mtime":1611864272366,"results":"66","hashOfConfig":"39"},{"size":2136,"mtime":1611864274980,"results":"67","hashOfConfig":"39"},{"size":1034,"mtime":1614370563056,"results":"68","hashOfConfig":"39"},{"size":1053,"mtime":1614369810599,"results":"69","hashOfConfig":"39"},{"size":2641,"mtime":1614368576854,"results":"70","hashOfConfig":"39"},{"size":3250,"mtime":1614369523554,"results":"71","hashOfConfig":"39"},{"size":406,"mtime":1611864227158,"results":"72","hashOfConfig":"39"},{"size":450,"mtime":1611864227160,"results":"73","hashOfConfig":"39"},{"size":2838,"mtime":1611864227157,"results":"74","hashOfConfig":"39"},{"size":5942,"mtime":1611864227127,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"1ftc8x9",{"filePath":"80","messages":"81","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"103"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"103"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"103"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"162","usedDeprecatedRules":"91"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerRegister.js",["173","174"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport http from '../http-common';\r\nimport {connect} from 'react-redux';\r\nimport {registerCustomer} from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport class CustomerRegister extends Component {\r\n    state = {\r\n        username: null,\r\n        email: null,\r\n        first_name: null,\r\n        last_name: null,\r\n        phone: null,\r\n        is_vendor: false,\r\n        password: null,\r\n        password2: null,\r\n    };\r\n\r\n    static propTypes = {\r\n        registerCustomer: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n    // this.state.first_name, this.state.last_name,this.state.password,this.state.email, this.state.is_vendor, this.state.password2, this.state.username, this.state.phone\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.registerCustomer(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.name);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const {\r\n            username,\r\n            password,\r\n            password2,\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n            is_vendor,\r\n            email,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Register Customer</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>firstname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"first_name\"\r\n                                onChange={this.onChange}\r\n                                value={first_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>lastname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"last_name\"\r\n                                onChange={this.onChange}\r\n                                value={last_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                onChange={this.onChange}\r\n                                value={email}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password2</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password2\"\r\n                                onChange={this.onChange}\r\n                                value={password2}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                onChange={this.onChange}\r\n                                value={phone}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            hidden\r\n                            name=\"is_vendor\"\r\n                            value={is_vendor}\r\n                        ></input>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {registerCustomer})(CustomerRegister);\r\n",["175","176"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Product.js",["177","178","179","180","181","182","183","184","185","186","187"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\ProductImages.js",["188","189"],"import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {element} from 'prop-types';\r\nimport '../style/ProductImages.css';\r\nimport {addImages} from '../actions/product';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass ProductImages extends Component {\r\n    fileObj = [];\r\n    fileArray = [];\r\n\r\n    static propTypes = {\r\n        areProductImagesUploaded: PropTypes.bool,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            images: [null],\r\n            reload: false,\r\n            pid: this.props.match.params.id,\r\n        };\r\n        // let id = this.props.match.params.id;\r\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this);\r\n        this.uploadFiles = this.uploadFiles.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n    }\r\n\r\n    uploadMultipleFiles(e) {\r\n        // console.log(e.target)\r\n        this.fileObj.push(e.target.files[0]);\r\n        let index = this.fileObj.length - 1;\r\n        // console.log(this.fileObj[index])\r\n        this.fileArray.push({\r\n            url: URL.createObjectURL(this.fileObj[index]),\r\n            id: index,\r\n        });\r\n        this.setState({images: this.fileObj});\r\n        // console.log(this.fileObj)\r\n    }\r\n\r\n    uploadFiles(e) {\r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n        this.props.addImages(this.state);\r\n    }\r\n\r\n    removeImage(e) {\r\n        // e.preventDefault()\r\n        this.fileObj.splice(e.target.id, 1);\r\n        this.fileArray.splice(e.target.id, 1);\r\n        for (let i = 0; i < this.fileArray.length; i++) {\r\n            this.fileArray[i].id = i;\r\n        }\r\n        this.setState({images: this.fileObj});\r\n        console.log(this.fileObj);\r\n        this.setState({reload: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.reload) {\r\n            this.setState({reload: false});\r\n            return <div></div>;\r\n        }\r\n        if (this.props.areProductImagesUploaded) {\r\n            return <Redirect to={`/Product/${this.props.match.params.id}`} />;\r\n        }\r\n        return (\r\n            <form>\r\n                <h1>\r\n                    <center>Upload Images</center>\r\n                </h1>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"form-group multi-preview\">\r\n                    {(this.fileArray || []).map((element) => (\r\n                        <img\r\n                            src={element.url}\r\n                            className=\"image\"\r\n                            id={element.id}\r\n                            style={{\r\n                                height: '10rem',\r\n                                margin: '20px 20px 20px',\r\n                            }}\r\n                            onClick={this.removeImage}\r\n                            alt=\"...\"\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"file\"\r\n                        className=\"form-control\"\r\n                        onChange={this.uploadMultipleFiles}\r\n                        multiple\r\n                    />\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger btn-block\"\r\n                    onClick={this.uploadFiles}\r\n                >\r\n                    Upload\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    areProductImagesUploaded: state.product.areProductImagesUploaded,\r\n});\r\nexport default connect(mapStateToProps, {addImages})(ProductImages);\r\n",["190","191"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\address.js",["192","193","194","195","196"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getAddress, deleteAddress, addAddress} from '../actions/order';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport store from '../store';\r\n\r\nclass addProduct extends Component {\r\n    state = {\r\n        address_title: '',\r\n        address: '',\r\n        pincode: '',\r\n    };\r\n    static propTypes = {\r\n        addressLoaded: PropTypes.bool,\r\n        addressAdded: PropTypes.bool,\r\n        addressElementDelete: PropTypes.bool,\r\n        addressList: PropTypes.object,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getAddress(0);\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addAddress(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onAddressDelete = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.id);\r\n        this.props.deleteAddress(e.target.id);\r\n        // console.log(e.target.id)\r\n    };\r\n    handler() {\r\n        this.props.getAddress(0);\r\n    }\r\n    render() {\r\n        const {address, address_title, pincode} = this.state;\r\n        if (this.props.addressAdded) return <div>{this.handler()}</div>;\r\n        if (this.props.addressElementDelete) {\r\n            return <div>{this.handler()}</div>;\r\n        }\r\n        if (!this.props.addressLoaded) return <div>{this.handler()}</div>;\r\n\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br />\r\n                {console.log(this.props.addressList.length)}\r\n                {this.props.addressList.length === 0 ? (\r\n                    <div></div>\r\n                ) : (\r\n                    <center>\r\n                        <h2>Select Address</h2>\r\n                    </center>\r\n                )}\r\n                <br></br>\r\n                <br />\r\n                <center>\r\n                    <div className=\"card-group\">\r\n                        {this.props.addressList.map((item) => {\r\n                            return (\r\n                                <div\r\n                                    className=\"card\"\r\n                                    style={{\r\n                                        maxWidth: '15rem',\r\n                                        margin: '10px 10px 10px',\r\n                                    }}\r\n                                >\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">\r\n                                            {item.address_title}\r\n                                        </h5>\r\n                                        <p className=\"card-text\">\r\n                                            {item.address}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            {item.pincode}\r\n                                        </p>\r\n                                        <a\r\n                                            id={item.id}\r\n                                            className=\"btn btn-primary\"\r\n                                        >\r\n                                            Select\r\n                                        </a>\r\n                                        <a\r\n                                            onClick={this.onAddressDelete}\r\n                                            id={item.id}\r\n                                            className=\"btn btn-danger\"\r\n                                            style={{margin: '2px 2px 2px'}}\r\n                                        >\r\n                                            Delete\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </center>\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Add New Address</h2>\r\n                        <br />\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <div className=\"form-group\">\r\n                                <label>Address Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address_title\"\r\n                                    onChange={this.onChange}\r\n                                    value={address_title}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    onChange={this.onChange}\r\n                                    value={address}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>pincode</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"pincode\"\r\n                                    onChange={this.onChange}\r\n                                    value={pincode}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    addressAdded: state.order.addressAdded,\r\n    addressLoaded: state.order.addressLoaded,\r\n    addressElementDelete: state.order.addressElementDelete,\r\n    addressList: state.order.addressList,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAddress,\r\n    deleteAddress,\r\n    addAddress,\r\n})(addProduct);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\messages.js",[],["197","198"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\order.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\productList.js",["199","200"],"import {\r\n    PRODUCT_LIST_LOADED,\r\n    PRODUCT_LIST_LOADING,\r\n    PRODUCT_LIST_LOADING_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    PRODUCT_DELETED,\r\n    PRODUCT_DELETION_FAIL,\r\n    PRODUCT_LIST_UPDATING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isProductListLoading: false,\r\n    isProductListLoaded: false,\r\n    isProductListUpdated: false,\r\n    isProductListUpdating: false,\r\n    productList: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_LOADING:\r\n            return {\r\n                ...state,\r\n                isProductListLoading: true,\r\n                isProductListUpdated: false,\r\n                isProductListUpdating: false,\r\n            };\r\n        case PRODUCT_LIST_LOADED:\r\n            return {\r\n                ...state,\r\n                isProductListLoaded: true,\r\n                isProductListLoading: false,\r\n                isProductListUpdated: false,\r\n                isProductListUpdating: false,\r\n                productList: action.payload,\r\n            };\r\n        case PRODUCT_LIST_LOADING_FAIL:\r\n            return {\r\n                ...state,\r\n                productList: null,\r\n                isProductListLoaded: false,\r\n                isProductListLoading: false,\r\n            };\r\n        case PRODUCT_LIST_UPDATING:\r\n            return {\r\n                ...state,\r\n                isProductListUpdating: true,\r\n                isProductListLoaded: false,\r\n            };\r\n        case PRODUCT_DELETED:\r\n            return {\r\n                ...state,\r\n                productList: null,\r\n                isProductListLoaded: false,\r\n                isProductListLoading: false,\r\n                isProductListUpdated: true,\r\n                isProductListUpdating: false,\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isProductListLoading: false,\r\n                isProductListLoaded: false,\r\n                isProductListUpdated: false,\r\n                isProductListUpdating: false,\r\n                productList: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\Cart.js",["201","202","203"],"import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {Switch, Link, Redirect, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../style/Cart.css';\r\nimport CartCard from './CartCard';\r\nimport {getCartItems} from '../../actions/cart';\r\nimport {loadUser} from '../../actions/auth';\r\n\r\nclass Cart extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n        cart: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getCartItems();\r\n    }\r\n\r\n    calculateTotalAmount() {}\r\n\r\n    handler() {\r\n        this.props.getCartItems();\r\n    }\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            console.log(this.props.auth);\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.auth.user.is_vendor) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.cart.isCartLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        }\r\n        if (this.props.cart.cartUpdated) {\r\n            return <div>{this.props.getCartItems()}</div>;\r\n        }\r\n        let totalAmt = 0;\r\n        const cart = this.props.cart.cartItems;\r\n        const items =\r\n            cart && cart.length ? (\r\n                cart.map((element) => {\r\n                    totalAmt += element.product.amount * element.quantity;\r\n                    return (\r\n                        <div>\r\n                            <CartCard element={element} />\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : (\r\n                /**/\r\n                <div>No Items In Cart</div>\r\n            );\r\n        const len = cart && cart.length ? cart.length : 0;\r\n        return (\r\n            <div>\r\n                <h5 class=\"mb-4\">\r\n                    Cart (<span>{len}</span> items)\r\n                </h5>\r\n                {items}\r\n\r\n                <h3>Total Amount {this.props.cart.totalAmt}</h3>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Link to={`/Address`}>\r\n                    <button\r\n                        className=\"btn btn-success\"\r\n                        style={{width: '70rem'}}\r\n                    >\r\n                        Select Address\r\n                    </button>\r\n                </Link>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state) => ({\r\n    cart: state.cart,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getCartItems, loadUser})(Cart);\r\n",["204","205"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\index.js",[],["206","207"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Alert.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\store.js",[],["208","209"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\vendor.js",["210","211"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorRegister.js",["212","213","214","215"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport http from '../http-common';\r\nimport {connect} from 'react-redux';\r\nimport {registerVendor} from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport class VendorRegister extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        is_vendor: true,\r\n        password: '',\r\n        password2: '',\r\n        shop_name: '',\r\n        address: '',\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: '',\r\n        cod_available: true,\r\n        transaction_id: '',\r\n        is_active: false,\r\n    };\r\n\r\n    static propTypes = {\r\n        registerVendor: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool,\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.registerVendor(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.name);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        const {\r\n            username,\r\n            password,\r\n            password2,\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n            is_vendor,\r\n            email,\r\n            shop_name,\r\n            address,\r\n            location_long,\r\n            location_lat,\r\n            pincode,\r\n            cod_available,\r\n            transaction_id,\r\n            is_active,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Register Vendor</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>firstname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"first_name\"\r\n                                onChange={this.onChange}\r\n                                value={first_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>lastname</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"last_name\"\r\n                                onChange={this.onChange}\r\n                                value={last_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                onChange={this.onChange}\r\n                                value={email}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password2</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password2\"\r\n                                onChange={this.onChange}\r\n                                value={password2}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                onChange={this.onChange}\r\n                                value={phone}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Shop name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"shop_name\"\r\n                                onChange={this.onChange}\r\n                                value={shop_name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"address\"\r\n                                onChange={this.onChange}\r\n                                value={address}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Longitude</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"location_long\"\r\n                                onChange={this.onChange}\r\n                                value={location_long}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Lattitude</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"location_lat\"\r\n                                onChange={this.onChange}\r\n                                value={location_lat}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pincode</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"pincode\"\r\n                                onChange={this.onChange}\r\n                                value={pincode}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Transaction id</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"transaction_id\"\r\n                                onChange={this.onChange}\r\n                                value={transaction_id}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            hidden\r\n                            name=\"is_vendor\"\r\n                            value={is_vendor}\r\n                        ></input>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {registerVendor})(VendorRegister);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\productCard.js",["216","217"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../style/productCard.css';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {delete_Product} from '../actions/product';\r\nimport {addToCart, getCartItems} from '../actions/cart';\r\n\r\nclass ProductCard extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes,\r\n        isProductLoaded: PropTypes.bool,\r\n        isProductDeleted: PropTypes.bool,\r\n        cartUpdated: PropTypes.bool,\r\n        cartItems: PropTypes.object.isRequired,\r\n        isCartLoading: PropTypes.bool,\r\n        auth: PropTypes.object,\r\n    };\r\n    state = {\r\n        redirect: false,\r\n        Editredirect: false,\r\n        pid: 0,\r\n        quantity: 1,\r\n        flag: true,\r\n        isInCart: false,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        if (!this.props.auth.is_vendor) this.props.getCartItems();\r\n        /*this.props.cartItems.forEach((e) => {\r\n      if (e.product.id == this.props.element.id) {\r\n        this.setState({ isInCart: true });\r\n        this.setState({ quantity: e.quantity });\r\n      }\r\n    });*/\r\n    }\r\n\r\n    async UpdateState() {\r\n        await this.props.cartItems.forEach((e) => {\r\n            if (e.product.id === this.props.element.id) {\r\n                this.setState({isInCart: true});\r\n                this.setState({quantity: e.quantity});\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.isCartLoading && !this.props.auth.is_vendor) {\r\n            if (this.state.flag) {\r\n                //console.log(this.props.vendor);\r\n                this.setState({flag: false});\r\n                this.UpdateState();\r\n            }\r\n        }\r\n    }\r\n\r\n    addToCart = (e) => {\r\n        e.preventDefault();\r\n        this.state.pid = this.props.element.id;\r\n        this.state.quantity = 1;\r\n        this.props.addToCart(this.state);\r\n    };\r\n    onClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState({redirect: true}, () => {\r\n            this.renderRedirect();\r\n        });\r\n    };\r\n    onEditClick = (e) => {\r\n        e.preventDefault();\r\n        console.log('Edit');\r\n        this.setState({Editredirect: true}, () => {\r\n            this.renderRedirect();\r\n        });\r\n    };\r\n    onDeleteClick = (e) => {\r\n        // e.preventDefault();\r\n        // store.dispatch({type:PRODUCT_LIST_UPDATING})\r\n        this.props.delete_Product(this.props.element.id);\r\n    };\r\n    onUploadImagesClick = (e) => {\r\n        // e.preventDefault();\r\n        // store.dispatch({type:PRODUCT_LIST_UPDATING})\r\n        return (\r\n            <Redirect to={`/Product/UploadImages/${this.props.element.id}`} />\r\n        );\r\n    };\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            console.log('renderRedirect');\r\n            return <Redirect to={`/Product/${this.props.element.id}`} />;\r\n        }\r\n        if (this.state.Editredirect)\r\n            return <Redirect to={`/Product/Edit/${this.props.element.id}`} />;\r\n        if (this.props.isProductDeleted) this.props.handler();\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <div\r\n                    className=\"product\"\r\n                    style={{\r\n                        minHeight: '30rem',\r\n                        maxHeight: '35rem',\r\n                        maxWidth: '25rem',\r\n                        minWidth: '15rem',\r\n                    }}\r\n                >\r\n                    <div className=\"product__info\">\r\n                        <p>{this.props.element.title}</p>\r\n                        <p className=\"product__price\">\r\n                            <small>$</small>\r\n                            <strong>{this.props.element.amount}</strong>\r\n                        </p>\r\n                    </div>\r\n                    <img\r\n                        src={`http://127.0.0.1:8000${this.props.element.image[0]}`}\r\n                        alt=\"\"\r\n                    />\r\n                    {this.props.canEdit ? (\r\n                        <div>\r\n                            <Link\r\n                                to={`/Product/Images/${this.props.element.id}`}\r\n                            >\r\n                                <button> Images</button>\r\n                            </Link>\r\n                            <Link\r\n                                to={`/Product/UploadImages/${this.props.element.id}`}\r\n                            >\r\n                                <button> Add Images</button>\r\n                            </Link>\r\n                            <button onClick={this.onEditClick}>Edit</button>{' '}\r\n                            <button onClick={this.onDeleteClick}>Delete</button>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            {this.props.isCartLoading ? (\r\n                                <FontAwesomeIcon icon={faSpinner} />\r\n                            ) : (\r\n                                <div>\r\n                                    <button onClick={this.onClick}>Show</button>\r\n                                    {this.state.isInCart ? (\r\n                                        <span>Added To Cart</span>\r\n                                    ) : (\r\n                                        <button onClick={this.addToCart}>\r\n                                            Add To Cart\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n        // return (\r\n        //     <div style={{margin:\"20px 10px 10px\"}}>\r\n        //     {this.renderRedirect()}\r\n        //         <div className=\"card\" style={{maxWidth: \"20rem\"}}>\r\n        //             <img className=\"card-img\" src={`http://127.0.0.1:8000${this.props.element.image[0]}`} style={{maxHeight: \"20rem\", maxWidth: \"20rem\"}} alt=\"Vans\" ></img>\r\n        //             <div className=\"card-img-overlay d-flex justify-content-end\">\r\n        //             <a href=\"#\" className=\"card-link text-danger like\" style={{fontSize: \"1.5rem\"}}>\r\n        //                 <i className=\"fas fa-heart\"></i>\r\n        //             </a>\r\n        //             </div>\r\n        //             <div className=\"card-body\">\r\n        //                 <h4 className=\"card-title\">{this.props.element.title}</h4>\r\n        //                 {/* <h6 className=\"card-subtitle mb-2 text-muted\">Style: VA33TXRJ5</h6> */}\r\n        //                 <p className=\"card-text\">\r\n        //                     {this.props.element.details}\r\n        //                 </p>\r\n        //                 <div className=\"buy d-flex justify-content-between align-items-center\">\r\n        //                     <div className=\"price text-success\"><h5 className=\"mt-4\">${this.props.element.amount}</h5></div>\r\n        //                     <a href=\"#\" className=\"btn btn-danger mt-3\"><i className=\"fas fa-shopping-cart\"></i> Add to Cart</a>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        // </div>\r\n        // )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isProductLoaded: state.product.isProductLoaded,\r\n    isProductListUpdating: state.product.isProductDeleted,\r\n    cartUpdated: state.cart.cartUpdated,\r\n    cartItems: state.cart.cartItems,\r\n    isCartLoading: state.cart.isCartLoading,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    delete_Product,\r\n    addToCart,\r\n    getCartItems,\r\n})(ProductCard);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\product.js",["218","219","220","221","222","223"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\addProduct.js",["224"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {add_Product} from '../actions/product';\r\nimport store from '../store';\r\nimport {PRODUCT_LOADING_FAIL} from '../actions/types';\r\nclass addProduct extends Component {\r\n    state = {\r\n        title: '',\r\n        catagory: '',\r\n        amount: 0,\r\n        discount: 0,\r\n        details: '',\r\n        quantity: 0,\r\n    };\r\n    static propTypes = {\r\n        isProductAdded: PropTypes.bool,\r\n        add_Product: PropTypes.func.isRequired,\r\n        prop: PropTypes,\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.add_Product(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            title,\r\n            catagory,\r\n            amount,\r\n            discount,\r\n            details,\r\n            quantity,\r\n        } = this.state;\r\n        if (this.props.isProductAdded) {\r\n            store.dispatch({type: PRODUCT_LOADING_FAIL});\r\n            return <Redirect to=\"/Home/\" />;\r\n        }\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-5\">\r\n                    <h2 className=\"text-center\">Add Product</h2>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Product Title</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                onChange={this.onChange}\r\n                                value={title}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Catagory</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"catagory\"\r\n                                onChange={this.onChange}\r\n                                value={catagory}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Details</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"details\"\r\n                                onChange={this.onChange}\r\n                                value={details}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>amount</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"amount\"\r\n                                onChange={this.onChange}\r\n                                value={amount}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Discount</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"discount\"\r\n                                onChange={this.onChange}\r\n                                value={discount}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Quantity</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"quantity\"\r\n                                onChange={this.onChange}\r\n                                value={quantity}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isProductAdded: state.product.isProductAdded,\r\n});\r\n\r\nexport default connect(mapStateToProps, {add_Product})(addProduct);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorUpdate.js",["225","226","227"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {loadVendor, updateVendor} from '../actions/vendor';\r\nimport {Redirect} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport store from '../store';\r\nimport {UPDATE_FAIL} from '../actions/types';\r\n\r\nexport class VendorUpdate extends Component {\r\n    state = {\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        shop_name: '',\r\n        address: '',\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: '',\r\n        cod_available: true,\r\n        transaction_id: '',\r\n        isLoading: true,\r\n        flag: true,\r\n    };\r\n\r\n    static propTypes = {\r\n        vendor: PropTypes.object.isRequired,\r\n        auth: PropTypes.object.isRequired,\r\n        updateVendor: PropTypes.func.isRequired,\r\n        isFetching: PropTypes.bool,\r\n        isUpdated: PropTypes.bool,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.loadVendor();\r\n    }\r\n\r\n    UpdateState() {\r\n        this.setState(this.props.vendor);\r\n        //console.log(this.props.vendor);\r\n        this.setState(this.props.auth.user);\r\n        //console.log(this.state);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.flag) {\r\n            //console.log(this.props.vendor);\r\n            this.setState({flag: false});\r\n            this.UpdateState();\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.updateVendor(this.state);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.isUpdated) {\r\n            // store.dispatch({type: UPDATE_FAIL});\r\n            return <Redirect to=\"/profile/vendor\" />;\r\n        }\r\n        if (this.props.isFetching) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        } else {\r\n            const {\r\n                first_name,\r\n                last_name,\r\n                phone,\r\n                shop_name,\r\n                address,\r\n                location_long,\r\n                location_lat,\r\n                pincode,\r\n                cod_available,\r\n                transaction_id,\r\n            } = this.state;\r\n            return (\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Update Profile</h2>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>firstname</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"first_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={first_name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>lastname</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"last_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={last_name}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Phone</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"phone\"\r\n                                    onChange={this.onChange}\r\n                                    value={phone}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Shop name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"shop_name\"\r\n                                    onChange={this.onChange}\r\n                                    value={shop_name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    onChange={this.onChange}\r\n                                    value={address}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Location Longitude</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"location_long\"\r\n                                    onChange={this.onChange}\r\n                                    value={location_long}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Location Lattitude</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"location_lat\"\r\n                                    onChange={this.onChange}\r\n                                    value={location_lat}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Pincode</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"pincode\"\r\n                                    onChange={this.onChange}\r\n                                    value={pincode}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Transaction id</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"transaction_id\"\r\n                                    onChange={this.onChange}\r\n                                    value={transaction_id}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    vendor: state.vendor.vendor,\r\n    auth: state.auth,\r\n    isFetching: state.vendor.isFetching,\r\n    isUpdated: state.vendor.isUpdated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateVendor, loadVendor})(\r\n    VendorUpdate\r\n);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\VendorProfile.js",["228","229"],"import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\r\nimport {loadVendor} from '../actions/vendor';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {loadUser} from '../actions/auth';\r\n\r\nexport class VendorProfile extends Component {\r\n    state = {\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        shop_name: '',\r\n        address: '',\r\n        location_long: null,\r\n        location_lat: null,\r\n        pincode: '',\r\n        cod_available: true,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.loadVendor();\r\n        this.props.loadUser();\r\n    }\r\n\r\n    static propTypes = {\r\n        vendor: PropTypes.object.isRequired,\r\n        auth: PropTypes.object.isRequired,\r\n        isFetching: PropTypes.bool,\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.props.isFetching || this.props.auth.isLoading) {\r\n            return <FontAwesomeIcon icon={faSpinner} />;\r\n        } else {\r\n            const {first_name, last_name, phone} = this.props.auth.user;\r\n            const {\r\n                shop_name,\r\n                address,\r\n                location_long,\r\n                location_lat,\r\n                pincode,\r\n                cod_available,\r\n                transaction_id,\r\n            } = this.props.vendor;\r\n            return (\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-5\">\r\n                        <h2 className=\"text-center\">Profile</h2>\r\n                        <div className=\"form-group\">\r\n                            <label>First Name : </label>\r\n\r\n                            <label className=\"form-control\">\r\n                                {' '}\r\n                                {first_name}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Last Name : </label>\r\n                            <label className=\"form-control\"> {last_name}</label>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Phone : </label>\r\n                            <label className=\"form-control\"> {phone}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Shop name : </label>\r\n                            <label className=\"form-control\"> {shop_name}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Address : </label>\r\n                            <label className=\"form-control\"> {address}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Longitude : </label>\r\n                            <label className=\"form-control\">\r\n                                {' '}\r\n                                {location_long}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Location Lattitude : </label>\r\n                            <label className=\"form-control\">\r\n                                {' '}\r\n                                {location_lat}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pincode : </label>\r\n                            <label className=\"form-control\"> {pincode}</label>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark\">\r\n                            <Link to=\"/update/vendor\">Make Changes</Link>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    vendor: state.vendor.vendor,\r\n    auth: state.auth,\r\n    isFetching: state.vendor.isFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, {loadVendor, loadUser})(VendorProfile);\r\n",["230","231"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\CustomerUpdate.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\order.js",["232","233","234","235","236","237","238","239","240","241","242","243"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Cart\\CartCard.js",["244"],"import {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faTrash,\r\n    faRupeeSign,\r\n    faPlusCircle,\r\n    faMinusCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../style/Cart.css';\r\nimport {deleteCartItem, modifyItemQuantity} from '../../actions/cart';\r\n\r\nclass CartCard extends Component {\r\n    static propTypes = {\r\n        //product : PropTypes.object.isRequired,\r\n    };\r\n\r\n    state = {\r\n        quantity: 0,\r\n        flag: true,\r\n    };\r\n\r\n    UpdateState() {\r\n        this.setState(this.props.element);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.flag) {\r\n            //console.log(this.props.vendor);\r\n            this.setState({flag: false});\r\n            this.UpdateState();\r\n        }\r\n    }\r\n\r\n    async modify(q) {\r\n        if (q && q > 0) {\r\n            await this.setState({quantity: q});\r\n            this.props.modifyItemQuantity(this.props.element.id, q);\r\n        }\r\n    }\r\n\r\n    decrease = (e) => {\r\n        this.modify(parseInt(this.state.quantity) - 1);\r\n    };\r\n\r\n    increase = (e) => {\r\n        this.modify(parseInt(this.state.quantity) + 1);\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onBlur = (e) => {\r\n        this.modify(e.target.value);\r\n    };\r\n    itemDelete = (e) => {\r\n        console.log('Deleting');\r\n        this.props.deleteCartItem(this.props.element.id);\r\n    };\r\n    render() {\r\n        const {quantity} = this.state;\r\n        return (\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-3\">\r\n                    <div className=\"\">\r\n                        <img\r\n                            className=\"img-fluid w-100 h-90\"\r\n                            src={`http://127.0.0.1:8000${this.props.element.product.image[0]}`}\r\n                            alt={this.props.element.product.title}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <div>\r\n                                <h4 className=\"text-uppercase\">\r\n                                    {this.props.element.product.title}\r\n                                </h4>\r\n                                <span className=\"text-muted text-uppercase describe\">\r\n                                    {this.props.element.product.catagory}\r\n                                </span>\r\n                                <br />\r\n                                <span className=\"text-muted text-uppercase describe\">\r\n                                    {this.props.element.product.details}\r\n                                </span>\r\n                                <br />\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"input-group\">\r\n                                    <span\r\n                                        className=\"input-group-btn\"\r\n                                        onClick={this.decrease}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMinusCircle} />\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"quantity\"\r\n                                        className=\"number\"\r\n                                        onBlur={this.onBlur}\r\n                                        onChange={this.onChange}\r\n                                        value={quantity}\r\n                                    />\r\n                                    <span\r\n                                        className=\"input-group-btn\"\r\n                                        onClick={this.increase}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlusCircle} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div>\r\n                                <br />\r\n                                <button\r\n                                    className=\"btn btn-danger btn-lg rounded-0\"\r\n                                    onClick={this.itemDelete}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </button>\r\n                            </div>\r\n                            <p className=\"mb-0\">\r\n                                <span>\r\n                                    <strong id=\"summary\">\r\n                                        <FontAwesomeIcon icon={faRupeeSign} />\r\n                                        {this.props.element.product.amount}\r\n                                    </strong>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, {deleteCartItem, modifyItemQuantity})(\r\n    CartCard\r\n);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Header.js",["245","246","247","248"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {logout} from '../actions/auth';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faUser} from '@fortawesome/free-solid-svg-icons';\r\nimport store from '../store';\r\nimport {PRODUCT_LOADING_FAIL} from '../actions/types';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport class Header extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n        logout: PropTypes.func.isRequired,\r\n    };\r\n\r\n    render() {\r\n        const {isAuthenticated, user, isLoading} = this.props.auth;\r\n\r\n        const authLinks = (\r\n            <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/Home/\" className=\"nav-link\">\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <span className=\"navbar-text mr-3\">\r\n                    <strong>\r\n                        {user\r\n                            ? `Welcome ${\r\n                                  user['first_name']\r\n                                      ? user['first_name']\r\n                                      : user['email']\r\n                              }`\r\n                            : ''}\r\n                    </strong>\r\n                </span>\r\n\r\n                <li className=\"nav-item\">\r\n                    <button\r\n                        onClick={this.props.logout}\r\n                        className=\"nav-link btn btn-info btn-sm text-light\"\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </li>\r\n                <li class=\"dropdown\">\r\n                    <a\r\n                        className=\"nav-link dropdown-toggle\"\r\n                        id=\"navbarDropdown\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} />{' '}\r\n                        <b className=\"caret\"></b>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                        {this.props.auth.is_vendor ? (\r\n                            <div>\r\n                                <Link to=\"/update/vendor\" className=\"nav-link\">\r\n                                    Update Profile Vendor\r\n                                </Link>\r\n                                <Link to=\"/profile/vendor\" className=\"nav-link\">\r\n                                    Profile Vendor\r\n                                </Link>\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <Link\r\n                                    to=\"/update/customer\"\r\n                                    className=\"nav-link\"\r\n                                >\r\n                                    Update Profile Customer\r\n                                </Link>\r\n                                <Link\r\n                                    to=\"/profile/customer\"\r\n                                    className=\"nav-link\"\r\n                                >\r\n                                    Profile Customer\r\n                                </Link>\r\n                                <Link to=\"/cart\" className=\"nav-link\">\r\n                                    Cart\r\n                                </Link>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"dropdown-divider\"></div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        );\r\n\r\n        const guestLinks = (\r\n            <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/register/customer\" className=\"nav-link\">\r\n                        Register Customer\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/register/vendor\" className=\"nav-link\">\r\n                        Register Vendor\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n        if (!isLoading) {\r\n            return (\r\n                <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n                    <div className=\"container\">\r\n                        <button\r\n                            className=\"navbar-toggler\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo01\"\r\n                            aria-controls=\"navbarTogglerDemo01\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\"\r\n                        >\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                        </button>\r\n                        <div\r\n                            className=\"collapse navbar-collapse\"\r\n                            id=\"navbarTogglerDemo01\"\r\n                        >\r\n                            <a className=\"navbar-brand\" href=\"#\">\r\n                                SDP\r\n                            </a>\r\n                            {isAuthenticated ? (\r\n                                this.props.auth.is_vendor ? (\r\n                                    <Link\r\n                                        to=\"/addProduct/\"\r\n                                        className=\"nav-link\"\r\n                                    >\r\n                                        Add Product\r\n                                    </Link>\r\n                                ) : (\r\n                                    ''\r\n                                )\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </div>\r\n                        {isAuthenticated ? authLinks : guestLinks}\r\n                    </div>\r\n                </nav>\r\n            );\r\n        }\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\product.js",["249","250","251","252"],"import {returnErrors} from './messages';\r\nimport http from '../http-common';\r\n\r\nimport {\r\n    PRODUCT_LOADED,\r\n    PRODUCT_LOADING,\r\n    PRODUCT_LOADING_FAIL,\r\n    PRODUCT_ADDED,\r\n    PRODUCT_ADDING_FAIL,\r\n    PRODUCT_ADDING,\r\n    PRODUCT_EDITED,\r\n    PRODUCT_EDIT_FAIL,\r\n    PRODUCT_DELETED,\r\n    PRODUCT_DELETION_FAIL,\r\n    PRODUCT_IMAGES_UPLOAD_FAIL,\r\n    PRODUCT_IMAGES_UPLOADED,\r\n    PRODUCT_IMAGES_LOADED,\r\n    PRODUCT_IMAGES_LOADING,\r\n    PRODUCT_IMAGES_LOAD_FAIL,\r\n    PRODUCT_REVIEWS_LOADED,\r\n    PRODUCT_REVIEWS_LOADING,\r\n    PRODUCT_REVIEWS_LOAD_FAIL,\r\n    PRODUCT_REVIEWS_ADDED,\r\n    PRODUCT_REVIEWS_DELETED,\r\n} from './types';\r\n// import {getCommentsProduct} from '../Components/Product';\r\n\r\nexport const add_Product = (Product) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_ADDING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(Product);\r\n\r\n    console.log(body);\r\n\r\n    http.post('/ManageShops/products/', body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_ADDED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_ADDING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const edit_Product = (Product) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_ADDING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(Product);\r\n\r\n    console.log(body);\r\n\r\n    http.put(\r\n        `/ManageShops/products/${Product.id}/`,\r\n        body,\r\n        tokenConfig(getState)\r\n    )\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_EDITED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_EDIT_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getProduct = (id) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.get(`/ManageShops/product/${id}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_LOADING_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const delete_Product = (id) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(id);\r\n\r\n    console.log(body);\r\n    http.delete(`/ManageShops/products/${id}/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_DELETED,\r\n                payload: id,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_DELETION_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const addImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    const formData = new FormData();\r\n    obj.images.map((image) => formData.append('images', image));\r\n    formData.append('pid', obj.pid);\r\n\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Accept: 'application/json',\r\n            type: 'formData',\r\n            'Access-Control-Allow-Origin': '*',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    // console.log(formData)\r\n    http.post(`/ManageShops/productimage`, formData, config)\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_UPLOADED,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_UPLOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_IMAGES_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n\r\n    console.log(body);\r\n    http.get(`/ManageShops/getproductimage/${obj}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const deleteImages = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_IMAGES_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n\r\n    // console.log(formData)\r\n    http.get(`/ManageShops/productimage`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            // console.log(\"PP\")\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            dispatch({\r\n                type: PRODUCT_IMAGES_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getComment = (obj) => (dispatch, getState) => {\r\n    // Product List Loading\r\n    dispatch({type: PRODUCT_REVIEWS_LOADING});\r\n\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    // console.log(formData)\r\n    // console.log(obj);\r\n    http.get(`/ManageReviews/reviews/${obj}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_REVIEWS_LOADED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // dispatch(returnErrors(err.response.data, err.response.status));\r\n            // console.log(err)\r\n            console.log('err');\r\n            dispatch({\r\n                type: PRODUCT_REVIEWS_LOAD_FAIL,\r\n            });\r\n        });\r\n};\r\nexport const postComment = (obj) => (dispatch, getState) => {\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    http.post(`/ManageReviews/reviews/`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_REVIEWS_ADDED,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const deleteComment = (obj) => (dispatch, getState) => {\r\n    // Request Body\r\n    const body = JSON.stringify(obj);\r\n    http.delete(`/ManageReviews/deletereviews/${obj}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: PRODUCT_REVIEWS_DELETED,\r\n                payload: obj,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n    // Get token from state\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    // If token, add to headers config\r\n    if (token) {\r\n        config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    return config;\r\n};\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\auth.js",["253","254"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Home.js",["255"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport store from '../store';\r\nimport {getAllProductList} from '../actions/productList';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ProductCard from './productCard';\r\nimport '../style/home.css';\r\nimport {getCartItems} from '../actions/cart';\r\n\r\nexport class Home extends Component {\r\n    static propTypes = {\r\n        auth: PropTypes.object,\r\n        productList: PropTypes.object,\r\n        isProductListLoaded: PropTypes.bool,\r\n        isProductListUpdated: PropTypes.bool,\r\n        cartItems: PropTypes.object.isRequired,\r\n        cartUpdated: PropTypes.bool,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        store.dispatch(getAllProductList());\r\n    }\r\n    handler() {\r\n        store.dispatch(getAllProductList());\r\n    }\r\n    render() {\r\n        const productList = this.props.productList;\r\n        const {user} = this.props.auth;\r\n        if (!user) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (!user.is_vendor && this.props.cartUpdated) {\r\n            return <div>{this.props.getCartItems()}</div>;\r\n        }\r\n        if (this.props.isProductListLoaded && user != null) {\r\n            return (\r\n                <div>\r\n                    <div style={{marginTop: '20px'}}>\r\n                        <div className=\"row\">\r\n                            {productList\r\n                                ? productList.map((element) => {\r\n                                      // console.log(element)\r\n                                      // console.log(user.email)\r\n                                      if (\r\n                                          user.is_vendor &&\r\n                                          element.vendor_email === user.email\r\n                                      ) {\r\n                                          console.log(element.id);\r\n                                          return (\r\n                                              <div className=\"col-12 col-sm-4 col-md-6 col-lg-4\">\r\n                                                  <ProductCard\r\n                                                      element={element}\r\n                                                      canEdit={true}\r\n                                                      handler={this.handler}\r\n                                                  />\r\n                                              </div>\r\n                                          );\r\n                                      } else if (!user.is_vendor) {\r\n                                          return (\r\n                                              <div className=\"col-12 col-sm-4 col-md-6 col-lg-4\">\r\n                                                  <ProductCard\r\n                                                      element={element}\r\n                                                      canEdit={false}\r\n                                                  />\r\n                                              </div>\r\n                                          );\r\n                                      }\r\n                                  })\r\n                                : 'No products'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (this.props.isProductListUpdated) {\r\n            return <div>{this.handler()}</div>;\r\n        }\r\n        return <div />;\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    // console.log(state)\r\n    auth: state.auth,\r\n    productList: state.productList.productList,\r\n    isProductListLoaded: state.productList.isProductListLoaded,\r\n    isProductListUpdated: state.productList.isProductListUpdated,\r\n    cartItems: state.cart.cartItems,\r\n    cartUpdated: state.cart.cartUpdated,\r\n});\r\nexport default connect(mapStateToProps, {getCartItems})(Home);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\messages.js",["256"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\allProductImages.js",["257","258","259"],"import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {element} from 'prop-types';\r\nimport '../style/ProductImages.css';\r\nimport {deleteImages, getImages} from '../actions/product';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass allProductImages extends Component {\r\n    static propTypes = {\r\n        areImagesLoaded: PropTypes.bool,\r\n        productImages: PropTypes.object,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pid: this.props.match.params.id,\r\n        };\r\n        console.log(this.state.pid);\r\n        this.props.getImages(this.state.pid);\r\n    }\r\n\r\n    removeImage(e) {\r\n        e.preventDefault();\r\n    }\r\n    handler() {\r\n        // this.props.getImages(this.state.id)\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(this.props.areImagesLoaded);\r\n        console.log(this.props.productImages);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.reload) {\r\n            this.setState({reload: false});\r\n            return <div></div>;\r\n        }\r\n        console.log(this.props.areImagesloaded);\r\n        if (this.props.areImagesLoaded) {\r\n            return (\r\n                <form>\r\n                    <h1>\r\n                        <center>All Images</center>\r\n                    </h1>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <div className=\"form-group multi-preview\">\r\n                        {(this.props.productImages || []).map((element) => (\r\n                            <img\r\n                                src={`http://127.0.0.1:8000${element.image}`}\r\n                                className=\"image\"\r\n                                id={element.id}\r\n                                style={{\r\n                                    height: '10rem',\r\n                                    margin: '20px 20px 20px',\r\n                                }}\r\n                                onClick={this.removeImage}\r\n                                alt=\"...\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </form>\r\n            );\r\n        }\r\n        return <div>No Images</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    areImagesLoaded: state.product.areImagesLoaded,\r\n    productImages: state.product.productImages,\r\n});\r\nexport default connect(mapStateToProps, {deleteImages, getImages})(\r\n    allProductImages\r\n);\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\auth.js",["260","261","262","263"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\comment.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\commentList.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\Components\\Comment\\commentForm.js",["264","265"],"import React, {Component} from 'react';\r\nimport httpCommon from '../../http-common';\r\n\r\nexport default class CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            error: '',\r\n            message: '',\r\n        };\r\n\r\n        // bind context to methods\r\n        this.handleFieldChange = this.handleFieldChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Handle form input field changes & update the state\r\n     */\r\n    handleFieldChange = (event) => {\r\n        const {value, name} = event.target;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Form submit handler\r\n     */\r\n    onSubmit(e) {\r\n        // prevent default form submission\r\n        e.preventDefault();\r\n        if (!this.isFormValid()) {\r\n            this.setState({error: 'All fields are required.'});\r\n            return;\r\n        } else {\r\n            this.setState({error: ''});\r\n            console.log('submit');\r\n            this.props.submitHandler(this.state.message);\r\n            this.setState({\r\n                ['message']: '',\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Simple validation\r\n     */\r\n    isFormValid() {\r\n        return this.state.message !== '';\r\n    }\r\n\r\n    renderError() {\r\n        return this.state.error ? (\r\n            <div className=\"alert alert-danger\">{this.state.error}</div>\r\n        ) : null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form method=\"post\" onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            onChange={this.handleFieldChange}\r\n                            value={this.state.message}\r\n                            className=\"form-control\"\r\n                            placeholder=\"😎 Your Comment\"\r\n                            name=\"message\"\r\n                            rows=\"5\"\r\n                        />\r\n                    </div>\r\n\r\n                    {this.renderError()}\r\n\r\n                    <div className=\"form-group\">\r\n                        <button\r\n                            disabled={this.props.disabled}\r\n                            className=\"btn btn-primary\"\r\n                            // onClick={this.props.submitHandler}\r\n                        >\r\n                            Comment &#10148;\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\actions\\types.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\errors.js",["266"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\reducers\\cart.js",["267","268","269","270","271","272","273","274","275","276"],"C:\\Users\\ASUS\\Documents\\sdp\\frontend\\src\\App.js",["277","278"],{"ruleId":"279","severity":1,"message":"280","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":12},{"ruleId":"279","severity":1,"message":"283","line":6,"column":9,"nodeType":"281","messageId":"282","endLine":6,"endColumn":13},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"279","severity":1,"message":"288","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"289","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":16},{"ruleId":"279","severity":1,"message":"290","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":15},{"ruleId":"279","severity":1,"message":"283","line":6,"column":9,"nodeType":"281","messageId":"282","endLine":6,"endColumn":13},{"ruleId":"279","severity":1,"message":"291","line":6,"column":25,"nodeType":"281","messageId":"282","endLine":6,"endColumn":34},{"ruleId":"279","severity":1,"message":"292","line":9,"column":5,"nodeType":"281","messageId":"282","endLine":9,"endColumn":20},{"ruleId":"279","severity":1,"message":"293","line":10,"column":5,"nodeType":"281","messageId":"282","endLine":10,"endColumn":19},{"ruleId":"294","severity":1,"message":"295","line":88,"column":13,"nodeType":"296","messageId":"297","endLine":159,"endColumn":15},{"ruleId":"298","severity":1,"message":"299","line":108,"column":41,"nodeType":"300","messageId":"301","endLine":108,"endColumn":43},{"ruleId":"302","severity":1,"message":"303","line":111,"column":45,"nodeType":"304","endLine":118,"endColumn":47},{"ruleId":"302","severity":1,"message":"303","line":123,"column":41,"nodeType":"304","endLine":127,"endColumn":43},{"ruleId":"279","severity":1,"message":"305","line":3,"column":9,"nodeType":"281","messageId":"282","endLine":3,"endColumn":16},{"ruleId":"279","severity":1,"message":"283","line":8,"column":9,"nodeType":"281","messageId":"282","endLine":8,"endColumn":13},{"ruleId":"284","replacedBy":"306"},{"ruleId":"286","replacedBy":"307"},{"ruleId":"279","severity":1,"message":"283","line":3,"column":9,"nodeType":"281","messageId":"282","endLine":3,"endColumn":13},{"ruleId":"279","severity":1,"message":"308","line":3,"column":15,"nodeType":"281","messageId":"282","endLine":3,"endColumn":23},{"ruleId":"279","severity":1,"message":"309","line":7,"column":8,"nodeType":"281","messageId":"282","endLine":7,"endColumn":13},{"ruleId":"310","severity":1,"message":"311","line":86,"column":41,"nodeType":"304","endLine":89,"endColumn":42},{"ruleId":"310","severity":1,"message":"311","line":92,"column":41,"nodeType":"304","endLine":97,"endColumn":42},{"ruleId":"284","replacedBy":"312"},{"ruleId":"286","replacedBy":"313"},{"ruleId":"279","severity":1,"message":"314","line":7,"column":5,"nodeType":"281","messageId":"282","endLine":7,"endColumn":26},{"ruleId":"315","severity":1,"message":"316","line":19,"column":1,"nodeType":"317","endLine":72,"endColumn":2},{"ruleId":"279","severity":1,"message":"318","line":6,"column":9,"nodeType":"281","messageId":"282","endLine":6,"endColumn":15},{"ruleId":"279","severity":1,"message":"319","line":6,"column":33,"nodeType":"281","messageId":"282","endLine":6,"endColumn":38},{"ruleId":"279","severity":1,"message":"320","line":48,"column":21,"nodeType":"281","messageId":"282","endLine":48,"endColumn":29},{"ruleId":"284","replacedBy":"321"},{"ruleId":"286","replacedBy":"322"},{"ruleId":"284","replacedBy":"323"},{"ruleId":"286","replacedBy":"324"},{"ruleId":"284","replacedBy":"325"},{"ruleId":"286","replacedBy":"326"},{"ruleId":"279","severity":1,"message":"327","line":7,"column":5,"nodeType":"281","messageId":"282","endLine":7,"endColumn":15},{"ruleId":"315","severity":1,"message":"316","line":16,"column":1,"nodeType":"317","endLine":52,"endColumn":2},{"ruleId":"279","severity":1,"message":"280","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":12},{"ruleId":"279","severity":1,"message":"283","line":6,"column":9,"nodeType":"281","messageId":"282","endLine":6,"endColumn":13},{"ruleId":"279","severity":1,"message":"328","line":63,"column":13,"nodeType":"281","messageId":"282","endLine":63,"endColumn":26},{"ruleId":"279","severity":1,"message":"329","line":65,"column":13,"nodeType":"281","messageId":"282","endLine":65,"endColumn":22},{"ruleId":"330","severity":1,"message":"331","line":62,"column":9,"nodeType":"332","endLine":62,"endColumn":19},{"ruleId":"330","severity":1,"message":"331","line":63,"column":9,"nodeType":"332","endLine":63,"endColumn":19},{"ruleId":"279","severity":1,"message":"333","line":9,"column":5,"nodeType":"281","messageId":"282","endLine":9,"endColumn":20},{"ruleId":"279","severity":1,"message":"314","line":10,"column":5,"nodeType":"281","messageId":"282","endLine":10,"endColumn":26},{"ruleId":"279","severity":1,"message":"334","line":12,"column":5,"nodeType":"281","messageId":"282","endLine":12,"endColumn":31},{"ruleId":"315","severity":1,"message":"316","line":39,"column":1,"nodeType":"317","endLine":159,"endColumn":2},{"ruleId":"335","severity":1,"message":"336","line":148,"column":46,"nodeType":"337","messageId":"338","endLine":148,"endColumn":48},{"ruleId":"298","severity":1,"message":"299","line":149,"column":29,"nodeType":"300","messageId":"301","endLine":149,"endColumn":31},{"ruleId":"279","severity":1,"message":"283","line":3,"column":9,"nodeType":"281","messageId":"282","endLine":3,"endColumn":13},{"ruleId":"279","severity":1,"message":"309","line":9,"column":8,"nodeType":"281","messageId":"282","endLine":9,"endColumn":13},{"ruleId":"279","severity":1,"message":"339","line":10,"column":9,"nodeType":"281","messageId":"282","endLine":10,"endColumn":20},{"ruleId":"279","severity":1,"message":"328","line":86,"column":17,"nodeType":"281","messageId":"282","endLine":86,"endColumn":30},{"ruleId":"279","severity":1,"message":"328","line":49,"column":17,"nodeType":"281","messageId":"282","endLine":49,"endColumn":30},{"ruleId":"279","severity":1,"message":"340","line":50,"column":17,"nodeType":"281","messageId":"282","endLine":50,"endColumn":31},{"ruleId":"284","replacedBy":"341"},{"ruleId":"286","replacedBy":"342"},{"ruleId":"279","severity":1,"message":"343","line":2,"column":5,"nodeType":"281","messageId":"282","endLine":2,"endColumn":20},{"ruleId":"279","severity":1,"message":"344","line":3,"column":5,"nodeType":"281","messageId":"282","endLine":3,"endColumn":23},{"ruleId":"279","severity":1,"message":"345","line":4,"column":5,"nodeType":"281","messageId":"282","endLine":4,"endColumn":16},{"ruleId":"279","severity":1,"message":"346","line":5,"column":5,"nodeType":"281","messageId":"282","endLine":5,"endColumn":17},{"ruleId":"279","severity":1,"message":"347","line":6,"column":5,"nodeType":"281","messageId":"282","endLine":6,"endColumn":19},{"ruleId":"279","severity":1,"message":"348","line":7,"column":5,"nodeType":"281","messageId":"282","endLine":7,"endColumn":22},{"ruleId":"279","severity":1,"message":"349","line":8,"column":5,"nodeType":"281","messageId":"282","endLine":8,"endColumn":28},{"ruleId":"279","severity":1,"message":"350","line":10,"column":5,"nodeType":"281","messageId":"282","endLine":10,"endColumn":20},{"ruleId":"279","severity":1,"message":"351","line":12,"column":5,"nodeType":"281","messageId":"282","endLine":12,"endColumn":25},{"ruleId":"279","severity":1,"message":"352","line":16,"column":5,"nodeType":"281","messageId":"282","endLine":16,"endColumn":19},{"ruleId":"279","severity":1,"message":"353","line":17,"column":5,"nodeType":"281","messageId":"282","endLine":17,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":27,"column":1,"nodeType":"317","endLine":71,"endColumn":2},{"ruleId":"279","severity":1,"message":"354","line":10,"column":8,"nodeType":"281","messageId":"282","endLine":10,"endColumn":17},{"ruleId":"279","severity":1,"message":"309","line":8,"column":8,"nodeType":"281","messageId":"282","endLine":8,"endColumn":13},{"ruleId":"279","severity":1,"message":"355","line":9,"column":9,"nodeType":"281","messageId":"282","endLine":9,"endColumn":29},{"ruleId":"310","severity":1,"message":"311","line":49,"column":21,"nodeType":"304","endLine":54,"endColumn":22},{"ruleId":"310","severity":1,"message":"356","line":132,"column":29,"nodeType":"304","endLine":132,"endColumn":66},{"ruleId":"279","severity":1,"message":"357","line":1,"column":9,"nodeType":"281","messageId":"282","endLine":1,"endColumn":21},{"ruleId":"279","severity":1,"message":"358","line":137,"column":11,"nodeType":"281","messageId":"282","endLine":137,"endColumn":15},{"ruleId":"279","severity":1,"message":"358","line":233,"column":11,"nodeType":"281","messageId":"282","endLine":233,"endColumn":15},{"ruleId":"279","severity":1,"message":"358","line":269,"column":11,"nodeType":"281","messageId":"282","endLine":269,"endColumn":15},{"ruleId":"279","severity":1,"message":"359","line":15,"column":5,"nodeType":"281","messageId":"282","endLine":15,"endColumn":18},{"ruleId":"279","severity":1,"message":"360","line":16,"column":5,"nodeType":"281","messageId":"282","endLine":16,"endColumn":22},{"ruleId":"335","severity":1,"message":"361","line":43,"column":61,"nodeType":"337","messageId":"362","endLine":43,"endColumn":63},{"ruleId":"315","severity":1,"message":"316","line":5,"column":1,"nodeType":"317","endLine":12,"endColumn":2},{"ruleId":"279","severity":1,"message":"305","line":3,"column":9,"nodeType":"281","messageId":"282","endLine":3,"endColumn":16},{"ruleId":"279","severity":1,"message":"283","line":8,"column":9,"nodeType":"281","messageId":"282","endLine":8,"endColumn":13},{"ruleId":"279","severity":1,"message":"308","line":8,"column":15,"nodeType":"281","messageId":"282","endLine":8,"endColumn":23},{"ruleId":"279","severity":1,"message":"339","line":11,"column":5,"nodeType":"281","messageId":"282","endLine":11,"endColumn":16},{"ruleId":"279","severity":1,"message":"363","line":13,"column":9,"nodeType":"281","messageId":"282","endLine":13,"endColumn":15},{"ruleId":"315","severity":1,"message":"316","line":24,"column":1,"nodeType":"317","endLine":76,"endColumn":2},{"ruleId":"364","severity":1,"message":"365","line":38,"column":17,"nodeType":"366","messageId":"301","endLine":38,"endColumn":26},{"ruleId":"279","severity":1,"message":"367","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":18},{"ruleId":"368","severity":1,"message":"369","line":44,"column":17,"nodeType":"370","messageId":"371","endLine":44,"endColumn":32,"fix":"372"},{"ruleId":"315","severity":1,"message":"316","line":8,"column":1,"nodeType":"317","endLine":18,"endColumn":2},{"ruleId":"279","severity":1,"message":"327","line":11,"column":5,"nodeType":"281","messageId":"282","endLine":11,"endColumn":15},{"ruleId":"315","severity":1,"message":"316","line":23,"column":1,"nodeType":"317","endLine":97,"endColumn":2},{"ruleId":"335","severity":1,"message":"336","line":43,"column":39,"nodeType":"337","messageId":"338","endLine":43,"endColumn":41},{"ruleId":"335","severity":1,"message":"336","line":62,"column":47,"nodeType":"337","messageId":"338","endLine":62,"endColumn":49},{"ruleId":"298","severity":1,"message":"299","line":63,"column":29,"nodeType":"300","messageId":"301","endLine":63,"endColumn":31},{"ruleId":"373","severity":1,"message":"374","line":65,"column":17,"nodeType":"281","messageId":"375","endLine":65,"endColumn":22},{"ruleId":"335","severity":1,"message":"336","line":66,"column":40,"nodeType":"337","messageId":"338","endLine":66,"endColumn":42},{"ruleId":"373","severity":1,"message":"374","line":79,"column":17,"nodeType":"281","messageId":"375","endLine":79,"endColumn":22},{"ruleId":"335","severity":1,"message":"336","line":80,"column":40,"nodeType":"337","messageId":"338","endLine":80,"endColumn":42},{"ruleId":"298","severity":1,"message":"376","line":81,"column":29,"nodeType":"300","messageId":"301","endLine":81,"endColumn":31},{"ruleId":"279","severity":1,"message":"289","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":16},{"ruleId":"279","severity":1,"message":"308","line":7,"column":5,"nodeType":"281","messageId":"282","endLine":7,"endColumn":13},"no-unused-vars","'http' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["377"],"no-negated-in-lhs",["378"],"'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'product' is defined but never used.","'useParams' is defined but never used.","'PRODUCT_LOADING' is defined but never used.","'PRODUCT_LOADED' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'element' is defined but never used.",["377"],["378"],"'Redirect' is defined but never used.","'store' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["377"],["378"],"'PRODUCT_DELETION_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Switch' is defined but never used.","'Route' is defined but never used.","'totalAmt' is assigned a value but never used.",["377"],["378"],["377"],["378"],["377"],["378"],"'LOGIN_FAIL' is defined but never used.","'cod_available' is assigned a value but never used.","'is_active' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'PRODUCT_DELETED' is defined but never used.","'PRODUCT_IMAGES_UPLOAD_FAIL' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'UPDATE_FAIL' is defined but never used.","'transaction_id' is assigned a value but never used.",["377"],["378"],"'CART_ITEM_ADDED' is defined but never used.","'CART_ITEM_ADD_FAIL' is defined but never used.","'CART_LOADED' is defined but never used.","'CART_LOADING' is defined but never used.","'CART_LOAD_FAIL' is defined but never used.","'CART_ITEM_DELETED' is defined but never used.","'CART_ITEM_DELETION_FAIL' is defined but never used.","'ADDRESS_LOADING' is defined but never used.","'ADDRESS_DELETE_ERROR' is defined but never used.","'ADDRESS_ADDING' is defined but never used.","'ADDRESS_ADDING_ERROR' is defined but never used.","'PropTypes' is defined but never used.","'PRODUCT_LOADING_FAIL' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'returnErrors' is defined but never used.","'body' is assigned a value but never used.","'FETCHING_DATA' is defined but never used.","'FETCHING_COMPLETE' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'object' is defined but never used.","no-dupe-keys","Duplicate key 'is_vendor'.","ObjectExpression","'httpCommon' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['message'] found.","Property","unnecessarilyComputedProperty",{"range":"379","text":"380"},"no-redeclare","'total' is already defined.","redeclared","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",[1198,1209],"'message'"]